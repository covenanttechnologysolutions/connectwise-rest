/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */
/**
 * @public
 */
export interface paths {
  '/cwa/api/v1/Tickets': {
    get: operations['Tickets_GetTicketList']
  }
  '/api/v1/APIToken': {
    get: operations['ApiToken_Get']
    post: operations['ApiToken_Post']
  }
  '/api/v1/System/ServerInformation': {
    get: operations['ServerInformation_GetServerInformationListAsync']
  }
  '/api/v1/DatabaseServerTime': {
    get: operations['DatabaseServerTime_GetDatabaseServerDateTimeWithUtcOffset']
  }
  '/api/v1/ExternalSystemCredentials/Clients/{clientId}': {
    get: operations['ExternalSystemCredentials_GetClientSystemCredentialsList']
  }
  '/api/v1/FeatureFlags': {
    get: operations['FeatureFlags_GetFeatureFlagList']
    post: operations['FeatureFlags_PostFeatureFlag']
  }
  '/api/v1/LicensedProducts': {
    get: operations['LicensedProducts_GetLicensedProducts']
  }
  '/api/v1/Links': {
    get: operations['Links_GetLinkList']
  }
  '/api/v1/PatchInformation': {
    get: operations['PatchInformation_GetPatchInformation']
  }
  '/api/v1/Permissions/Clients/{clientId}': {
    get: operations['Permissions_GetClientPermissionList']
  }
  '/api/v1/Permissions/Users': {
    get: operations['Permissions_GetUserPermissionList']
  }
  '/api/v1/Plugins': {
    get: operations['Plugins_GetPluginList']
  }
  '/api/v1/RebootPolicies': {
    get: operations['RebootPolicies_GetRebootPolicyListAsync']
  }
  '/api/v1/UserAudits': {
    get: operations['UserAudits_GetUserAuditList']
    post: operations['UserAudits_PostUserAudit']
  }
  '/api/v1/UserClasses': {
    get: operations['UserClasses_GetUserClassList']
  }
  '/api/v1/UserClasses/{userClassId}': {
    get: operations['UserClasses_GetUserClass']
  }
  '/api/v1/UserClasses/{userClassId}/WebExtensions': {
    get: operations['UserClasses_GetUserClassWebExtensionList']
    put: operations['UserClasses_PutUserClassWebExtensionList']
  }
  '/api/v1/Users': {
    get: operations['Users_GetUserList']
    post: operations['Users_AddUser']
  }
  '/api/v1/Users/{userId}': {
    get: operations['Users_GetUser']
    delete: operations['Users_DeleteUser']
    patch: operations['Users_PatchUser']
  }
  '/api/v1/Users/{userId}/AuthLink': {
    post: operations['UserAuthLink_PostAuthorizationInitialLink']
  }
  '/api/v1/Users/{userId}/ChangePassword': {
    post: operations['UserActions_ChangePassword']
  }
  '/api/v1/Users/{userId}/Favorites': {
    get: operations['UserFavorites_GetUserFavoriteList']
    post: operations['UserFavorites_PostUserFavorite']
  }
  '/api/v1/Users/{userId}/UserAccess': {
    get: operations['UserAccess_GetUserPermissionsAsync']
  }
  '/api/v1/Users/{userId}/Settings': {
    get: operations['UserSettings_GetUserSettingList']
    post: operations['UserSettings_PostUserSetting']
  }
  '/api/v1/Users/Folders': {
    get: operations['UserFolders_GetUserFolderList']
    post: operations['UserFolders_PostUserFolder']
  }
  '/api/v1/Users/Folders/{userFolderId}': {
    get: operations['UserFolders_GetUserFolder']
    delete: operations['UserFolders_DeleteUserFolder']
    patch: operations['UserFolders_PatchUserFolder']
  }
  '/api/v1/drives/{driveId}/drivestats/daily': {
    get: operations['DriveStats_GetDailyDriveStats']
  }
  '/api/v1/drives/{driveId}/drivestats/weekly': {
    get: operations['DriveStats_GetWeeklyDriveStats']
  }
  '/api/v1/drives/{driveId}/drivestats/yearly': {
    get: operations['DriveStats_GetYearlyDriveStats']
  }
  '/api/v1/drives/{driveId}/drivestats/monthly': {
    get: operations['DriveStats_GetMonthlyDriveStats']
  }
  '/api/v1/Statistics/Drives': {
    get: operations['Statistics_GetDriveStatisticsList']
  }
  '/api/v1/Searches': {
    get: operations['Searches_GetSearchList']
  }
  '/api/v1/SearchFolders': {
    get: operations['SearchFolders_GetSearchFolderList']
    post: operations['SearchFolders_PostSearchFolder']
  }
  '/api/v1/ScriptFolders': {
    get: operations['ScriptFolders_GetScriptFolderList']
    post: operations['ScriptFolders_PostScriptFolder']
  }
  '/api/v1/ScriptFolders/Hierarchy': {
    get: operations['ScriptFolders_GetScriptFolderHierarchy']
  }
  '/api/v1/ScriptFolders/{entityId}': {
    get: operations['ScriptFolders_GetScriptFolder']
    delete: operations['ScriptFolders_DeleteScriptFolder']
    patch: operations['ScriptFolders_PatchScriptFolder']
  }
  '/api/v1/Scripting/RunningScripts': {
    get: operations['RunningScript_GetRunningScripts']
  }
  '/api/v1/Scripting/ScriptSchedules': {
    get: operations['ScheduledScript_GetScheduledScripts']
  }
  '/api/v1/Scripting/ScriptSchedules/{scheduledId}': {
    delete: operations['ScheduledScript_DeleteScriptSchedule']
    patch: operations['ScheduledScript_PatchScriptSchedule']
  }
  '/api/v1/Scripts': {
    get: operations['Scripts_GetScriptList']
    post: operations['Scripts_PostScript']
  }
  '/api/v1/Scripts/{scriptId}/Copy': {
    post: operations['ScriptActions_GetScriptCopyAsync']
  }
  '/api/v1/RemoteAgentSchedules': {
    get: operations['RemoteAgentSchedules_GetRemoteAgentScheduleList']
    post: operations['RemoteAgentSchedules_PostRemoteAgentSchedule']
  }
  '/api/v1/RemoteAgentTemplates': {
    get: operations['RemoteAgentTemplates_GetRemoteAgentTemplateListAsync']
    post: operations['RemoteAgentTemplates_PostRemoteAgentTemplateAsync']
  }
  '/api/v1/Locations/{locationId}/ProbeConfiguration': {
    get: operations['ProbeConfiguration_GetProbeConfiguration']
    post: operations['ProbeConfiguration_PostProbeConfiguration']
    delete: operations['ProbeConfiguration_DeleteProbeConfiguration']
    patch: operations['ProbeConfiguration_PatchProbeConfiguration']
  }
  '/api/v1/Locations/{locationId}/UpgradeProbe': {
    post: operations['ProbeConfiguration_UpgradeProbe']
  }
  '/api/v1/Lookups/ProbeEventLevels': {
    get: operations['Lookups_GetProbeEventLevelList']
  }
  '/api/v1/Lookups/ScanFrequencies': {
    get: operations['Lookups_GetScanFrequencyList']
  }
  '/api/v1/Lookups/SnmpEncryptionMethods': {
    get: operations['Lookups_GetSnmpEncryptionMethodList']
  }
  '/api/v1/Lookups/SnmpHashMethods': {
    get: operations['Lookups_GetSnmpHashMethodList']
  }
  '/api/v1/Lookups/StatusScanNetworkPortOptions': {
    get: operations['Lookups_GetStatusScanNetworkPortOptionList']
  }
  '/api/v1/ProbeConfiguration/{probeConfigurationId}/AgentPushCredentials': {
    get: operations['ProbeConfiguration_GetAgentPushCredentialsList']
    put: operations['ProbeConfiguration_PutAgentPushCredentialsList']
    delete: operations['ProbeConfiguration_DeleteAgentPushCredentials']
  }
  '/api/v1/ProbeConfiguration/{probeConfigurationId}/SnmpConfiguration': {
    get: operations['ProbeConfiguration_GetProbeSnmpConfigurationAsync']
    patch: operations['ProbeConfiguration_PatchProbeSnmpConfigurationAsync']
  }
  '/api/v1/ProbeConfiguration/EnableProbe/{computerId}': {
    post: operations['ProbeConfiguration_EnableProbe']
  }
  '/api/v1/ProbeEvents': {
    get: operations['ProbeEvents_GetProbeEventList']
  }
  '/api/v1/UserProfiles': {
    get: operations['UserProfiles_GetUserProfile']
  }
  '/api/v1/ApprovalPolicies': {
    get: operations['ApprovalPolicy_GetApprovalPolicyListAsync']
  }
  '/api/v1/GroupPatchingPolicies': {
    get: operations['GroupPatchingPolicies_GetGroupPatchingPolicyListAsync']
  }
  '/api/v1/MicrosoftUpdatePolicies': {
    get: operations['MicrosoftUpdatePolicies_GetMicrosoftUpdatePolicyListAsync']
  }
  '/api/v1/PatchActions/DeployAllApproved': {
    post: operations['PatchActions_DeployAllApproved']
  }
  '/api/v1/PatchActions/DeployAllSecurity': {
    post: operations['PatchActions_DeployAllSecurity']
  }
  '/api/v1/PatchActions/ReattemptFailed': {
    post: operations['PatchActions_ReattemptFailed']
  }
  '/api/v1/PatchActions/SetToPilotStage': {
    post: operations['PatchActions_SetToPilotStage']
  }
  '/api/v1/PatchActions/SetToProductionStage': {
    post: operations['PatchActions_SetToProductionStage']
  }
  '/api/v1/PatchActions/SetToTestStage': {
    post: operations['PatchActions_SetToTestStage']
  }
  '/api/v1/PatchHistory': {
    get: operations['PatchHistory_GetPatchHistoryListAsync']
  }
  '/api/v1/ThirdPartyUpdatePolicies': {
    get: operations['ThirdPartyUpdatePolicies_GetThirdPartyUpdatePolicyListAsync']
  }
  '/api/v1/NetworkDevices': {
    get: operations['NetworkDevices_GetNetworkDeviceList']
    post: operations['NetworkDevices_PostNetworkDevice']
  }
  '/api/v1/routers': {
    get: operations['Routers_GetRouters']
  }
  '/api/v1/InternalMonitorResults': {
    get: operations['InternalMonitorResults_GetInternalMonitorResultList']
  }
  '/api/v1/MonitorHistory': {
    get: operations['MonitorsHistory_GetMonitorHistoryList']
  }
  '/api/v1/Monitors/{monitorId}/CollectedData/DailyAverages': {
    get: operations['MonitorsCollectedData_GetDailyCollectedData']
  }
  '/api/v1/Monitors/{monitorId}/CollectedData/MonthlyAverages': {
    get: operations['MonitorsCollectedData_GetMonthlyCollectedData']
  }
  '/api/v1/Monitors/{monitorId}/CollectedData/WeeklyAverages': {
    get: operations['MonitorsCollectedData_GetWeeklyCollectedData']
  }
  '/api/v1/Monitors/{monitorId}/CollectedData/YearlyAverages': {
    get: operations['MonitorsCollectedData_GetYearlyCollectedData']
  }
  '/api/v1/Monitors/{monitorId}/DataCollectionSettings': {
    get: operations['MonitorDataCollectionSettings_GetDataCollectionSettingsForMonitorAsync']
  }
  '/api/v1/MonitorStatistics': {
    get: operations['MonitorsStatistics_GetMonitorStatisticsList']
  }
  '/api/v1/SensorChecks': {
    get: operations['SensorChecks_GetSensorCheckList']
  }
  '/api/v1/MaintenanceWindowDefinitions': {
    get: operations['MaintenanceWindowDefinition_GetDefinitionList']
  }
  '/api/v1/AVTemplatePolicies': {
    get: operations['AVTemplatePolicies_GetAntivirusTemplatePolicyList']
    post: operations['AVTemplatePolicies_PostAntivirusTemplatePolicy']
  }
  '/api/v1/AVTemplatePolicyData': {
    get: operations['AVTemplatePolicyData_GetAntivirusTemplatePolicyDataList']
    post: operations['AVTemplatePolicyData_PostAntivirusTemplatePolicyData']
  }
  '/api/v1/Groups': {
    get: operations['Groups_GetGroupList']
    post: operations['Groups_PostGroup']
  }
  '/api/v1/TemplateAvailableProperties': {
    get: operations['TemplateAvailableProperties_GetTemplateAvailablePropertyList']
    post: operations['TemplateAvailableProperties_PostTemplateAvailableProperty']
  }
  '/api/v1/TemplateProperties': {
    get: operations['TemplateProperties_GetTemplatePropertyList']
    post: operations['TemplateProperties_PostTemplateProperty']
  }
  '/api/v1/EventLogs': {
    get: operations['EventLog_GetEventLogsAsync']
  }
  '/api/v1/DataViewFolders': {
    get: operations['DataViewFolders_GetDataViewFolderList']
  }
  '/api/v1/DataViews': {
    get: operations['DataViews_GetDataViewList']
  }
  '/api/v1/Contacts': {
    get: operations['Contacts_GetContactList']
  }
  '/api/v1/SystemContacts': {
    get: operations['SystemContacts_GetSystemContactList']
  }
  '/api/v2/Contacts': {
    get: operations['V2Contacts_GetContactList']
  }
  '/api/v2/Contacts/{contactId}': {
    get: operations['V2Contacts_GetContact']
  }
  '/api/v1/ComputerMenus': {
    get: operations['ComputerMenus_GetComputerMenuList']
    post: operations['ComputerMenus_PostComputerMenu']
  }
  '/api/v1/Computers': {
    get: operations['Computers_GetComputerList']
  }
  '/api/v1/Computers/{computerId}/Alerts': {
    get: operations['ComputerAlerts_GetComputerAlerts']
  }
  '/api/v1/Computers/{computerId}/AlertSuspensions/MaintenanceWindow': {
    get: operations['MaintenanceAlertSuspensions_GetSuspensionList']
  }
  '/api/v1/Computers/{computerId}/AlertSuspensions/TemplateDiversion': {
    get: operations['TemplateAlertSuspension_GetSuspensionList']
  }
  '/api/v1/Computers/{computerId}/bios': {
    get: operations['ComputerBios_GetComputerBios']
  }
  '/api/v1/Computers/{computerId}/CommandExecute': {
    get: operations['CommandExecute_GetCommandExecuteList']
    post: operations['CommandExecute_PostCommandExecute']
  }
  '/api/v1/Computers/{computerId}/CommandHistory': {
    get: operations['CommandHistory_GetCommandHistoryList']
  }
  '/api/v1/Computers/{computerId}/ComputerPatchingPolicies': {
    get: operations['ComputerPatchingPolicies_GetComputerPatchingPolicyListAsync']
  }
  '/api/v1/Computers/{computerId}/Devices': {
    get: operations['Computers_GetComputerDeviceList']
  }
  '/api/v1/computers/{computerId}/drivers': {
    get: operations['ComputerDrivers_GetComputerDrivers']
  }
  '/api/v1/Computers/{computerId}/Drives/{driveId}/SmartData': {
    get: operations['ComputerDrives_GetComputerDriveSmartDataList']
  }
  '/api/v1/Computers/{computerId}/EffectivePatchingPolicy': {
    get: operations['ComputerEffectivePatchingPolicy_GetComputerEffectivePatchingPolicy']
  }
  '/api/v1/Computers/{computerId}/MicrosoftUpdates': {
    get: operations['ComputerMicrosoftUpdateData_GetComputerMicrosoftUpdateDataListAsync']
  }
  '/api/v1/Computers/{computerId}/MonitorAlertSuspensions': {
    get: operations['MonitorAlertSuspensions_GetSuspensionList']
    post: operations['MonitorAlertSuspensions_PostSuspension']
  }
  '/api/v1/Computers/{computerId}/Monitors': {
    get: operations['ComputerMonitors_GetComputerMonitorsList']
  }
  '/api/v1/Computers/{computerId}/OperatingSystem': {
    get: operations['ComputerOperatingSystem_GetComputerOperatingSystem']
  }
  '/api/v1/Computers/{computerId}/PatchingStats': {
    get: operations['DevicePatchingStatistics_GetDevicePatchingStatisticsAsync']
  }
  '/api/v1/Computers/{computerId}/PatchJobs': {
    get: operations['PatchJob_GetComputerPatchJobListAsync']
  }
  '/api/v1/Computers/{computerId}/Printers': {
    get: operations['ComputerPrinters_GetComputerPrintersList']
  }
  '/api/v1/Computers/{computerId}/Processors': {
    get: operations['Computers_GetComputerProcessorList']
  }
  '/api/v1/Computers/{computerId}/RunningScripts': {
    get: operations['ComputerRunningScripts_GetComputerRunningScripts']
  }
  '/api/v1/Computers/{computerId}/ScheduledScripts': {
    get: operations['ScheduledScript_GetComputerScheduledScripts']
    post: operations['ScheduledScript_PostComputerScheduledScript']
  }
  '/api/v1/Computers/{computerId}/ScheduledScripts/{entityId}': {
    get: operations['ScheduledScript_GetComputerScheduledScript']
  }
  '/api/v1/Computers/{computerId}/ScheduledTasks': {
    get: operations['ComputerScheduledTasks_GetScheduledTaskList']
    post: operations['ComputerScheduledTasks_PostScheduledTask']
  }
  '/api/v1/Computers/{computerId}/ScriptHistory': {
    get: operations['ComputerScriptHistory_GetComputerScriptHistoryList']
  }
  '/api/v1/Computers/{computerId}/Sensors': {
    get: operations['ComputerSensor_GetComputerSensorListAsync']
  }
  '/api/v1/Computers/{computerId}/Services': {
    get: operations['Computers_GetComputerServiceList']
  }
  '/api/v1/Computers/{computerId}/Software': {
    get: operations['Computers_GetComputerSoftwareList']
  }
  '/api/v1/computers/{computerId}/software/{softwareId}/uninstall': {
    post: operations['ComputerSoftwareActions_UninstallSoftware']
  }
  '/api/v1/Computers/{computerId}/SystemSlots': {
    get: operations['ComputerSystemSlots_GetComputerSystemSlotList']
  }
  '/api/v1/Computers/{computerId}/ThirdPartyPatches': {
    get: operations['ComputerThirdPartyPatches_GetComputerThirdPartyPatchListAsync']
  }
  '/api/v1/Computers/{computerId}/Ups': {
    get: operations['ComputerUps_GetComputerUpsListAsync']
  }
  '/api/v1/Computers/{computerId}/VideoCards': {
    get: operations['Computers_GetComputerVideoCardList']
  }
  '/api/v1/Computers/Chassis': {
    get: operations['Chassis_GetComputerChassis']
  }
  '/api/v1/Computers/Drives': {
    get: operations['ComputerDrives_GetComputerDriveList']
  }
  '/api/v1/Computers/MaintenanceModes': {
    get: operations['Computers_GetComputerMaintenanceModeList']
  }
  '/api/v1/Computers/MemorySlots': {
    get: operations['Computers_GetComputerMemorySlotList']
  }
  '/api/v1/Computers/Software': {
    get: operations['Computers_GetComputerSoftwareList']
  }
  '/api/v1/RetiredAssets': {
    get: operations['RetiredAssets_GetRetiredAssetList']
  }
  '/api/v1/services/{serviceId}/classify': {
    post: operations['Services_ClassifyService']
  }
  '/api/v1/VirusScannerDefs': {
    get: operations['VirusScannerDefs_GetVirusScannerDefinitionList']
    post: operations['VirusScannerDefs_PostVirusScannerDefinition']
  }
  '/api/v1/Clients': {
    get: operations['Clients_GetClientList']
    post: operations['Clients_PostClient']
  }
  '/api/v1/clients/{clientId}/documents': {
    get: operations['Documents_GetAllDocuments']
    post: operations['Documents_PostDocument']
  }
  '/api/v1/clients/{clientId}/licenses': {
    get: operations['ManagedLicenses_GetManagedLicenses']
    post: operations['ManagedLicenses_PostManagedLicense']
  }
  '/api/v1/clients/{clientId}/permissions/{userClassId}': {
    get: operations['ClientPermissions_GetUserClassPermissions']
    put: operations['ClientPermissions_PutUserClassPermissions']
    post: operations['ClientPermissions_PostUserClassPermissions']
    delete: operations['ClientPermissions_DeleteUserClassPermissions']
  }
  '/api/v1/clients/{clientId}/productkeys': {
    get: operations['ProductKeys_GetProductKeys']
    post: operations['ProductKeys_PostProductKey']
  }
  '/api/v1/Locations': {
    get: operations['Locations_GetLocationList']
    post: operations['Locations_PostLocation']
  }
  '/api/v1/Commands': {
    get: operations['Commands_GetCommandList']
  }
  '/api/v1/Commands/{entityId}': {
    get: operations['Commands_GetCommand']
  }
}

/**
 * @public
 */
export interface components {
  schemas: {
    'LabTech.RESTApi.QueryOptions': {
      OrderBy?: components['schemas']['LabTech.RESTApi.QueryOptionOrderBy']
      /** Format: int32 */
      Page?: number
      /** Format: int32 */
      PageSize?: number
      Condition?: string
      Expands?: {
        [key: string]: components['schemas']['LabTech.RESTApi.QueryOptionExpand']
      }
      IncludedFields?: string[]
      ExcludedFields?: string[]
      Ids?: string[]
      /** Format: int32 */
      Timeout?: number
    }
    'LabTech.RESTApi.QueryOptionOrderBy': {
      Name?: string
      /** @enum {string} */
      Type?: 'Undefined' | 'Ascending' | 'Descending'
    }
    'LabTech.RESTApi.QueryOptionExpand': {
      FieldName?: string
      /** Format: int32 */
      Page?: number
      /** Format: int32 */
      PageSize?: number
      Condition?: string
      Expands?: {
        [key: string]: components['schemas']['LabTech.RESTApi.QueryOptionExpand']
      }
      OrderBy?: components['schemas']['LabTech.RESTApi.QueryOptionOrderBy']
      IncludedFields?: string[]
      ExcludedFields?: string[]
    }
    'Automate.Api.Domain.Contracts.AccountInformation': {
      IsTrialAccount?: boolean
    }
    'Automate.Api.Domain.Contracts.Alerts.Alert': {
      /** Format: int32 */
      AlertId?: number
      Client?: components['schemas']['Automate.Api.Domain.Contracts.Alerts.AlertClient']
      Computer?: components['schemas']['Automate.Api.Domain.Contracts.Alerts.AlertComputer']
      Device?: components['schemas']['Automate.Api.Domain.Contracts.Alerts.AlertDevice']
      Location?: components['schemas']['Automate.Api.Domain.Contracts.Alerts.AlertLocation']
      Monitor?: components['schemas']['Automate.Api.Domain.Contracts.Alerts.AlertMonitor']
      /** Format: date-time */
      AlertDate?: string
      Severity?: components['schemas']['Automate.Api.Domain.Contracts.Alerts.AlertSeverityItem']
      Source?: string
      Message?: string
      FieldName?: string
      AlertAge?: string
    }
    'Automate.Api.Domain.Contracts.Alerts.AlertClient': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Alerts.AlertComputer': {
      /** Format: int32 */
      Id?: number
      Name?: string
      ComputerStatus?: string
    }
    'Automate.Api.Domain.Contracts.Alerts.AlertDevice': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Alerts.AlertLocation': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Alerts.AlertMonitor': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Alerts.AlertSeverityItem': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Alerts.AlertTemplate': {
      /** Format: int32 */
      AlertTemplateId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Security.AuthInformation': {
      AllowDirect?: boolean
      AllowServiceRegistration?: boolean
      AutomateRedirectUri?: string
      Services?: components['schemas']['Automate.Api.Domain.Contracts.Security.AuthService'][]
    }
    'Automate.Api.Domain.Contracts.Security.AuthService': {
      /** Format: int32 */
      ServiceId?: number
      ServiceName?: string
      ServiceURI?: string
      /** Format: int32 */
      ServiceType?: number
      ClientId?: string
      IsDefault?: boolean
      IsAutomatic?: boolean
      ServiceGuid?: string
      IsEnabled?: boolean
      IsLocalLoginEnabled?: boolean
      /** Format: int32 */
      AuthenticationType?: number
    }
    'Automate.Api.Domain.Contracts.Security.TokenCredentials': {
      Username?: string
      Password?: string
      TwoFactorPasscode?: string
    }
    'Automate.Api.Domain.Contracts.Security.TokenResult': {
      AccessToken?: string
      TokenType?: string
      /** Format: date-time */
      ExpirationDate?: string
      /** Format: date-time */
      AbsoluteExpirationDate?: string
      UserId?: string
      IsTwoFactorRequired?: boolean
      IsInternalTwoFactorRequired?: boolean
    }
    'Automate.Api.Domain.Contracts.Security.PkceRequest': {
      AuthorizationCode?: string
      CodeVerifier?: string
      ClientId?: string
      RedirectUri?: string
    }
    'Automate.Api.Domain.Contracts.Security.DisableTokenRequest': {
      SecurityToken?: string
    }
    'LabTech.RESTApi.Security.AuthServiceCredentials': {
      /** Format: int32 */
      ServiceId?: number
      ServiceToken?: string
    }
    'Automate.Api.Domain.Contracts.Patching.ApprovalPolicy': {
      /** Format: int32 */
      Id?: number
      Name?: string
      IsDefaultPolicy?: boolean
      HasStaging?: boolean
      /** Format: int32 */
      TestDuration?: number
      /** Format: int32 */
      PilotDuration?: number
      AutomaticApprovalSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.AutomaticApprovalSettings']
      AutomaticIgnoreSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.AutomaticPolicySettings']
      AutomaticDenySettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.AutomaticPolicySettings']
    }
    'Automate.Api.Domain.Contracts.Patching.AutomaticApprovalSettings': {
      /** Format: int32 */
      CvssLowerBound?: number
      Severities?: string[]
      Categories?: components['schemas']['Automate.Api.Domain.Contracts.Patching.WindowsUpdateCategory'][]
      Titles?: string[]
    }
    'Automate.Api.Domain.Contracts.Patching.AutomaticPolicySettings': {
      Severities?: string[]
      Categories?: components['schemas']['Automate.Api.Domain.Contracts.Patching.WindowsUpdateCategory'][]
      Titles?: string[]
    }
    'Automate.Api.Domain.Contracts.Patching.WindowsUpdateCategory': {
      /** Format: int32 */
      CategoryId?: number
      CategoryName?: string
    }
    'LabTech.RESTApi.Models.PatchOperation': {
      Op?: string
      Path?: string
      Value?: { [key: string]: unknown }
    }
    'Automate.Api.Domain.Contracts.Patching.ApprovalPolicyStats': {
      /** Format: int32 */
      ApprovalPolicyId?: number
      ApprovalPolicyName?: string
      /** Format: int32 */
      PendingApprovalCount?: number
    }
    'Automate.Api.Domain.Models.AuditAnalyticsBundle': {
      /** Format: int32 */
      AuditActionId?: number
      /** Format: int32 */
      ExternalId?: number
      SecondaryIdentifier?: string
      UnsanitizedBaseMessage?: string
      ExtraLogValues?: components['schemas']['System.Collections.Generic.KeyValuePair_System.String_System.String_'][]
      SanitizedAnalyticsDescription?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.AuthLink.UserAuthLinkStatus': {
      /** Format: int32 */
      ServiceId?: number
      IsSsoEnabled?: boolean
      IsLocalLoginEnabled?: boolean
      IsEligibleForSso?: boolean
      IsAccountLinked?: boolean
    }
    'LabTech.Models.AVTemplatePolicy': {
      TemplatePolicyId?: string
      Name?: string
      Description?: string
      GUID?: string
    }
    'LabTech.Models.AVTemplatePolicyData': {
      TemplatePolicyId?: string
      PluginGUID?: string
      Data?: string
    }
    'Automate.Api.Domain.Contracts.Patching.BatchingContracts.AdvanceStageRequest': {
      HotfixesToAdvance?: components['schemas']['Automate.Api.Domain.Contracts.Patching.BatchingContracts.HotfixOperatingSystemCombination'][]
    }
    'Automate.Api.Domain.Contracts.Patching.BatchingContracts.HotfixOperatingSystemCombination': {
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      HotfixId?: string
      OperatingSystem?: string
    }
    'Automate.Api.Domain.Contracts.BatchApprovalPolicies.WindowsApprovalPolicyPatchBatchRequest': {
      PatchPolicies?: components['schemas']['Automate.Api.Domain.Contracts.BatchApprovalPolicies.WindowsApprovalPolicyPatch'][]
    }
    'Automate.Api.Domain.Contracts.BatchApprovalPolicies.WindowsApprovalPolicyPatch': {
      /** Format: int32 */
      ApprovalActionId?: number
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      HotfixId?: string
      OperatingSystem?: string
    }
    'Automate.Api.Domain.Contracts.BatchApprovalPolicies.ApprovalPolicyThirdPartyPatchRequest': {
      PatchPolicies?: components['schemas']['Automate.Api.Domain.Contracts.BatchApprovalPolicies.ApprovalPolicyThirdPartyPatchSetting'][]
    }
    'Automate.Api.Domain.Contracts.BatchApprovalPolicies.ApprovalPolicyThirdPartyPatchSetting': {
      /** Format: int32 */
      PatchApproval?: number
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      LTProductKey?: string
      Version?: string
    }
    'Automate.Api.Domain.Contracts.BatchBinaryExtension.BinaryExtensionBatchRequest': {
      BinaryExtensionIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchContacts.WebClientAccessBatchRequest': {
      /** @enum {string} */
      RequestType?: 'Invite' | 'Reset'
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchContacts.WebClientAccessBatchResponse': {
      WebClientAccessResults?: components['schemas']['Automate.Api.Domain.Contracts.BatchContacts.WebClientAccessBatchResult'][]
      ContainsUnsuccessfulResults?: boolean
    }
    'Automate.Api.Domain.Contracts.BatchContacts.WebClientAccessBatchResult': {
      /** Format: int32 */
      ContactId?: number
      ResultDetails?: components['schemas']['Automate.Api.Domain.Contracts.ResponseResult']
    }
    'Automate.Api.Domain.Contracts.ResponseResult': {
      /** Format: int32 */
      ResultStatus?: number
      /** Format: int32 */
      ReasonCode?: number
      Message?: string
    }
    'Automate.Api.Domain.Contracts.BatchContacts.ContactPermissionBatchRequest': {
      /** @enum {string} */
      RequestType?: 'Add' | 'Remove'
      ContactIds?: number[]
      Permissions?: string[]
    }
    'Automate.Api.Domain.Contracts.BatchContacts.ContactPermissionBatchResponse': {
      ContactPermissionResults?: components['schemas']['Automate.Api.Domain.Contracts.BatchContacts.ContactPermissionBatchResult'][]
      ContainsUnsuccessfulResults?: boolean
    }
    'Automate.Api.Domain.Contracts.BatchContacts.ContactPermissionBatchResult': {
      /** Format: int32 */
      ContactId?: number
      ResultDetails?: components['schemas']['Automate.Api.Domain.Contracts.ResponseResult']
    }
    'Automate.Api.Domain.Contracts.BatchUsers.GeneratePasswordResetTokenBatchRequest': {
      UserIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteResendInventoryCommandBatchRequest': {
      InventoryTypes?: number[]
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchMaintenanceModes.MaintenanceModes.MaintenanceModeQueueBatchRequest': {
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
      /** Format: date-time */
      StartDate?: string
      /** Format: int32 */
      DurationInMinutes?: number
      Mode?: string
      Comments?: string
    }
    'Automate.Api.Domain.Contracts.BatchCommands.SetMasterMode.SetMasterModeBatchRequest': {
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
      MasterModeType?: string
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Probe.ExecuteProbeBatchRequest': {
      ProbeIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Probe.ExecuteProbeBatchResponse': {
      ProbeCommandResults?: components['schemas']['Automate.Api.Domain.Contracts.BatchCommands.Probe.ExecuteProbeCommandResult'][]
      ContainsUnsuccessfulResults?: boolean
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Probe.ExecuteProbeCommandResult': {
      /** Format: int32 */
      ProbeId?: number
      ResultDetails?: components['schemas']['Automate.Api.Domain.Contracts.ResponseResult']
    }
    'Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchRequest': {
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
      /** Format: int32 */
      ScriptId?: number
      ScriptGuid?: string
      Schedule?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptScheduleSettings']
      Parameters?: components['schemas']['System.Collections.Generic.KeyValuePair_System.String_System.String_'][]
      UseAgentTime?: boolean
      /** Format: date-time */
      StartDate?: string
      /** Format: date-time */
      ExpireDate?: string
      OfflineActionFlags?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScriptOfflineActionFlags']
      DistributionWindow?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.DistributionWindow']
      /** Format: int32 */
      Priority?: number
      IncludeSubGroups?: boolean
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptScheduleSettings': {
      ScriptScheduleFrequency?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.ScriptScheduleFrequency']
      MinutelySettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.MinutelyScheduleFrequency']
      HourlySettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.HourlyScheduleFrequency']
      DailySettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.DailyScheduleFrequency']
      WeeklySettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.WeeklyScheduleFrequency']
      MonthlySettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.MonthlyScheduleFrequency']
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScriptOfflineActionFlags': {
      SkipsOfflineAgents?: boolean
      WakesOfflineAgents?: boolean
      OnlyRunsOnOfflineAgents?: boolean
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.DistributionWindow': {
      DistributionWindowType?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.DistributionWindowType']
      /** Format: int32 */
      Amount?: number
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.ScriptScheduleFrequency': {
      /** Format: int32 */
      ScriptScheduleFrequencyId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.MinutelyScheduleFrequency': {
      /** Format: int32 */
      MinutelyInterval?: number
      ExclusionStartTime?: string
      ExclusionEndTime?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.HourlyScheduleFrequency': {
      /** Format: int32 */
      HourlyInterval?: number
      ExclusionStartTime?: string
      ExclusionEndTime?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.DailyScheduleFrequency': {
      RunsAt?: string
      /** Format: int32 */
      DailyInterval?: number
      DaysOfWeekSettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.DaysOfWeekSettings']
      DailyRepeatSettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.DailyRepeatSettings']
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.WeeklyScheduleFrequency': {
      RunsAt?: string
      WeeksOfMonthSettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.WeeksOfMonthSettings']
      DaysOfWeekSettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.DaysOfWeekSettings']
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.MonthlyScheduleFrequency': {
      RunsAt?: string
      /** Format: int32 */
      MonthlyInterval?: number
      /** Format: int32 */
      Day?: number
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.DistributionWindowType': {
      /** Format: int32 */
      DistributionWindowTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.DaysOfWeekSettings': {
      Sunday?: boolean
      Monday?: boolean
      Tuesday?: boolean
      Wednesday?: boolean
      Thursday?: boolean
      Friday?: boolean
      Saturday?: boolean
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.DailyRepeatSettings': {
      DailyScriptRepeatFrequency?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.DailyScriptRepeatFrequency']
      /** Format: int32 */
      DailyRepeatInterval?: number
      /** Format: int32 */
      MaximumRepetitions?: number
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.WeeksOfMonthSettings': {
      First?: boolean
      Second?: boolean
      Third?: boolean
      Fourth?: boolean
      Last?: boolean
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.Frequency.DailyScriptRepeatFrequency': {
      /** Format: int32 */
      DailyScriptRepeatFrequencyId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchResponse': {
      ScriptResults?: components['schemas']['Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchResult'][]
      ContainsUnsuccessfulResults?: boolean
    }
    'Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchResult': {
      /** Format: int32 */
      EntityId?: number
      ResultDetails?: components['schemas']['Automate.Api.Domain.Contracts.ResponseResult']
    }
    'Automate.Api.Domain.Contracts.BatchCommands.SendTo.SendToCommandBatchRequest': {
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
      /** @enum {string} */
      TargetType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      /** Format: int32 */
      TargetId?: number
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputersBatchRequest': {
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteRebootCommandBatchRequest': {
      /** Format: int32 */
      RebootType?: number
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputersBatchResponse': {
      ComputerCommandResultList?: components['schemas']['Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputerCommandResult'][]
      ContainsUnsuccessfulResults?: boolean
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputerCommandResult': {
      /** Format: int32 */
      ComputerId?: number
      /** Format: int32 */
      CommandId?: number
      ResultDetails?: components['schemas']['Automate.Api.Domain.Contracts.ResponseResult']
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Probe.ExecuteToggleProbeCommandBatchRequest': {
      ComputerIds?: number[]
      EnableProbe?: boolean
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteToggleServiceUserCommandBatchRequest': {
      UseLocalAccount?: boolean
      LocalAccountCredentials?: components['schemas']['Automate.Api.Domain.Contracts.BatchCommands.Computer.ToggleServiceUserLocalAccountCredentials']
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Computer.ToggleServiceUserLocalAccountCredentials': {
      Username?: string
      Password?: string
    }
    'Automate.Api.Domain.Contracts.BatchUsers.UserClassMembership.UserClassMembershipRequest': {
      UserIds?: number[]
      UserClassIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchUsers.UsersGroupMembership.UsersGroupMembershipBatchRequest': {
      UserIds?: number[]
      GroupIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchUsers.UsersUnlock.UsersUnlockRequest': {
      UserIds?: number[]
    }
    'Automate.Api.Domain.Contracts.BatchWebExtension.WebExtensionBatchRequest': {
      WebExtensionIds?: number[]
    }
    'Automate.Api.Domain.Contracts.SystemExtensions.Binary.BinaryExtension': {
      Category?: string
      Description?: string
      /** Format: byte */
      FileData?: string
      IsEnabled?: boolean
      IsLoadedInAutomationServer?: boolean
      IsLoadedInIIS?: boolean
      IsRemoteAgentExtension?: boolean
      /** Format: date-time */
      ReleaseDate?: string
      RunStyle?: components['schemas']['Automate.Api.Domain.Contracts.SystemExtensions.Binary.RunStyle']
      Author?: string
      FileChecksum?: string
      FileName?: string
      ExtensionName?: string
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      ExtensionGuid?: string
      /** Format: int32 */
      ExtensionId?: number
      Version?: string
    }
    'Automate.Api.Domain.Contracts.SystemExtensions.Binary.RunStyle': {
      /** Format: int32 */
      RunStyleId?: number
      Name?: string
    }
    'LabTech.Models.CacheControl': {
      CacheId?: string
      /** Format: date-time */
      CustomCommands?: string
      /** Format: date-time */
      CustomMenus?: string
      /** Format: date-time */
      Huds?: string
      /** Format: date-time */
      Apps?: string
      /** Format: date-time */
      UserFolders?: string
      /** Format: date-time */
      Users?: string
      /** Format: date-time */
      Schedules?: string
      /** Format: date-time */
      Templates?: string
      /** Format: date-time */
      DataViewFolders?: string
      /** Format: date-time */
      Dataviews?: string
      /** Format: date-time */
      ReportFolders?: string
      /** Format: date-time */
      Reports?: string
      /** Format: date-time */
      Links?: string
      /** Format: date-time */
      ScriptFolders?: string
      /** Format: date-time */
      Scripts?: string
      /** Format: date-time */
      SensorChecks?: string
      /** Format: date-time */
      AuditActions?: string
      /** Format: date-time */
      RemoteCommands?: string
      /** Format: date-time */
      Contacts?: string
      /** Format: date-time */
      TimeCategory?: string
      /** Format: date-time */
      TicketData?: string
      /** Format: date-time */
      TicketCategory?: string
      /** Format: date-time */
      Functions?: string
      /** Format: date-time */
      Redirectors?: string
      /** Format: date-time */
      VirusScanners?: string
      /** Format: date-time */
      ControlCenterConfig?: string
      /** Format: date-time */
      Properties?: string
      /** Format: date-time */
      Config?: string
      /** Format: date-time */
      Regions?: string
      /** Format: date-time */
      ConfigOutlook?: string
      /** Format: date-time */
      Computers?: string
      /** Format: date-time */
      Locations?: string
      /** Format: date-time */
      Clients?: string
      /** Format: date-time */
      Groups?: string
      /** Format: date-time */
      Agents?: string
      /** Format: date-time */
      Permissions?: string
      /** Format: date-time */
      WriteConfigControl?: string
      /** Format: date-time */
      AlertTemplates?: string
      /** Format: date-time */
      RoleDefinitions?: string
    }
    'LabTech.Models.ComputerChassis': {
      /** Format: int32 */
      ComputerId?: number
      Manufacturer?: string
      ProductName?: string
      Version?: string
      SerialNumber?: string
      UUID?: string
      SkuNumber?: string
      Family?: string
      ChassisType?: string
      ChassisLock?: boolean
      AssetTag?: string
      /** Format: int32 */
      HeightUnits?: number
      /** Format: int32 */
      SystemBootState?: number
      /** Format: int32 */
      PowerSupplyBootState?: number
      /** Format: int32 */
      ThermalBootState?: number
      MainBoardProduct?: string
      MainBoardSerialNumber?: string
      MainBoardVersion?: string
      MainBoardManufacturer?: string
      /** Format: date-time */
      LastUpdate?: string
    }
    'Automate.Api.Domain.Contracts.Clients.FilterByComputerPermissionsRequest': {
      ComputerPermissions?: string[]
    }
    'LabTech.Models.Client': {
      Id?: string
      Name?: string
      Company?: string
      FirstName?: string
      LastName?: string
      Address1?: string
      Address2?: string
      City?: string
      State?: string
      ZipCode?: string
      PhoneNumber?: string
      FaxNumber?: string
      Comment?: string
      Country?: string
      ExternalId?: string
      UsesInHouseSupportStaff?: boolean
      NewTicketNotificationEmail?: string
      IsHiddenFromAllInclusiveGroup?: boolean
      Locations?: components['schemas']['LabTech.Models.Location'][]
    }
    'LabTech.Models.Location': {
      /** Format: int32 */
      Id?: number
      Client?: components['schemas']['LabTech.Models.Client']
      Name?: string
      Address1?: string
      Address2?: string
      City?: string
      State?: string
      ZipCode?: string
      Country?: string
      PhoneNumber?: string
      FaxNumber?: string
      Contact?: components['schemas']['LabTech.Models.Contact']
      Comments?: string
      /** Format: int32 */
      RouterPort?: number
      ScriptDrive?: string
      ScriptUsername?: string
      ScriptPassword?: string
      ScriptRouterAddress?: string
      ScriptExtra1?: string
      ScriptExtra2?: string
      /** Format: int32 */
      ProbeId?: number
      Router?: components['schemas']['LabTech.Models.Router']
      DeploymentTemplate?: components['schemas']['LabTech.Models.RemoteAgentTemplate']
      MaintenanceWindow?: components['schemas']['LabTech.Models.TemporaryApiContracts.MaintenanceWindowDefinition']
      DefaultDeploymentGroup?: components['schemas']['LabTech.Models.Group']
      DefaultDeploymentLogin?: components['schemas']['LabTech.Models.TemporaryApiContracts.DeploymentLogin']
    }
    'LabTech.Models.Contact': {
      Id?: string
      Location?: components['schemas']['LabTech.Models.Location']
      Client?: components['schemas']['LabTech.Models.Client']
      FirstName?: string
      LastName?: string
      Address1?: string
      Address2?: string
      City?: string
      State?: string
      ZipCode?: string
      PhoneNumber?: string
      MobileNumber?: string
      FaxNumber?: string
      PagerNumber?: string
      Email?: string
      ExternalId?: string
      WebPermissions?: components['schemas']['LabTech.Models.ContactWebPermissions']
      /** Format: date-time */
      CreatedDate?: string
      AssociatedComputers?: components['schemas']['LabTech.Models.Computer'][]
    }
    'LabTech.Models.Router': {
      /** Format: int32 */
      Id?: number
      ManufacturerName?: string
      Model?: string
      Version?: string
      PortType?: string
      Username?: string
      Password?: string
      Guid?: string
    }
    'LabTech.Models.RemoteAgentTemplate': {
      Id?: string
      Name?: string
      TemplateGUID?: string
      ServerAddress?: string
      /** @enum {string} */
      EventLogInventoryMode?:
        | 'InventoryOnlyUsesSchedule'
        | 'ImmediatelySendErrors'
        | 'ImmediatelySendErrorsAndWarnings'
        | 'ImmediatelySendAllButSecurity'
        | 'ImmediatelySendAll'
      /** @enum {string} */
      WindowsUpdate?:
        | 'DoNothing'
        | 'EnableWindowsUpdateDefaults'
        | 'SetToDownloadOnly'
        | 'DisableWindowsUpdate'
        | 'LabtechModeLabtechModeUIAccessDisabled'
      SSLAcceptExpiredCertificates?: boolean
      SSLAccessUntrustedCertificateAuthorities?: boolean
      SSLAcceptMismatchedNames?: boolean
      SSLAcceptRevokedCertificates?: boolean
      SSLAcceptAll?: boolean
      DefaultLanguagePack?: string
      HeartbeatEnabled?: boolean
      /** Format: int32 */
      HeartbeatFrequency?: number
      RemoteAgentLogDebug?: boolean
      Schedule?: components['schemas']['LabTech.Models.RemoteAgentSchedule']
      AgentUpdateWindow?: components['schemas']['LabTech.Models.Schedule']
      TempDirectory?: string
      CacheDirectory?: string
      CacheUsername?: string
      CachePassword?: string
      CachePatch?: boolean
      CacheSoftware?: boolean
      CacheUpdate?: boolean
      TrayTitle?: string
      RemoteAgentName?: string
      ShowTray?: boolean
      TrayDisablePoweredBy?: boolean
      /** Format: byte */
      TrayIcon?: string
      /** @enum {string} */
      AgentRebootMode?: 'Now' | 'Ask' | 'AskThenAllow' | 'AskThenDeny' | 'Deny'
      /** @enum {string} */
      RemoteAccessMode?: 'Silent' | 'Ask' | 'AskThenAllow' | 'AskThenDeny' | 'Deny'
      /** @enum {string} */
      FileExplorerAccessMode?: 'Now' | 'Ask' | 'AskThenAllow' | 'AskThenDeny' | 'Deny'
      /** @enum {string} */
      RegistryEditorAccessMode?: 'Now' | 'Ask' | 'AskThenAllow' | 'AskThenDeny' | 'Deny'
      /** @enum {string} */
      ScreenCaptureAccessMode?: 'Now' | 'Ask' | 'AskThenAllow' | 'AskThenDeny' | 'Deny'
      DisallowUserCloseTray?: boolean
      AllowUserDisableRemoteAccess?: boolean
      TrayHelpURL?: string
      TrayCustomMenuTitle?: string
      TrayCustomMenuURL?: string
      TrayShowCustomMenu?: boolean
      TrayShowHelp?: boolean
      TrayMenus?: components['schemas']['LabTech.Models.ComputerMenu'][]
      TrayRebootLogOffNotificationText?: string
      TrayShutdownNotificationText?: string
      TrayRemoteAccessNotificationText?: string
      TrayFileExplorerAccessNotificationText?: string
      TrayRegistryEditorAccessNotificationText?: string
      TrayScreenCaptureAccessNotificationText?: string
      ServiceTicketTitle?: string
      TrayTicketFromLabelText?: string
      TrayTicketSubjectLabelText?: string
      TrayShowServiceTicketMenu?: boolean
      TrayShowMessagesAndTickets?: boolean
      TrayTicketVerifyEmail?: boolean
      SupportURL?: string
      RSSFeedAddress1?: string
      RSSFeedAddress2?: string
      RSSFeedAddress3?: string
      RSSFeedAddress4?: string
      EnableRSS?: boolean
      TrayChatNotificationText?: string
      TrayChatNotificationTitle?: string
      TrayInterruptUserWithChat?: boolean
      ProxyServerURL?: string
      ProxyServerUser?: string
      ProxyServerPassword?: string
      TrayNotificationTitle?: string
      TrayNewMessageNotificationText?: string
      TrayNewRSSFeedNotificationText?: string
      TrayRemoteAccessNotificationTitle?: string
      TraySystemMessageNotificationTitle?: string
      BackupServerURL?: string
      BackupServerUser?: string
      BackupServerPassword?: string
      NetworkAccessStoragePath?: string
      TemplateProperties?: components['schemas']['LabTech.Models.TemplateProperty'][]
      AntivirusTemplate?: components['schemas']['LabTech.Models.AVTemplatePolicy']
    }
    'LabTech.Models.TemporaryApiContracts.MaintenanceWindowDefinition': {
      /** Format: int32 */
      MaintenanceWindowDefinitionId?: number
      Name?: string
      Comment?: string
    }
    'LabTech.Models.Group': {
      Id?: string
      ParentId?: string
      SubGroups?: number[]
      ParentGroups?: number[]
      Parents?: components['schemas']['LabTech.Models.GroupPartial'][]
      /** Format: int32 */
      Depth?: number
      Name?: string
      FullName?: string
      /** Format: int32 */
      TypeId?: number
      TypeName?: string
      /** Format: int32 */
      TemplatePriority?: number
      GUID?: string
      ComputersAutoJoinSearch?: components['schemas']['LabTech.Models.Search']
      NetworkDevicesAutoJoinSearch?: components['schemas']['LabTech.Models.Search']
      ContactsAutoJoinSearch?: components['schemas']['LabTech.Models.Search']
      MaintenanceWindow?: components['schemas']['LabTech.Models.MaintenanceWindow']
      /** Format: date-time */
      MaintenanceWindowLastApplied?: string
      ComputersLimitToSearch?: boolean
      NetworkDevicesLimitToSearch?: boolean
      ContactsLimitToSearch?: boolean
      ContactsJoinComputers?: boolean
      RemoteAgentTemplate?: components['schemas']['LabTech.Models.RemoteAgentTemplate']
      ClientToSync?: components['schemas']['LabTech.Models.Client']
      LocationToSync?: components['schemas']['LabTech.Models.Location']
      Comments?: string
      ComputerPermissions?: components['schemas']['LabTech.Models.UserClassComputerPermissions'][]
      Computers?: components['schemas']['LabTech.Models.Computer'][]
      NetworkDevices?: components['schemas']['LabTech.Models.NetworkDevice'][]
      Contacts?: components['schemas']['LabTech.Models.Contact'][]
    }
    'LabTech.Models.TemporaryApiContracts.DeploymentLogin': {
      /** Format: int32 */
      DeploymentLoginId?: number
      Title?: string
    }
    'LabTech.Models.ContactWebPermissions': {
      Tickets?: boolean
      RemoteAccess?: boolean
      InstallAgent?: boolean
      Reboot?: boolean
      Shutdown?: boolean
      WakeOnLAN?: boolean
      MultiFactorRequired?: boolean
    }
    'LabTech.Models.Computer': {
      Id?: string
      Location?: components['schemas']['LabTech.Models.Location']
      Client?: components['schemas']['LabTech.Models.Client']
      Contact?: components['schemas']['LabTech.Models.Contact']
      IsFasTalk?: boolean
      IsMaster?: boolean
      IsNetworkProbe?: boolean
      IsHeartbeatEnabled?: boolean
      IsMaintenanceModeEnabled?: boolean
      IsTunnelSupported?: boolean
      IsVirtualMachine?: boolean
      ComputerName?: string
      OperatingSystemName?: string
      OperatingSystemVersion?: string
      DomainName?: string
      /** Format: date-time */
      RemoteAgentLastInventory?: string
      /** Format: int32 */
      UTCOffset?: number
      OpenPortsTCP?: number[]
      OpenPortsUDP?: number[]
      Comment?: string
      RemoteAgentVersion?: string
      /** Format: date-time */
      RemoteAgentLastContact?: string
      DomainNameServers?: string[]
      /** Format: date-time */
      LastInventoryReceived?: string
      /** Format: date-time */
      WindowsUpdateDate?: string
      /** Format: date-time */
      AntivirusDefinitionDate?: string
      /** Format: date-time */
      LastHeartbeat?: string
      /** Format: int64 */
      TotalMemory?: number
      /** Format: int64 */
      FreeMemory?: number
      /** Format: int32 */
      CpuUsage?: number
      LocalIPAddress?: string
      GatewayIPAddress?: string
      /** Format: int64 */
      SystemUptime?: number
      /** Format: date-time */
      LastStartup?: string
      MACAddress?: string
      /** Format: date-time */
      DateAdded?: string
      /** Format: int32 */
      UserIdleTime?: number
      LoggedInUsers?: components['schemas']['LabTech.Models.LoggedInUser'][]
      LastUserName?: string
      Tickets?: components['schemas']['LabTech.Models.Ticket'][]
      Groups?: components['schemas']['LabTech.Models.Group'][]
      /** Format: int32 */
      Bandwidth?: number
      BandwidthDisplay?: string
      /** Format: date-time */
      AssetDate?: string
      AssetTag?: string
      /** Format: date-time */
      WarrantyEndDate?: string
      Type?: string
      Status?: string
      MasterMode?: string
      VirusScanner?: components['schemas']['LabTech.Models.VirusScannerDef']
      FriendlyName?: string
      IsLockedDown?: boolean
      IsSystemAccount?: boolean
      IsRebootNeeded?: boolean
      IsVirtualHost?: boolean
      IsHeartbeatRunning?: boolean
      HasIntelVPRO?: boolean
      HasIntelAMT?: boolean
      HasHPiLO?: boolean
      TempFiles?: string
      SerialNumber?: string
      /** Format: double */
      CpuScore?: number
      /** Format: double */
      D3DScore?: number
      /** Format: double */
      DiskScore?: number
      /** Format: double */
      GraphicsScore?: number
      /** Format: double */
      MemoryScore?: number
      PowerProfiles?: string[]
      CurrentPowerProfile?: string
      BiosManufacturer?: string
      BiosFlash?: string
      CommentPriority?: components['schemas']['LabTech.Models.CommentPriority']
      IRQ?: number[]
      Address?: number[]
      DMA?: number[]
      HardwarePorts?: string[]
      UserAccounts?: string[]
    }
    'LabTech.Models.RemoteAgentSchedule': {
      Id?: string
      Name?: string
      UpdateConfig?: components['schemas']['LabTech.Models.Schedule']
      HardwareInventory?: components['schemas']['LabTech.Models.Schedule']
      SystemInventory?: components['schemas']['LabTech.Models.Schedule']
      DriveInventory?: components['schemas']['LabTech.Models.Schedule']
      ProcessInventory?: components['schemas']['LabTech.Models.Schedule']
      MalewareInventory?: components['schemas']['LabTech.Models.Schedule']
      SoftwareInventory?: components['schemas']['LabTech.Models.Schedule']
      EventInventory?: components['schemas']['LabTech.Models.Schedule']
      PrinterInventory?: components['schemas']['LabTech.Models.Schedule']
      NetworkInventory?: components['schemas']['LabTech.Models.Schedule']
      NetworkAnalysis?: components['schemas']['LabTech.Models.Schedule']
      HotfixInventory?: components['schemas']['LabTech.Models.Schedule']
      ServiceInventory?: components['schemas']['LabTech.Models.Schedule']
      NetworkProbeInventory?: components['schemas']['LabTech.Models.Schedule']
      /** Format: date-time */
      LastUpdate?: string
      LastUser?: string
    }
    'LabTech.Models.Schedule': {
      /** @enum {string} */
      DayId?:
        | 'Everyday'
        | 'Sunday'
        | 'Monday'
        | 'Tuesday'
        | 'Wednesday'
        | 'Thursday'
        | 'Friday'
        | 'Saturday'
      DayName?: string
      /** Format: int32 */
      RepeatEveryHour?: number
      /** Format: date-time */
      Date?: string
    }
    'LabTech.Models.ComputerMenu': {
      MenuID?: string
      Name?: string
      Description?: string
      Text?: string
      ImageURL?: string
      /** Format: int32 */
      RootOnly?: number
      Action?: string
      MsgTitle?: string
      MsgBody?: string
      /** Format: int32 */
      MsgHeight?: number
      /** Format: int32 */
      MsgWidth?: number
      URLorEXE?: string
      /** Format: int32 */
      ScriptID?: number
      Parameters?: string
    }
    'LabTech.Models.TemplateProperty': {
      TemplateID?: string
      PropertyName?: string
      PropertyValue?: string
      PropertyDescription?: string
    }
    'LabTech.Models.GroupPartial': {
      /** Format: int32 */
      ID?: number
      /** Format: int32 */
      ParentId?: number
      Name?: string
    }
    'LabTech.Models.Search': {
      Id?: string
      Name?: string
      SearchFolder?: components['schemas']['LabTech.Models.SearchFolder']
      IsReadOnly?: boolean
      /** @enum {string} */
      SearchType?:
        | 'AdvancedComputers'
        | 'AdvancedNetDevices'
        | 'AdvancedContacts'
        | 'AdvancedMobileDevices'
    }
    'LabTech.Models.MaintenanceWindow': {
      Id?: string
    }
    'LabTech.Models.UserClassComputerPermissions': {
      Id?: string
      UserClass?: components['schemas']['LabTech.Models.UserClass']
      Permissions?: components['schemas']['LabTech.Models.ComputerPermissions']
    }
    'LabTech.Models.NetworkDevice': {
      Id?: string
      Location?: components['schemas']['LabTech.Models.Location']
      LocalIPAddress?: string
      Name?: string
      FriendlyName?: string
      OpenPortsTCP?: number[]
      DeviceType?: components['schemas']['LabTech.Models.NetworkDeviceType']
      DetectionTemplateName?: string
      /** Format: date-time */
      LastUpdated?: string
      MACAddress?: string
      Status?: string
      Contact?: components['schemas']['LabTech.Models.Contact']
      AlertAction?: components['schemas']['LabTech.Models.AlertAction']
      AlertMessage?: string
      AlertWhenOffline?: boolean
      /** Format: date-time */
      DateAdded?: string
      SNMPCommunityGet?: string
      SNMPCommunitySet?: string
      IsSNMPv1Supported?: boolean
      IsSNMPv2cSupported?: boolean
      IsSNMPv3Supported?: boolean
      IsLowOnToner?: boolean
      IsLowOnPaper?: boolean
      IsHighBandwidth?: boolean
      FlagsDisplay?: string
      ManufacturerName?: string
      ModelName?: string
      Description?: string
      /** Format: int64 */
      Uptime?: number
      UptimeDisplay?: string
      /** Format: int64 */
      DataOut?: number
      DataOutDisplay?: string
      /** Format: int64 */
      DataIn?: number
      DataInDisplay?: string
      /** Format: date-time */
      AssetDate?: string
      /** Format: date-time */
      LastContact?: string
      NasPercent?: string
      Groups?: components['schemas']['LabTech.Models.Group'][]
      Client?: components['schemas']['LabTech.Models.Client']
      IsSyncedToManage?: boolean
      SnmpTree?: number[]
      ExternalSystemCredentials?: components['schemas']['LabTech.Models.ExternalSystemCredentials']
      /** Format: int32 */
      InterfaceCount?: number
      /** Format: int32 */
      ProbeId?: number
      ProbeName?: string
      AgentDeploymentReadinessCheck?: components['schemas']['LabTech.Models.TemporaryApiContracts.AgentDeploymentReadinessCheck']
    }
    'LabTech.Models.LoggedInUser': {
      LoggedInUserName?: string
      /** Format: int32 */
      ConsoleId?: number
    }
    'LabTech.Models.Ticket': {
      /** Format: int32 */
      TicketId?: number
      Client?: components['schemas']['LabTech.Models.Client']
      Computer?: components['schemas']['LabTech.Models.Computer']
      Status?: components['schemas']['LabTech.Models.TicketStatus']
      Subject?: string
      Priority?: components['schemas']['LabTech.Models.TicketPriority']
      User?: components['schemas']['LabTech.Models.User']
      /** Format: date-time */
      DueDate?: string
      /** Format: date-time */
      StartDate?: string
      /** Format: date-time */
      ContactDate?: string
      /** Format: date-time */
      UpdateDate?: string
      From?: string
      CC?: string
      /** Format: int32 */
      SupportLevel?: number
      Category?: components['schemas']['LabTech.Models.TicketCategory']
      Location?: components['schemas']['LabTech.Models.Location']
      /** Format: int32 */
      ExternalId?: number
      /** Format: int32 */
      MonitorId?: number
      Guid?: string
      Agent?: components['schemas']['LabTech.Models.ComputerMonitor']
      NetworkDevice?: components['schemas']['LabTech.Models.NetworkDevice']
    }
    'LabTech.Models.VirusScannerDef': {
      Id?: string
      Name?: string
    }
    'LabTech.Models.CommentPriority': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.SearchFolder': {
      Id?: string
      Name?: string
    }
    'LabTech.Models.UserClass': {
      Id?: string
      Name?: string
      Permissions?: components['schemas']['LabTech.Models.UserPermissions']
    }
    'LabTech.Models.ComputerPermissions': {
      EditConfig?: boolean
      EditInfo?: boolean
      SendCommands?: boolean
      AllowRemoteControl?: boolean
      AllowRedir?: boolean
      AllowFileExplorer?: boolean
      AllowRegistryEdit?: boolean
      CommandPrompt?: boolean
      SniffNetwork?: boolean
      Install?: boolean
      History?: boolean
      ViewCommands?: boolean
      MonitorDelete?: boolean
      MonitorAdd?: boolean
      MonitorEdit?: boolean
      ClearAlerts?: boolean
      ScheduleScripts?: boolean
      DeleteScheduleScripts?: boolean
    }
    'LabTech.Models.NetworkDeviceType': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.AlertAction': {
      /** Format: int32 */
      Id?: number
      Name?: string
      Comment?: string
    }
    'LabTech.Models.ExternalSystemCredentials': {
      /** Format: int32 */
      CredentialsId?: number
      /** Format: int32 */
      ClientId?: number
      Title?: string
      /** Format: date-time */
      ExpirationDate?: string
      IsActive?: boolean
    }
    'LabTech.Models.TemporaryApiContracts.AgentDeploymentReadinessCheck': {
      /** Format: int32 */
      AgentDeploymentReadinessCheckId?: number
      /** Format: int32 */
      NetworkDeviceId?: number
      /** Format: int32 */
      AgentDeploymentReadinessCheckStatusId?: number
      ReadinessCheckStatus?: string
      /** Format: int32 */
      DeploymentAttemptCount?: number
      /** Format: date-time */
      DateLastCheckedForReadiness?: string
      /** Format: date-time */
      DateLastDeploymentAttempted?: string
    }
    'LabTech.Models.TicketStatus': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.TicketPriority': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.User': {
      UserId?: string
      Folder?: components['schemas']['LabTech.Models.UserFolder']
      Name?: string
      EmailAddress?: string
      SsoStatus?: components['schemas']['LabTech.Models.UserSingleSignOnStatus']
    }
    'LabTech.Models.TicketCategory': {
      /** Format: int32 */
      Id?: number
      Name?: string
      /** Format: int32 */
      ParentCategoryId?: number
      Keywords?: string
      Description?: string
      Image?: string
      IsVisibleInList?: boolean
    }
    'LabTech.Models.ComputerMonitor': {
      /** Format: int32 */
      MonitorId?: number
      /** Format: int32 */
      ComputerId?: number
      /** Format: int32 */
      DeviceId?: number
      Name?: string
      State?: string
      /** Format: date-time */
      LastScanned?: string
      /** Format: date-time */
      LastFailed?: string
      /** Format: date-time */
      LastInventoryDate?: string
      AlertAction?: components['schemas']['LabTech.Models.AlertAction']
      MonitorHistory?: components['schemas']['LabTech.Models.ComputerMonitorHistory']
    }
    'LabTech.Models.UserPermissions': {
      SuperAdmin?: boolean
      SystemConfig?: boolean
      ClassConfig?: boolean
      CreateTickets?: boolean
      SharedLinks?: boolean
      TemplateRead?: boolean
      TemplateEdit?: boolean
      TemplateDelete?: boolean
      ClientRead?: boolean
      ClientEdit?: boolean
      ClientDelete?: boolean
      ReportRead?: boolean
      ReportEdit?: boolean
      ReportDelete?: boolean
      ContactRead?: boolean
      ContactEdit?: boolean
      ContactDelete?: boolean
      UserRead?: boolean
      UserEdit?: boolean
      UserDelete?: boolean
      ToolRead?: boolean
      ToolEdit?: boolean
      ToolDelete?: boolean
      ScriptRead?: boolean
      ScriptEdit?: boolean
      ScriptDelete?: boolean
      ManageGroups?: boolean
      DashTicketing?: boolean
      DashTime?: boolean
      DashManage?: boolean
      DashTrending?: boolean
      DashOverview?: boolean
      HUDUpdate?: boolean
      HUDShowAll?: boolean
      DataViewUpdate?: boolean
      DataViewDelete?: boolean
      DataViewShowAll?: boolean
      UsersShowAll?: boolean
      UserClassCreate?: boolean
      UserClassUpdate?: boolean
      PatchManagerConfig?: boolean
      ReportsCreate?: boolean
      ProbeTemplateExecute?: boolean
      ScheduledScriptsUpdate?: boolean
      ClientsShowAll?: boolean
      ShowPasswords?: boolean
      LocationsShowAll?: boolean
      ComputersCreate?: boolean
      ComputersUpdate?: boolean
      ComputersDelete?: boolean
      ComputersShowAll?: boolean
      ComputersForceUpdate?: boolean
      NetworkDeviceUpdate?: boolean
      NetworkDeviceDelete?: boolean
      NetworkDeviceShowAll?: boolean
      RetiredAssetsDelete?: boolean
      GroupsCreate?: boolean
      GroupsDelete?: boolean
      GroupsShowAll?: boolean
      GroupsScheduleScript?: boolean
      GroupMonitorsUpdate?: boolean
      GroupInfoUpdate?: boolean
      GroupManagedServices?: boolean
      RemoteMonitorsCreate?: boolean
      RemoteMonitorsDelete?: boolean
      InternalMonitorsCreate?: boolean
      InternalMonitorsUpdate?: boolean
      InternalMonitorsDelete?: boolean
      AlertsUpdate?: boolean
      AlertsDeleteAll?: boolean
      TicketsRead?: boolean
      TicketsUpdate?: boolean
      TicketsDelete?: boolean
      TicketsRequest?: boolean
      SearchesRead?: boolean
      SearchesUpdate?: boolean
      SearchesDelete?: boolean
      PatchManagerRead?: boolean
      PatchManagerUpdate?: boolean
      LanguagePackEditor?: boolean
      ManagedServiceCatalog?: boolean
      NavigationMenuUpdate?: boolean
      RSSFeedRead?: boolean
      RSSFeedUpdate?: boolean
      LinksDelete?: boolean
      PluginManager?: boolean
      SolutionCenter?: boolean
      DatabaseExecute?: boolean
      ServerStatus?: boolean
      ManageAudits?: boolean
      ManageRemoteCommands?: boolean
      ManageServiceLogs?: boolean
      ManageOutdated?: boolean
      ManageOfflineComputers?: boolean
      ManageScheduleClientScripts?: boolean
      DashboardConfig?: boolean
      ConfigApplicationList?: boolean
      ConfigEventBlackList?: boolean
      QuickConnect?: boolean
      PermissionsUpdate?: boolean
      UserClassRead?: boolean
      UserClassDelete?: boolean
    }
    'LabTech.Models.UserFolder': {
      UserFolderId?: string
      Name?: string
      IsSsoEnabled?: boolean
    }
    'LabTech.Models.UserSingleSignOnStatus': {
      /** Format: int32 */
      SsoStatusId?: number
      StatusName?: string
    }
    'LabTech.Models.ComputerMonitorHistory': {
      /** Format: int32 */
      Id?: number
      /** Format: double */
      FailureRate?: number
      LastSuccessData?: string
      LastWarningData?: string
      LastFailData?: string
    }
    'LabTech.Models.CommandExecute': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ComputerId?: number
      Command?: components['schemas']['LabTech.Models.Command']
      Status?: string
      Parameters?: string[]
      Output?: string
      Fastalk?: boolean
      /** Format: date-time */
      DateLastInventoried?: string
    }
    'LabTech.Models.Command': {
      Id?: string
      Name?: string
      Description?: string
      /** Format: int32 */
      Level?: number
    }
    'LabTech.Models.CommandHistory': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ComputerId?: number
      /** Format: date-time */
      DateExecuted?: string
      Command?: string
      Status?: string
      Output?: string
      Parameters?: string
      User?: string
      /** Format: date-time */
      DateFinished?: string
    }
    'Automate.Api.Domain.Contracts.CommandPromptCommand': {
      RunAsAdmin?: boolean
      UsePowerShell?: boolean
      CommandText?: string
      Directory?: string
    }
    'Automate.Api.Domain.Contracts.System.ClientPermissionsResult': {
      /** Format: int32 */
      ClientId?: number
      Permissions?: string[]
    }
    'LabTech.Models.ComputerBios': {
      /** Format: int32 */
      ComputerId?: number
      Vendor?: string
      Version?: string
      /** Format: date-time */
      Date?: string
      /** Format: int32 */
      Size?: number
      /** Format: double */
      SystemBiosVersion?: number
      /** Format: double */
      EMBCTLVersion?: number
      /** Format: double */
      SmBiosVersion?: number
      /** Format: int32 */
      DmiVersion?: number
      SupportsAcpi?: boolean
      SupportsApm?: boolean
      SupportsAgp?: boolean
      SupportsPcmcia?: boolean
      HasSmartBattery?: boolean
      SupportsUefi?: boolean
      SupportsLegacyUsb?: boolean
      SupportsPci?: boolean
      SupportsVlvesa?: boolean
      SupportsEscd?: boolean
      SupportsNetBoot?: boolean
      SupportsI2OBoot?: boolean
      IsVirtualMachine?: boolean
      PowerOnReason?: string
      /** Format: int32 */
      BiosChar?: number
      IsPortable?: boolean
      VmHost?: string
      VmType?: string
      VmName?: string
      /** Format: date-time */
      DateUpdated?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.ComputerDriver': {
      /** Format: int64 */
      Id?: number
      /** Format: int32 */
      ComputerId?: number
      Name?: string
      Description?: string
      State?: string
      Startup?: string
      PathName?: string
      ServiceType?: string
      Username?: string
      /** Format: date-time */
      DateLastInventoried?: string
      RunLevels?: string
    }
    'LabTech.Models.ComputerDrive': {
      /** Format: int32 */
      DriveId?: number
      /** Format: int32 */
      ComputerId?: number
      Letter?: string
      /** Format: int32 */
      Size?: number
      /** Format: int32 */
      FreeSpace?: number
      FileSystem?: string
      Model?: string
      SmartStatus?: string
      IsMissing?: boolean
      /** Format: date-time */
      DateLastInventoried?: string
      VolumeName?: string
      /** Format: int32 */
      BackupFlag?: number
      IsSolidState?: boolean
      IsInternal?: boolean
      /** Format: int64 */
      MaximumHistoryDaysAvailable?: number
    }
    'LabTech.Models.SmartData': {
      /** Format: int32 */
      DriveId?: number
      /** Format: int32 */
      ComputerId?: number
      Attribute?: components['schemas']['LabTech.Models.SmartAttribute']
      /** Format: int32 */
      Value?: number
      /** Format: int32 */
      Worst?: number
      /** Format: int32 */
      Threshold?: number
      /** Format: int32 */
      RawValue?: number
    }
    'LabTech.Models.SmartAttribute': {
      /** Format: int32 */
      Id?: number
      Name?: string
      Description?: string
    }
    'LabTech.Models.ComputerEffectivePatchingPolicy': {
      /** Format: int32 */
      ApprovalPolicyCount?: number
      MicrosoftUpdatePolicyName?: string
      /** Format: int32 */
      ComputerId?: number
      RebootPolicyName?: string
      ThirdPartyUpdatePolicyName?: string
    }
    'Automate.Api.Domain.Contracts.Maintenance.MaintenanceModeQueueEntry': {
      /** Format: int32 */
      MaintenanceModeQueueId?: number
      /** Format: int32 */
      ComputerId?: number
      /** Format: date-time */
      StartDate?: string
      /** Format: int32 */
      DurationInMinutes?: number
      Mode?: string
      /** Format: int32 */
      UserId?: number
      Comments?: string
    }
    'LabTech.Models.ComputerMicrosoftUpdateData': {
      Category?: string
      /** Format: int32 */
      ComputerId?: number
      /** Format: date-time */
      InstallDate?: string
      InstallState?: string
      IsCompliant?: boolean
      IsFailed?: boolean
      IsInstalled?: boolean
      IsNonCompliant?: boolean
      /** Format: int64 */
      KnowledgeBaseId?: number
      MicrosoftUpdateId?: string
      PolicyApproval?: components['schemas']['LabTech.Models.PolicyApprovalSetting']
      /** Format: date-time */
      ReleaseDate?: string
      Severity?: string
      Title?: string
      /** Format: double */
      Cvss?: number
    }
    'LabTech.Models.PolicyApprovalSetting': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'System.Threading.CancellationToken': {
      IsCancellationRequested?: boolean
      CanBeCanceled?: boolean
      WaitHandle?: components['schemas']['System.Threading.WaitHandle']
    }
    'System.Threading.WaitHandle': {
      SafeWaitHandle?: components['schemas']['Microsoft.Win32.SafeHandles.SafeWaitHandle']
    }
    'Microsoft.Win32.SafeHandles.SafeWaitHandle': {
      IsInvalid?: boolean
      IsClosed?: boolean
    }
    'LabTech.Models.ComputerOperatingSystem': {
      /** Format: int32 */
      ComputerId?: number
      Name?: string
      /** Format: int32 */
      MajorVersion?: number
      /** Format: int32 */
      MinorVersion?: number
      Version?: string
      DotNetVersion?: string
      ServicePack?: string
      ServicePackName?: string
      /** Format: int32 */
      ProductType?: number
      /** Format: int32 */
      Suite?: number
      /** Format: int32 */
      ProductInfo?: number
      IsLicensed?: boolean
      IsTablet?: boolean
      IsStarter?: boolean
      IsMediaCenter?: boolean
      BaseFolder?: string
      SystemDrive?: string
      HasGui?: boolean
      Is64Bit?: boolean
      Domain?: string
      IsDomainController?: boolean
      IsServer?: boolean
      /** Format: date-time */
      InstallDate?: string
      /** Format: date-time */
      DateUpdated?: string
      /** Format: int32 */
      ReleaseId?: number
      Edition?: string
      /** Format: int32 */
      BranchReadinessLevel?: number
    }
    'LabTech.Models.ComputerPatchingPolicy': {
      /** Format: int32 */
      ApprovalPolicyCount?: number
      /** Format: int32 */
      GroupId?: number
      MicrosoftUpdatePolicyName?: string
      Name?: string
      /** Format: int32 */
      OverrideId?: number
      /** Format: int32 */
      Priority?: number
      RebootPolicyName?: string
      ThirdPartyUpdatePolicyName?: string
    }
    'LabTech.Models.ComputerPrinter': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ComputerId?: number
      Name?: string
      PortName?: string
      Resolution?: string
      PaperTypes?: string[]
      Features?: string[]
    }
    'LabTech.Models.ComputerRunningScript': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ScriptId?: number
      /** Format: int32 */
      ComputerId?: number
      Name?: string
      /** @enum {string} */
      Status?: 'Running' | 'Completed'
      /** Format: date-time */
      StartDate?: string
    }
    'LabTech.Models.ComputerDevice': {
      /** Format: int32 */
      ComputerId?: number
      PnpDeviceId?: string
      DeviceName?: string
      DeviceType?: string
      DriverVersion?: string
      /** Format: date-time */
      DriverDate?: string
      DriverName?: string
      DriverFile?: string
      Manufacturer?: string
      /** Format: date-time */
      UpdateDate?: string
    }
    'LabTech.Models.MaintenanceMode': {
      /** Format: int32 */
      ComputerID?: number
      /** Format: date-time */
      TimeStart?: string
      /** Format: int32 */
      Duration?: number
      /** Format: int32 */
      Mode?: number
      /** Format: int32 */
      UserID?: number
    }
    'LabTech.Models.ComputerMemorySlot': {
      /** Format: int32 */
      SlotHandle?: number
      /** Format: int32 */
      ComputerId?: number
      SlotName?: string
      Bank?: string
      FormFactor?: components['schemas']['LabTech.Models.MemoryFormFactor']
      /** Format: int32 */
      TotalWidth?: number
      /** Format: int32 */
      DataWidth?: number
      /** Format: int32 */
      Size?: number
      Type?: components['schemas']['LabTech.Models.MemoryType']
      /** Format: int32 */
      Speed?: number
      Manufacturer?: string
      SerialNumber?: string
      PartNumber?: string
      AssetTag?: string
      /** Format: date-time */
      UpdateDate?: string
    }
    'LabTech.Models.MemoryFormFactor': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.MemoryType': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ComputerProcessor': {
      /** Format: int32 */
      ComputerId?: number
      /** Format: int32 */
      ProcessorHandle?: number
      Socket?: components['schemas']['LabTech.Models.ProcessorSocket']
      IsEnabled?: boolean
      Family?: components['schemas']['LabTech.Models.ProcessorFamily']
      Manufacturer?: string
      /** Format: int32 */
      Speed?: number
      CacheList?: components['schemas']['LabTech.Models.ComputerProcessorCache'][]
      SerialNumber?: string
      PartNumber?: string
      /** Format: int32 */
      Cores?: number
      /** Format: int32 */
      Threads?: number
      Is64Bit?: boolean
      DEP?: boolean
      IsVirtualized?: boolean
      HasPowerControl?: boolean
      HasHardwareThread?: boolean
      ProcessorName?: string
      /** Format: date-time */
      UpdateDate?: string
    }
    'LabTech.Models.ProcessorSocket': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ProcessorFamily': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ComputerProcessorCache': {
      /** Format: int32 */
      Id?: number
      Name?: string
      /** Format: int32 */
      Size?: number
    }
    'LabTech.Models.ComputerService': {
      /** Format: int64 */
      ComputerServiceId?: number
      /** Format: int32 */
      ComputerId?: number
      Name?: string
      Description?: string
      State?: string
      Startup?: string
      PathName?: string
      ServiceType?: string
      Username?: string
      /** Format: date-time */
      DateLastInventoried?: string
      RunLevels?: string
      Classification?: components['schemas']['LabTech.Models.ServiceClassification']
    }
    'LabTech.Models.ServiceClassification': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ComputerSoftware': {
      /** Format: int64 */
      ApplicationId?: number
      /** Format: int32 */
      ComputerId?: number
      Name?: string
      InstallationPath?: string
      /** Format: date-time */
      DateInstalled?: string
      /** Format: int32 */
      Size?: number
      UninstallerPath?: string
      Version?: string
      Classification?: components['schemas']['LabTech.Models.SoftwareClassification']
      /** Format: date-time */
      DateLastInventoried?: string
      /** Format: int32 */
      ClientId?: number
      ComputerName?: string
    }
    'LabTech.Models.SoftwareClassification': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ComputerVideoCard': {
      /** Format: int32 */
      ComputerId?: number
      PnpDeviceId?: string
      VideoProcessor?: string
      Mode?: string
      Memory?: string
      Architecture?: components['schemas']['LabTech.Models.VideoCardArchitecture']
      MemoryType?: components['schemas']['LabTech.Models.VideoCardMemory']
      DACAdapter?: string
      /** Format: int32 */
      BitsPerPixel?: number
      /** Format: date-time */
      UpdateDate?: string
    }
    'LabTech.Models.VideoCardArchitecture': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.VideoCardMemory': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ComputerScheduledTask': {
      /** Format: int32 */
      Id?: number
      Name?: string
      Command?: string
      IsInteractive?: boolean
      StartTime?: string
      DoesRepeat?: boolean
      DaysOfWeek?: string[]
    }
    'LabTech.Models.ComputerScriptHistory': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ScriptId?: number
      /** Format: int32 */
      ComputerId?: number
      Name?: string
      User?: string
      /** @enum {string} */
      Status?: 'Running' | 'Completed'
      /** @enum {string} */
      State?: 'Failure' | 'Information' | 'Success'
      /** Format: date-time */
      HistoryDate?: string
      DiagnosticMessage?: string
    }
    'LabTech.Models.ComputerSensor': {
      /** Format: int32 */
      ComputerId?: number
      /** Format: int32 */
      SensorId?: number
      SensorName?: string
      DeviceType?: components['schemas']['LabTech.Models.SensorDeviceType']
      Monitor?: string
      /** Format: double */
      Value?: number
      /** Format: double */
      MaxValue?: number
    }
    'LabTech.Models.SensorDeviceType': {
      /** Format: int32 */
      DeviceType?: number
      Name?: string
      Indicator?: string
    }
    'LabTech.RESTApi.RpcContracts.SoftwareUninstallInfo': {
      UninstallPath?: string
    }
    'LabTech.RESTApi.RpcContracts.SoftwareClassificationInfo': {
      SoftwareNames?: string[]
    }
    'LabTech.Models.ComputerSystemSlot': {
      /** Format: int32 */
      ComputerId?: number
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      SlotHandle?: number
      SlotName?: string
      SlotType?: string
      BusWidth?: string
      InUse?: string
      Length?: string
      Supports3Volts?: boolean
      Supports5Volts?: boolean
      IsHotPluggable?: boolean
      SupportsPowerManagement?: boolean
    }
    'LabTech.Models.ComputerThirdPartyPatch': {
      ApprovedVersion?: string
      AvailableVersion?: string
      ComplianceState?: components['schemas']['LabTech.Models.PatchComplianceState']
      /** Format: int32 */
      ComputerId?: number
      DisplayTitle?: string
      InstallAction?: components['schemas']['LabTech.Models.ThirdParyInstallAction']
      /** Format: date-time */
      InstallDate?: string
      InstallState?: string
      InstalledVersion?: string
      Is64Bit?: boolean
      IsCompliant?: boolean
      IsFailed?: boolean
      IsInstalled?: boolean
      IsNonCompliant?: boolean
      Manufacturer?: string
      PatchId?: string
      PolicyApproval?: components['schemas']['LabTech.Models.ThirdPartyPolicyApproval']
      SoftwareId?: string
      Title?: string
    }
    'LabTech.Models.PatchComplianceState': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ThirdParyInstallAction': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ThirdPartyPolicyApproval': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ComputerUps': {
      /** Format: int32 */
      ComputerId?: number
      /** Format: int32 */
      UpsId?: number
      UpsName?: string
      /** Format: int32 */
      ChargeRemaining?: number
      /** Format: int32 */
      RemainingRunTime?: number
    }
    'Automate.Api.Domain.Contracts.DatabaseInformation': {
      /** Format: int32 */
      DatabaseId?: number
      DatabaseVersion?: string
      Uptime?: string
      /** Format: int32 */
      CurrentConnections?: number
      /** Format: int32 */
      MaxConnections?: number
      /** Format: int32 */
      PeakConnections?: number
      /** Format: int32 */
      RunningQueries?: number
      LastBackupFilePath?: string
      /** Format: date-time */
      LastBackupDate?: string
      LastBackupSize?: string
      /** Format: int32 */
      LastBackupStatus?: number
    }
    'LabTech.Models.DataViewFolder': {
      Id?: string
      Name?: string
    }
    'LabTech.Models.DataView': {
      Id?: string
      Name?: string
      /** Format: int32 */
      FolderId?: number
    }
    'Automate.Api.Domain.Contracts.Clients.DeploymentLogin': {
      /** Format: int32 */
      DeploymentLoginId?: number
      Client?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Client']
      Location?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Location']
      Title?: string
      Username?: string
      Password?: string
      Url?: string
      Notes?: string
    }
    'Automate.Api.Domain.Contracts.Clients.Client': {
      /** Format: int32 */
      ClientId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Clients.Location': {
      /** Format: int32 */
      LocationId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandsRequest': {
      DeviceIdList?: number[]
    }
    'Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandResponse': {
      CommandResultList?: components['schemas']['Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandResult'][]
      ContainsUnsuccessfulResults?: boolean
    }
    'Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandResult': {
      /** Format: int32 */
      DeviceId?: number
      ResultDetails?: components['schemas']['Automate.Api.Domain.Contracts.ResponseResult']
    }
    'Automate.Api.Domain.Contracts.Patching.ComputerPatchingStats': {
      /** Format: int32 */
      ComputerId?: number
      /** Format: double */
      OverallCompliance?: number
      /** Format: int32 */
      InstalledPatchCount?: number
      /** Format: int32 */
      MissingPatchCount?: number
      /** Format: int32 */
      FailedPatchCount?: number
      /** Format: int32 */
      CompliantSoftwareCount?: number
      /** Format: int32 */
      NonCompliantSoftwareCount?: number
      /** Format: int32 */
      FailedSoftwareCount?: number
      /** Format: int32 */
      IncorrectSoftwareCount?: number
      Stage?: string
      NoPatchInventory?: boolean
      WSUSEnabled?: boolean
      PatchJobRunning?: boolean
      DaytimePatchingEnabled?: boolean
      WUAOutOfDate?: boolean
      MissingBaselinePatches?: boolean
      WUAVersion?: string
      /** Format: date-time */
      LastInstallWindow?: string
      /** Format: date-time */
      NextInstallWindow?: string
      /** Format: date-time */
      LastSoftwareWindow?: string
      /** Format: date-time */
      NextSoftwareWindow?: string
      /** Format: date-time */
      LastPatchedDate?: string
      /** Format: date-time */
      LastMicrosoftPatchedDate?: string
      /** Format: date-time */
      LastThirdPartyPatchedDate?: string
      /** Format: date-time */
      LastPatchInventory?: string
      IsMicrosoftManaged?: boolean
      IsThirdPartyManaged?: boolean
    }
    'Automate.Api.Domain.Contracts.ExecuteDeviceScriptRequest': {
      /** Format: int32 */
      ScriptId?: number
      ParameterList?: string[]
      DeviceIdList?: number[]
    }
    'Automate.Api.Domain.Contracts.ExecuteDeviceScriptResponse': {
      ScriptResultList?: components['schemas']['Automate.Api.Domain.Contracts.ExecuteDeviceScriptResult'][]
      ContainsUnsuccessfulResults?: boolean
    }
    'Automate.Api.Domain.Contracts.ExecuteDeviceScriptResult': {
      /** Format: int32 */
      DeviceId?: number
      ResultDetails?: components['schemas']['Automate.Api.Domain.Contracts.ResponseResult']
    }
    'Automate.Api.Domain.Contracts.Patching.DevicesSummaryData': {
      /** Format: double */
      ComplianceScore?: number
      /** Format: int32 */
      DevicesAffectingComplianceCount?: number
      /** Format: int32 */
      DevicesAffectingPilotStageComplianceCount?: number
      /** Format: int32 */
      DevicesAffectingProductionStageComplianceCount?: number
      /** Format: int32 */
      DevicesAffectingTestStageComplianceCount?: number
      /** Format: int32 */
      DevicesNeedingAttentionCount?: number
      /** Format: int32 */
      EnabledWsusCount?: number
      /** Format: int32 */
      EntityId?: number
      EntityName?: string
      /** Format: int32 */
      InDaytimePatchingCount?: number
      /** Format: int32 */
      LastPatchJobFailedCount?: number
      /** Format: int32 */
      MissingBaselinePatchesCount?: number
      /** Format: int32 */
      MissingPatchInventoryCount?: number
      /** Format: int32 */
      OutOfDateWuaCount?: number
      /** Format: int32 */
      PendingRebootCount?: number
      /** Format: int32 */
      PendingUpdateCount?: number
      /** Format: double */
      PilotStageComplianceScore?: number
      /** Format: double */
      ProductionStageComplianceScore?: number
      /** Format: int32 */
      RunningPatchInstallationCount?: number
      /** Format: int32 */
      ServersAffectingComplianceCount?: number
      /** Format: double */
      ServersComplianceScore?: number
      /** Format: double */
      TestStageComplianceScore?: number
      /** Format: int32 */
      WorkstationsAffectingComplianceCount?: number
      /** Format: double */
      WorkstationsComplianceScore?: number
    }
    'LabTech.Models.Document': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ClientId?: number
      Name?: string
      /** Format: int32 */
      Size?: number
      Data?: string
      LastUser?: string
      /** Format: date-time */
      LastEditDate?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.DriveStats': {
      /** Format: int32 */
      DriveId?: number
      /** Format: int32 */
      FreeSpacePercentage?: number
      /** Format: int32 */
      FragmentedSpacePercentage?: number
      /** Format: date-time */
      EventDate?: string
      /** Format: int32 */
      SampleCount?: number
      /** Format: int32 */
      Week?: number
      /** Format: int32 */
      Month?: number
      /** Format: int32 */
      Year?: number
    }
    'LabTech.Models.EventLog': {
      /** Format: int32 */
      BlacklistId?: number
      /** Format: int32 */
      ComputerId?: number
      /** Format: int32 */
      EventId?: number
      /** Format: date-time */
      LastDate?: string
      LogName?: string
      LogType?: components['schemas']['LabTech.Models.EventLogType']
      Message?: string
      Source?: string
      /** Format: date-time */
      TimeGenerated?: string
    }
    'LabTech.Models.EventLogType': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.WebExtensions.SessionViewerSettings': {
      Domain?: string
      /** Format: int32 */
      Port?: number
      ApiToken?: string
      InstanceId?: string
      ExtensionId?: string
      EnableWccElement?: boolean
      User?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.SessionViewerUser']
    }
    'Automate.Api.Domain.Contracts.WebExtensions.SessionViewerUser': {
      /** Format: int32 */
      Id?: number
      Name?: string
      Permissions?: string
    }
    'Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldDefinition': {
      /** Format: int32 */
      SortOder?: number
      IsEncrypted?: boolean
      IsRestricted?: boolean
      ReadUserClasses?: components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass'][]
      EditUserClasses?: components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass'][]
      /** Format: int32 */
      ExtraFieldDefinitionId?: number
      Title?: string
      DisplayFormat?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldDisplayFormat']
      Location?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldLocation']
      TitleFormat?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldTitleFormat']
      Section?: string
      Tooltip?: string
      IsReadOnly?: boolean
      TextFieldSettings?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.TextFieldSettings']
      DropdownSettings?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.DropdownSettings']
      CheckboxSettings?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.CheckboxSettings']
    }
    'Automate.Api.Domain.Contracts.Users.UserClass': {
      /** Format: int32 */
      UserClassId?: number
      Name?: string
      Permissions?: components['schemas']['Automate.Api.Domain.Contracts.Users.UserClassUserPermissions']
      BinaryExtensionPermissions?: components['schemas']['Automate.Api.Domain.Contracts.SystemExtensions.Binary.BinaryExtensionPermission'][]
      WebExtensionClaims?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionPermission'][]
    }
    'Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldDisplayFormat': {
      /** Format: int32 */
      ExtraFieldDisplayFormatId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldLocation': {
      /** Format: int32 */
      ExtraFieldLocationId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldTitleFormat': {
      /** Format: int32 */
      ExtraFieldTitleFormatId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.ExtraFields.TextFieldSettings': {
      IsMasked?: boolean
      Value?: string
      DefaultValue?: string
    }
    'Automate.Api.Domain.Contracts.ExtraFields.DropdownSettings': {
      AvailableOptions?: string[]
      SelectedValue?: string
      DefaultValue?: string
    }
    'Automate.Api.Domain.Contracts.ExtraFields.CheckboxSettings': {
      IsChecked?: boolean
      DefaultValue?: boolean
    }
    'Automate.Api.Domain.Contracts.Users.UserClassUserPermissions': {
      SuperAdmin?: boolean
      SystemConfig?: boolean
      ClassConfig?: boolean
      CreateTickets?: boolean
      SharedLinks?: boolean
      TemplateRead?: boolean
      TemplateEdit?: boolean
      TemplateDelete?: boolean
      ClientRead?: boolean
      ClientEdit?: boolean
      ClientDelete?: boolean
      ReportRead?: boolean
      ReportEdit?: boolean
      ReportDelete?: boolean
      ContactRead?: boolean
      ContactEdit?: boolean
      ContactDelete?: boolean
      UserRead?: boolean
      UserEdit?: boolean
      UserDelete?: boolean
      ToolRead?: boolean
      ToolEdit?: boolean
      ToolDelete?: boolean
      ScriptRead?: boolean
      ScriptEdit?: boolean
      ScriptDelete?: boolean
      ManageGroups?: boolean
      DashTicketing?: boolean
      DashTime?: boolean
      DashManage?: boolean
      DashTrending?: boolean
      DashOverview?: boolean
      HUDUpdate?: boolean
      HUDShowAll?: boolean
      DataViewUpdate?: boolean
      DataViewDelete?: boolean
      DataViewShowAll?: boolean
      UsersShowAll?: boolean
      UserClassCreate?: boolean
      UserClassUpdate?: boolean
      PatchManagerConfig?: boolean
      ReportsCreate?: boolean
      ProbeTemplateExecute?: boolean
      ScheduledScriptsUpdate?: boolean
      ClientsShowAll?: boolean
      ShowPasswords?: boolean
      LocationsShowAll?: boolean
      ComputersCreate?: boolean
      ComputersUpdate?: boolean
      ComputersDelete?: boolean
      ComputersShowAll?: boolean
      ComputersForceUpdate?: boolean
      NetworkDeviceUpdate?: boolean
      NetworkDeviceDelete?: boolean
      NetworkDeviceShowAll?: boolean
      RetiredAssetsDelete?: boolean
      GroupsCreate?: boolean
      GroupsDelete?: boolean
      GroupsShowAll?: boolean
      GroupsScheduleScript?: boolean
      GroupMonitorsUpdate?: boolean
      GroupInfoUpdate?: boolean
      GroupManagedServices?: boolean
      RemoteMonitorsCreate?: boolean
      RemoteMonitorsDelete?: boolean
      InternalMonitorsCreate?: boolean
      InternalMonitorsUpdate?: boolean
      InternalMonitorsDelete?: boolean
      AlertsUpdate?: boolean
      AlertsDeleteAll?: boolean
      TicketsRead?: boolean
      TicketsUpdate?: boolean
      TicketsDelete?: boolean
      TicketsRequest?: boolean
      SearchesRead?: boolean
      SearchesUpdate?: boolean
      SearchesDelete?: boolean
      PatchManagerRead?: boolean
      PatchManagerUpdate?: boolean
      LanguagePackEditor?: boolean
      ManagedServiceCatalog?: boolean
      NavigationMenuUpdate?: boolean
      RSSFeedRead?: boolean
      RSSFeedUpdate?: boolean
      LinksDelete?: boolean
      PluginManager?: boolean
      SolutionCenter?: boolean
      DatabaseExecute?: boolean
      ServerStatus?: boolean
      ManageAudits?: boolean
      ManageRemoteCommands?: boolean
      ManageServiceLogs?: boolean
      ManageOutdated?: boolean
      ManageOfflineComputers?: boolean
      ManageScheduleClientScripts?: boolean
      DashboardConfig?: boolean
      ConfigApplicationList?: boolean
      ConfigEventBlackList?: boolean
      QuickConnect?: boolean
      PermissionsUpdate?: boolean
      UserClassRead?: boolean
      UserClassDelete?: boolean
    }
    'Automate.Api.Domain.Contracts.SystemExtensions.Binary.BinaryExtensionPermission': {
      /** Format: int32 */
      ExtensionPermissionId?: number
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      ExtensionGuid?: string
      ExtensionName?: string
      /** Format: int32 */
      PermissionId?: number
      PermissionName?: string
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionPermission': {
      /** Format: int32 */
      WebExtensionPermissionId?: number
      /** Format: int32 */
      WebExtensionId?: number
      PermissionKey?: string
      PermissionName?: string
      Description?: string
    }
    'Automate.Api.Domain.Contracts.ExtraFields.ExtraField': {
      /** Format: int32 */
      TargetId?: number
      /** Format: int32 */
      ExtraFieldDefinitionId?: number
      Title?: string
      DisplayFormat?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldDisplayFormat']
      Location?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldLocation']
      TitleFormat?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldTitleFormat']
      Section?: string
      Tooltip?: string
      IsReadOnly?: boolean
      TextFieldSettings?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.TextFieldSettings']
      DropdownSettings?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.DropdownSettings']
      CheckboxSettings?: components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.CheckboxSettings']
    }
    'Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldSectionResetRequest': {
      Section?: string
    }
    'LabTech.Models.FeatureFlag': {
      /** Format: int32 */
      Id?: number
      Name?: string
      IsEnabled?: boolean
    }
    'LabTech.Models.GroupComputer': {
      Id?: string
      GroupId?: string
      ComputerId?: string
    }
    'LabTech.Models.GroupContact': {
      Id?: string
      GroupId?: string
      ContactId?: string
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Group.RemoveEntitiesFromGroupRequest': {
      /** Format: int32 */
      GroupId?: number
      /** @enum {string} */
      EntityType?:
        | 'System'
        | 'Computer'
        | 'Site'
        | 'Company'
        | 'Probe'
        | 'NetworkDevice'
        | 'Ticket'
        | 'Group'
        | 'MobileDevice'
        | 'Vendor'
        | 'VendorProduct'
        | 'Possibility'
        | 'Opportunity'
        | 'Contact'
        | 'User'
        | 'Script'
        | 'Plugin'
        | 'Service'
        | 'ServiceBundle'
        | 'Search'
        | 'SearchFolder'
        | 'Dataview'
        | 'DataviewFolder'
        | 'UserFolder'
        | 'UserClass'
      EntityIds?: number[]
    }
    'LabTech.Models.GroupNetworkDevice': {
      Id?: string
      GroupId?: string
      DeviceId?: string
    }
    'Automate.Api.Domain.Contracts.Patching.GroupPatchingPolicy': {
      ApprovalPolicies?: components['schemas']['Automate.Api.Domain.Contracts.Patching.ApprovalPolicy'][]
      /** Format: int32 */
      GroupId?: number
      GroupName?: string
      IsManual?: boolean
      IsPatchingGroup?: boolean
      MicrosoftUpdatePolicy?: components['schemas']['Automate.Api.Domain.Contracts.Patching.MicrosoftUpdatePolicy']
      /** Format: int32 */
      Priority?: number
      RebootPolicy?: components['schemas']['Automate.Api.Domain.Contracts.Patching.RebootPolicy']
      ThirdPartyUpdatePolicy?: components['schemas']['Automate.Api.Domain.Contracts.Patching.ThirdPartyUpdatePolicy']
      AutoJoinSettings?: components['schemas']['Automate.Api.Domain.Contracts.Groups.GroupAutoJoinSettings']
      /** Format: int32 */
      WindowsComputerCount?: number
    }
    'Automate.Api.Domain.Contracts.Patching.MicrosoftUpdatePolicy': {
      /** Format: int32 */
      Id?: number
      Name?: string
      UpdateMode?: components['schemas']['Automate.Api.Domain.Contracts.Patching.WindowsUpdateAgentMode']
      CreateRestorePoint?: boolean
      DaytimePatching?: boolean
      /** Format: int32 */
      DaytimePatchingMinimumUptime?: number
      InstallMissingBaselinePatches?: boolean
      WakeSystem?: boolean
      PatchingPolicySchedule?: components['schemas']['Automate.Api.Domain.Contracts.Patching.PatchingPolicySchedule']
      Windows10UpdatePolicySettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.Windows10UpdatePolicySettings']
      PatchingPolicyScriptOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.PatchingPolicyScriptOptions']
      ScheduleDay?: components['schemas']['Automate.Api.Domain.Contracts.Patching.UpdatePolicyScheduleDay']
      ScheduleStartHour?: string
      ScheduleTimeSpan?: string
    }
    'Automate.Api.Domain.Contracts.Patching.RebootPolicy': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      MinutesAfterInstallToReboot?: number
      Name?: string
      RebootAction?: components['schemas']['Automate.Api.Domain.Contracts.Patching.PatchRebootAction']
      RebootMode?: components['schemas']['Automate.Api.Domain.Contracts.Patching.PatchRebootMode']
      RebootPriorToFirstPatchInstall?: boolean
      SetMaintenanceWindowForReboot?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.ThirdPartyUpdatePolicy': {
      CreateRestorePoint?: boolean
      DaytimePatching?: boolean
      /** Format: int32 */
      Id?: number
      Name?: string
      ScheduleDay?: components['schemas']['Automate.Api.Domain.Contracts.Patching.UpdatePolicyScheduleDay']
      ScheduleStartHour?: string
      ScheduleTimeSpan?: string
      WakeSystem?: boolean
    }
    'Automate.Api.Domain.Contracts.Groups.GroupAutoJoinSettings': {
      ComputerAutoJoinSearch?: components['schemas']['Automate.Api.Domain.Contracts.Searches.Search']
      IsLimitedToComputerAutoJoin?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.WindowsUpdateAgentMode': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Patching.PatchingPolicySchedule': {
      /** Format: int32 */
      StartTime?: number
      Duration?: string
      PolicyScheduleType?: components['schemas']['Automate.Api.Domain.Contracts.Patching.PolicyScheduleType']
      DatesScheduleSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.DatesScheduleSettings']
      DaysScheduleSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.DaysScheduleSettings']
    }
    'Automate.Api.Domain.Contracts.Patching.Windows10UpdatePolicySettings': {
      ServiceBranch?: string
      /** Format: int32 */
      FeatureUpdateDeferment?: number
      /** Format: int32 */
      QualityUpdateDeferment?: number
    }
    'Automate.Api.Domain.Contracts.Patching.PatchingPolicyScriptOptions': {
      BeforeScript?: components['schemas']['Automate.Api.Domain.Contracts.Patching.PatchingPolicyScript']
      AfterScript?: components['schemas']['Automate.Api.Domain.Contracts.Patching.PatchingPolicyScript']
      CancelActionOnBeforeScriptFailure?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.UpdatePolicyScheduleDay': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Patching.PatchRebootAction': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Patching.PatchRebootMode': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Searches.Search': {
      /** Format: int32 */
      SearchId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Patching.PolicyScheduleType': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Patching.DatesScheduleSettings': {
      MonthlyOccurence?: string[]
      Dates?: number[]
      LastDayOfMonth?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.DaysScheduleSettings': {
      MonthlyOccurence?: string[]
      WeeklyOccurence?: string[]
      DailyOccurence?: string[]
    }
    'Automate.Api.Domain.Contracts.Patching.PatchingPolicyScript': {
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      ScriptGuid?: string
      ScriptName?: string
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Groups.GroupTreeItem': {
      /** Format: int32 */
      GroupId?: number
      /** Format: int32 */
      ParentId?: number
      Name?: string
      FullName?: string
      UserHasDirectAccess?: boolean
      IsLimitedToComputerAutoJoinSearch?: boolean
      ParentGroups?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Groups.GroupTreeItem'][]
      ChildGroups?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Groups.GroupTreeItem'][]
      /** Format: int32 */
      DirectComputerMembershipCount?: number
      /** Format: int32 */
      IndirectComputerMembershipCount?: number
    }
    'LabTech.Models.LicensedProduct': {
      CdKey?: string
      /** Format: int32 */
      CurrentLicenseUsage?: number
      Data?: string
      IsLicenseActive?: boolean
      LicenseFile?: string
      /** Format: int32 */
      MaxLicenseUsage?: number
      /** Format: int32 */
      ProductId?: number
      ProductSku?: string
    }
    'LabTech.Models.Link': {
      Id?: string
      Name?: string
      URL?: string
      Category?: string
    }
    'Automate.Api.Domain.Contracts.Patching.LocalOverridePolicy': {
      ApprovalPolicies?: components['schemas']['Automate.Api.Domain.Contracts.Patching.ApprovalPolicy'][]
      /** Format: int32 */
      ComputerId?: number
      MicrosoftUpdatePolicy?: components['schemas']['Automate.Api.Domain.Contracts.Patching.MicrosoftUpdatePolicy']
      RebootPolicy?: components['schemas']['Automate.Api.Domain.Contracts.Patching.RebootPolicy']
      ThirdPartyUpdatePolicy?: components['schemas']['Automate.Api.Domain.Contracts.Patching.ThirdPartyUpdatePolicy']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkMapNode': {
      /** Format: int32 */
      DeviceId?: number
      DeviceName?: string
      DeviceFriendlyName?: string
      Description?: string
      DeviceType?: string
      ChildNodeList?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkMapNode'][]
      DeviceMacAddress?: string
      IpAddress?: string
      Status?: string
      /** @enum {string} */
      DeviceClassification?:
        | 'Unknown'
        | 'Computer'
        | 'NetworkDevice'
        | 'InternetConnection'
        | 'BlackBox'
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkMapNodeDetails': {
      /** Format: int32 */
      DeviceId?: number
      DeviceType?: string
      /** Format: int64 */
      Uptime?: number
      IgnoreDeviceScan?: boolean
      /** Format: date-time */
      AssetDate?: string
      /** Format: date-time */
      DateLastInventoried?: string
      /** Format: date-time */
      LastContactDate?: string
      IpAddress?: string
      DeviceMacAddress?: string
      OperatingSystem?: string
      Model?: string
      LocationProbe?: string
      Manufacturer?: string
      UplinkPort?: string
      UplinkName?: string
      UplinkIpAddress?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.EncryptionMethod': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.HashMethod': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ScanFrequency': {
      /** Format: int32 */
      ScanFrequencyId?: number
      /** Format: int32 */
      FrequencyInMinutes?: number
      DisplayName?: string
      FrequencyCategory?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ScanFrequencyCategory']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ScanFrequencyCategory': {
      /** Format: int32 */
      CategoryId?: number
      Description?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.StatusScanNetworkPortOption': {
      /** Format: int32 */
      StatusScanNetworkPortOptionId?: number
      Description?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.ProbeEventLevel': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Maintenance.MaintenanceWindowDefinition': {
      /** Format: int32 */
      MaintenanceWindowDefinitionId?: number
      Name?: string
      Comment?: string
    }
    'LabTech.Models.ManagedLicense': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ClientId?: number
      Name?: string
      SearchString?: string
      /** Format: int32 */
      LicenseCount?: number
      /** Format: int32 */
      InstalledCount?: number
      ProductKey?: components['schemas']['LabTech.Models.ProductKey']
    }
    'LabTech.Models.ProductKey': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ClientId?: number
      ProductName?: string
      SerialNumber?: string
      LicenseKey?: string
      DoesExpire?: boolean
      /** Format: date-time */
      ExpirationDate?: string
      Notes?: string
      /** Format: int32 */
      ComputerId?: number
      ComputerName?: string
    }
    'Automate.Api.Domain.Contracts.PresentationLayer.ManagementPacks.ManagementPackQuickSettingsRequest': {
      IsCoreServicesEnabled?: boolean
      IsDatabaseEnabled?: boolean
      IsMessagingServicesEnabled?: boolean
      IsNetworkPortsEnabled?: boolean
      IsWebsitesAndProxiesEnabled?: boolean
      AlertLevel?: string
    }
    'Automate.Api.Domain.Contracts.PresentationLayer.ManagementPacks.ManagementPackQuickSettingsResponse': {
      CoreServicesStatus?: components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.ManagementPacks.ManagementPackStatus']
      DatabaseStatus?: components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.ManagementPacks.ManagementPackStatus']
      MessagingServicesStatus?: components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.ManagementPacks.ManagementPackStatus']
      NetworkPortStatus?: components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.ManagementPacks.ManagementPackStatus']
      WebsitesAndProxiesStatus?: components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.ManagementPacks.ManagementPackStatus']
    }
    'Automate.Api.Domain.Contracts.PresentationLayer.ManagementPacks.ManagementPackStatus': {
      IsInstalled?: boolean
      IsEnabled?: boolean
      AlertLevel?: string
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Menus.ComputerCommands.CommandMenuItemBase': {
      CommandKey?: string
      DisplayName?: string
      /** Format: int32 */
      DisplayOrder?: number
      Route?: string
      RequireConfirmation?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.MicrosoftUpdatePolicy': {
      /** Format: int32 */
      PolicyId?: number
      PolicyName?: string
      ScheduleSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.PatchingPolicySchedule']
      WindowsUpdateAgentSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.WindowsUpdateAgentSettings']
      PolicyOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.MicrosoftUpdatePolicyOptions']
      WorkstationOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.PatchingPolicyWorkstationOptions']
      Windows10UpdateOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.MicrosoftUpdatePolicyWindows10Options']
      ScriptOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.PatchingPolicyScriptOptions']
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.PatchingPolicySchedule': {
      UseSchedule?: boolean
      WindowStart?: string
      WindowDuration?: string
      PolicyScheduleType?: string
      DatesSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.DatesScheduleSettings']
      DaysSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.DaysScheduleSettings']
      PatchTuesdaySettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.PatchTuesdayScheduleSettings']
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.WindowsUpdateAgentSettings': {
      UseWindowsUpdateAgentMode?: boolean
      Mode?: string
      DisableUserInterface?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.MicrosoftUpdatePolicyOptions': {
      InstallMissingBaselinePatches?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.PatchingPolicyWorkstationOptions': {
      SendWakeOnLanPacket?: boolean
      CreateWindowsRestorePoint?: boolean
      DaytimePatchingOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.DaytimePatchingOptions']
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.MicrosoftUpdatePolicyWindows10Options': {
      ServiceBranchSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.ServiceBranchSettings']
      FeatureUpdateDefermentSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.UpdateDefermentSettings']
      QualityUpdateDefermentSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.UpdateDefermentSettings']
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.PatchingPolicyScriptOptions': {
      BeforeScriptOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.PatchingPolicyScript']
      AfterScriptOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.PatchingPolicyScript']
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.DatesScheduleSettings': {
      MonthlyOccurrence?: string[]
      Dates?: number[]
      LastDayOfMonth?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.DaysScheduleSettings': {
      MonthlyOccurrence?: string[]
      WeeklyOccurrence?: string[]
      DailyOccurrence?: string[]
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.PatchTuesdayScheduleSettings': {
      /** Format: int32 */
      DelayInDays?: number
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.DaytimePatchingOptions': {
      AllowDaytimePatching?: boolean
      RequireMinimumUptime?: boolean
      MinimumUptime?: string
      UpdateOnly?: boolean
      PromptInterval?: string
      /** Format: int32 */
      PromptDeadline?: number
      PromptMessage?: string
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.ServiceBranchSettings': {
      UseServiceBranch?: boolean
      IsTargeted?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.UpdateDefermentSettings': {
      UseDeferment?: boolean
      /** Format: int32 */
      DefermentPeriodDays?: number
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.PatchingPolicyScript': {
      RunScript?: boolean
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      ScriptGuid?: string
      ScriptName?: string
      CancelActionOnScriptFailure?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.PatchingGroup': {
      /** Format: int32 */
      GroupId?: number
      GroupName?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.Alerting.MonitorAlertSuspension': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ComputerId?: number
      Monitor?: components['schemas']['LabTech.Models.Monitors.Monitor']
      /** Format: date-time */
      SuspensionDate?: string
    }
    'LabTech.Models.Monitors.Monitor': {
      AlertAction?: components['schemas']['LabTech.Models.AlertAction']
      AlertStyle?: components['schemas']['LabTech.Models.Monitors.MonitorAlertStyle']
      ComparerSettings?: components['schemas']['LabTech.Models.Monitors.MonitorComparerSettings']
      ControlGuid?: string
      /** Format: int32 */
      FailureCount?: number
      IdField?: string
      /** Format: int32 */
      Interval?: number
      Installed?: boolean
      IsInternalMonitor?: boolean
      IsNetworkDeviceMonitor?: boolean
      /** Format: date-time */
      LastChecked?: string
      /** Format: date-time */
      LastFailed?: string
      LastStatus?: string
      Guid?: string
      MonitorAlertTarget?: components['schemas']['LabTech.Models.Monitors.MonitorAlertTarget']
      /** Format: int32 */
      MonitorId?: number
      MonitorOwner?: components['schemas']['LabTech.Models.Monitors.MonitorOwner']
      MonitorState?: components['schemas']['LabTech.Models.Monitors.MonitorState']
      LocalState?: components['schemas']['LabTech.Models.Monitors.MonitorState']
      Name?: string
      PendingUpdate?: boolean
      ReportCategory?: components['schemas']['LabTech.Models.ReportCategory']
      TicketCategory?: components['schemas']['LabTech.Models.TicketCategory']
      /** Format: int32 */
      WarningCount?: number
      Script?: components['schemas']['LabTech.Models.Script']
      /** Format: int64 */
      Version?: number
      RoutineParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.MonitorRoutineParameters']
      Routine?: components['schemas']['LabTech.Models.Monitors.MonitorRoutine']
      AlertMessages?: components['schemas']['LabTech.Models.Monitors.MonitorAlertMessages']
      Targets?: components['schemas']['LabTech.Models.Monitors.MonitorTarget']
      IsGlobalMonitor?: boolean
      IsOverridden?: boolean
      IsCollectingData?: boolean
      AffectedEntities?: components['schemas']['LabTech.Models.Monitors.MonitorAffectedEntities']
    }
    'LabTech.Models.Monitors.MonitorAlertStyle': {
      InternalMonitorAlertStyle?: components['schemas']['LabTech.Models.Monitors.InternalMonitorAlertStyle']
      RemoteMonitorAlertStyle?: components['schemas']['LabTech.Models.Monitors.RemoteMonitorAlertStyle']
    }
    'LabTech.Models.Monitors.MonitorComparerSettings': {
      Comparer?: components['schemas']['LabTech.Models.Monitors.MonitorComparer']
      Format?: components['schemas']['LabTech.Models.Monitors.MonitorComparerSettingsFormat']
      Value?: components['schemas']['LabTech.Models.Monitors.MonitorComparerValue']
      /** Format: double */
      SmoothingCoefficient?: number
      IsExpression?: boolean
      SmoothingStyle?: components['schemas']['LabTech.Models.Monitors.MonitorComparerSettingsSmoothingStyle']
      LanguageOverrides?: { [key: string]: string }
      ResultFormat?: components['schemas']['LabTech.Models.Monitors.MonitorComparerSettingsResultFormat']
    }
    'LabTech.Models.Monitors.MonitorAlertTarget': {
      /** Format: int32 */
      Id?: number
      Name?: string
      /** Format: int32 */
      CompId?: number
    }
    'LabTech.Models.Monitors.MonitorOwner': {
      /** Format: int32 */
      OwnerType?: number
      Description?: string
      OwningGroup?: components['schemas']['LabTech.Models.Group']
      OwningScript?: components['schemas']['LabTech.Models.Script']
      OwningPlugin?: components['schemas']['LabTech.Models.Monitors.MonitorPluginOwner']
    }
    'LabTech.Models.Monitors.MonitorState': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.ReportCategory': {
      /** Format: int32 */
      Id?: number
      Name?: string
      /** Format: byte */
      Icon?: string
      TitleText?: string
    }
    'LabTech.Models.Script': {
      Id?: string
      Folder?: components['schemas']['LabTech.Models.ScriptFolder']
      Name?: string
      Comments?: string
      IsComputerScript?: boolean
      IsLocationScript?: boolean
      IsMaintenanceScript?: boolean
      IsFunctionScript?: boolean
      IsOffline?: boolean
      IgnoreForMobileDevices?: boolean
      IsPublicSharable?: boolean
      IsUserResponse?: boolean
      IsSystemScript?: boolean
      IsMobileDeviceScript?: boolean
      IsNetworkDeviceScript?: boolean
      IsContactScript?: boolean
      /** Format: int32 */
      Version?: number
      GUID?: string
      Parameters?: string[]
      EditPermission?: number[]
      Permission?: number[]
      /** Format: int32 */
      AutomationTime?: number
      /** Format: date-time */
      UpdateDate?: string
      UpdatedBy?: string
      FullFolderPath?: string
      ScriptData?: components['schemas']['LabTech.Models.ScriptData']
    }
    'LabTech.Models.Monitors.RoutineParameters.MonitorRoutineParameters': {
      Format?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.MonitorRoutineParametersFormat']
      UnformattedMonitorParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.UnformattedMonitorRoutineParameters']
      InternalDatabaseQueryParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.InternalDatabaseQueryParameters']
      LatencyTarget?: string
      GetNetworkResponseParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.GetNetworkResponseParameters']
      SnmpOidQueryParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.SnmpOidQueryParameters']
      PerformanceCounterQueryParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.PerformanceCounterQueryParameters']
      HardwareSensorQueryParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.HardwareSensorQueryParameters']
      NetworkDeviceWbemQueryParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.NetworkDeviceWbemQueryParameters']
      GetPluginCommandResultParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.GetPluginCommandResultParameters']
      FileOrDirectoryQueryParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.FileOrDirectoryQueryParameters']
      ServiceName?: string
      VolumeMountpoint?: string
      RegistryValueQueryParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.RegistryValueQueryParameters']
      ProcessName?: string
      EventLogListenerParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.EventLogQueryParameters']
      GetExecutableResultParameters?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.GetExecutableResultParameters']
      WmiQuery?: string
    }
    'LabTech.Models.Monitors.MonitorRoutine': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.MonitorAlertMessages': {
      SuccessSubject?: string
      SuccessMessage?: string
      FailureSubject?: string
      FailureMessage?: string
    }
    'LabTech.Models.Monitors.MonitorTarget': {
      Location?: components['schemas']['LabTech.Models.Location']
      Client?: components['schemas']['LabTech.Models.Client']
      Computer?: components['schemas']['LabTech.Models.Computer']
      NetworkDevice?: components['schemas']['LabTech.Models.NetworkDevice']
      GroupIds?: number[]
    }
    'LabTech.Models.Monitors.MonitorAffectedEntities': {
      RemoteMonitorAffectedLocation?: components['schemas']['LabTech.Models.Location']
      RemoteMonitorAffectedClient?: components['schemas']['LabTech.Models.Client']
      InternalMonitorAffectedLocations?: components['schemas']['LabTech.Models.Location'][]
      InternalMonitorAffectedClients?: components['schemas']['LabTech.Models.Client'][]
    }
    'LabTech.Models.Monitors.InternalMonitorAlertStyle': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.RemoteMonitorAlertStyle': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.MonitorComparer': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.MonitorComparerSettingsFormat': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.MonitorComparerValue': {
      Format?: components['schemas']['LabTech.Models.Monitors.MonitorComparerValueFormat']
      MultiValueFormat?: components['schemas']['LabTech.Models.Monitors.MonitorComparerMultiValueFormat']
      StateBasedValueFormat?: components['schemas']['LabTech.Models.Monitors.MonitorComparerStateBasedValueFormat']
      SingleValueFormat?: components['schemas']['LabTech.Models.Monitors.MonitorComparerSingleValueFormat']
    }
    'LabTech.Models.Monitors.MonitorComparerSettingsSmoothingStyle': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.MonitorComparerSettingsResultFormat': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.MonitorPluginOwner': {
      ControlGUID?: string
      PluginName?: string
      AlterationInstructions?: string
    }
    'LabTech.Models.ScriptFolder': {
      Id?: string
      ParentId?: string
      Name?: string
      GUID?: string
      SubFolders?: components['schemas']['LabTech.Models.ScriptFolder'][]
      ParentFolder?: components['schemas']['LabTech.Models.ScriptFolder']
    }
    'LabTech.Models.ScriptData': {
      ScriptMetadata?: components['schemas']['LabTech.Models.ScriptMetadata']
      ScriptSteps?: components['schemas']['LabTech.Models.ScriptStep'][]
    }
    'LabTech.Models.Monitors.RoutineParameters.MonitorRoutineParametersFormat': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.UnformattedMonitorRoutineParameters': {
      Where?: string
      What?: string
      DataOut?: string
      IdField?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.InternalDatabaseQueryParameters': {
      FieldToCheck?: string
      TableOrViewToQuery?: string
      AdditionalConditions?: string
      IdentityField?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.GetNetworkResponseParameters': {
      Target?: string
      Port?: string
      Payload?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.SnmpOidQueryParameters': {
      IpAddress?: string
      SnmpVersion?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.SnmpOidQuerySnmpVersion']
      Community?: string
      Username?: string
      EncryptionMethod?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.SnmpOidQueryEncryptionMethod']
      EncryptionPassword?: string
      AuthenticationMethod?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.SnmpOidQueryAuthenticationMethod']
      AuthenticationPassword?: string
      ObjectIdentifier?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.PerformanceCounterQueryParameters': {
      PerformanceObject?: string
      PerformanceCounter?: string
      Instance?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.HardwareSensorQueryParameters': {
      Sensor?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.HardwareSensorQuerySensor']
      SensorNumber?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.NetworkDeviceWbemQueryParameters': {
      Namespace?: string
      Query?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.GetPluginCommandResultParameters': {
      /** Format: int32 */
      CommandNumber?: number
      Data?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.FileOrDirectoryQueryParameters': {
      Directory?: string
      File?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.RegistryValueQueryParameters': {
      Hive?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.RegistryValueQueryRegistryHive']
      Key?: string
      Value?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.EventLogQueryParameters': {
      Log?: string
      LevelFilter?: components['schemas']['LabTech.Models.Monitors.RoutineParameters.EventLogQueryEventLevelFilter']
      /** Format: int64 */
      Keywords?: number
      Source?: string
      /** Format: int32 */
      EventId?: number
      RegularExpressionFilter?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.GetExecutableResultParameters': {
      FullyQualifiedExecutableString?: string
      ResultTransformRegularExpression?: string
    }
    'LabTech.Models.Monitors.MonitorComparerValueFormat': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.MonitorComparerMultiValueFormat': {
      Values?: string[]
    }
    'LabTech.Models.Monitors.MonitorComparerStateBasedValueFormat': {
      NormalComparer?: components['schemas']['LabTech.Models.Monitors.MonitorComparerSettings']
      WarningComparer?: components['schemas']['LabTech.Models.Monitors.MonitorComparerSettings']
      ErrorComparer?: components['schemas']['LabTech.Models.Monitors.MonitorComparerSettings']
    }
    'LabTech.Models.Monitors.MonitorComparerSingleValueFormat': {
      Value?: string
    }
    'LabTech.Models.ScriptMetadata': {
      ExtraDataFields?: string
      Parameters?: string
      Globals?: string
      /** Format: int32 */
      ScriptVersion?: number
      ScriptGuid?: string
    }
    'LabTech.Models.ScriptStep': {
      /** Format: int32 */
      ScriptSection?: number
      /** Format: int32 */
      FunctionId?: number
      Param1?: string
      Param2?: string
      Param3?: string
      Param4?: string
      Param5?: string
      /** Format: int32 */
      Sort?: number
      /** Format: int32 */
      Continue?: number
      /** Format: int32 */
      OsLimit?: number
      /** Format: int32 */
      Indentation?: number
    }
    'LabTech.Models.Monitors.RoutineParameters.SnmpOidQuerySnmpVersion': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.SnmpOidQueryEncryptionMethod': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.SnmpOidQueryAuthenticationMethod': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.HardwareSensorQuerySensor': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.RegistryValueQueryRegistryHive': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Models.Monitors.RoutineParameters.EventLogQueryEventLevelFilter': {
      MatchVerbose?: boolean
      MatchInformational?: boolean
      MatchWarning?: boolean
      MatchError?: boolean
      MatchCritical?: boolean
    }
    'LabTech.Repositories.MySQL.Domain.Models.MonitorDataCollectionSettings': {
      /** Format: int32 */
      MonitorId?: number
      /** Format: int32 */
      ComputerId?: number
      UnitLabel?: string
      GraphTitle?: string
      /** Format: int32 */
      GraphVerticalLimit?: number
    }
    'LabTech.Repositories.MySQL.Domain.Models.MonitorStatistic': {
      /** Format: int32 */
      MonitorId?: number
      /** Format: date-time */
      LastFailTime?: string
      LastFailMessage?: string
      /** Format: date-time */
      LastSuccessTime?: string
      LastSuccessMessage?: string
      /** Format: date-time */
      LastWarningTime?: string
      LastWarningMessage?: string
      /** Format: date-time */
      MonitorStartTime?: string
      /** Format: int32 */
      ComputerId?: number
    }
    'Automate.Api.Domain.Contracts.Patching.NonCompliantSummaryData': {
      /** Format: int32 */
      LowSeverityCount?: number
      /** Format: int32 */
      ModerateSeverityCount?: number
      /** Format: int32 */
      ImportantSeverityCount?: number
      /** Format: int32 */
      CriticalSeverityCount?: number
      /** Format: int32 */
      UnspecifiedSeverityCount?: number
      /** Format: int32 */
      LowCvssCount?: number
      /** Format: int32 */
      MediumCvssCount?: number
      /** Format: int32 */
      HighCvssCount?: number
      /** Format: int32 */
      TotalNonCompliantCount?: number
    }
    'Automate.Api.Domain.Contracts.System.PasswordResetConfigurationResponse': {
      CanGeneratePasswordResetToken?: boolean
    }
    'Automate.Api.Domain.Contracts.System.PasswordResetTokenRequest': {
      Username?: string
      PasswordResetToken?: string
    }
    'Automate.Api.Domain.Contracts.System.PasswordResetTokenResponse': {
      IsValid?: boolean
    }
    'Automate.Api.Domain.Contracts.System.ValidatePasswordResetRequest': {
      PasswordResetToken?: string
    }
    'LabTech.Models.PatchActionArgs': {
      /** Format: int32 */
      EntityType?: number
      /** Format: int32 */
      EntityId?: number
    }
    'Automate.Api.Domain.Contracts.Patching.RpcContracts.ExecutePatchActionRequest': {
      PatchActionDetailList?: components['schemas']['Automate.Api.Domain.Contracts.Patching.RpcContracts.PatchActionInformation'][]
    }
    'Automate.Api.Domain.Contracts.Patching.RpcContracts.PatchActionInformation': {
      /** Format: int32 */
      ComputerId?: number
      ProductKeyIdList?: string[]
    }
    'LabTech.Repositories.MySQL.Domain.Models.Patching.PatchesSummaryData': {
      /** Format: int32 */
      EntityId?: number
      EntityName?: string
      /** Format: int32 */
      TestStageFailedPatchesCount?: number
      /** Format: int32 */
      TestStageNotAttemptedPatchesCount?: number
      /** Format: int32 */
      TestStageInstalledPatchesCount?: number
      /** Format: int32 */
      PilotStageFailedPatchesCount?: number
      /** Format: int32 */
      PilotStageNotAttemptedPatchesCount?: number
      /** Format: int32 */
      PilotStageInstalledPatchesCount?: number
      /** Format: int32 */
      ProductionStageFailedPatchesCount?: number
      /** Format: int32 */
      ProductionStageNotAttemptedPatchesCount?: number
      /** Format: int32 */
      ProductionStageInstalledPatchesCount?: number
    }
    'LabTech.Models.PatchInformation': {
      WebServerPatchVersion?: string
      DBAgentServerPatchVersion?: string
      ControlCenterPatchVersion?: string
      RemoteAgentPatchVersion?: string
      LinuxAgentPatchVersion?: string
      MacAgentPatchVersion?: string
      /** Format: date-time */
      LastPatchedDate?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.Patching.PatchManagerDevice': {
      /** Format: int32 */
      ComputerId?: number
      ComputerName?: string
      Stage?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.Patching.PatchStage']
      OperatingSystemName?: string
      NormalizedOperatingSystemName?: string
      Company?: components['schemas']['LabTech.Models.Client']
      Site?: components['schemas']['LabTech.Models.Location']
      /** Format: date-time */
      LastMicrosoftWindow?: string
      /** Format: date-time */
      LastThirdPartyWindow?: string
      /** Format: date-time */
      NextMicrosoftWindow?: string
      /** Format: date-time */
      NextThirdPartyWindow?: string
      DidLastPatchJobFail?: boolean
      IsDaytimePatchingEnabled?: boolean
      IsMissingBaseline?: boolean
      IsMissingPatchInventory?: boolean
      IsPatchJobRunning?: boolean
      IsPendingUpdate?: boolean
      IsRebootPending?: boolean
      IsWsusEnabled?: boolean
      IsWuaOutOfDate?: boolean
      /** Format: int32 */
      MissingPatchCount?: number
      /** Format: double */
      MicrosoftCompliancePercent?: number
      /** Format: double */
      ThirdPartyCompliancePercent?: number
      HasApprovedPatches?: boolean
      HasApprovedMicrosoftPatches?: boolean
      HasApprovedThirdPartyPatches?: boolean
    }
    'LabTech.Repositories.MySQL.Domain.Models.Patching.PatchStage': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.Repositories.MySQL.Domain.DatabaseEntities.ProbeCommand': {
      /** Format: int32 */
      ProbeCommandId?: number
      /** Format: int32 */
      ProbeId?: number
      Command?: components['schemas']['Automate.Api.Domain.Contracts.ProbeRemoteCommand']
      Status?: components['schemas']['Automate.Api.Domain.Contracts.ProbeCommandStatus']
      Parameters?: string[]
      Output?: string
      IsFastalk?: boolean
      /** Format: date-time */
      DateUpdated?: string
    }
    'Automate.Api.Domain.Contracts.ProbeRemoteCommand': {
      /** Format: int32 */
      Id?: number
      Name?: string
      Description?: string
    }
    'Automate.Api.Domain.Contracts.ProbeCommandStatus': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.ProbeCommandHistoryEntry': {
      /** Format: int32 */
      ProbeCommandHistoryId?: number
      /** Format: int32 */
      ProbeId?: number
      /** Format: date-time */
      DateExecuted?: string
      Status?: components['schemas']['Automate.Api.Domain.Contracts.ProbeCommandStatus']
      ProbeRemoteCommand?: components['schemas']['Automate.Api.Domain.Contracts.ProbeRemoteCommand']
      Output?: string
      User?: string
      /** Format: date-time */
      DateFinished?: string
    }
    'LabTech.RESTApi.RpcContracts.NewProbeConfiguration': {
      IsAgentPushEnabled?: boolean
      IsAutomatedDeploymentEnabled?: boolean
      IsDataCollectionEnabled?: boolean
      IsSnmpTrapServerEnabled?: boolean
      IsSyslogServerEnabled?: boolean
      IsTftpServerEnabled?: boolean
      CredentialsList?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials': {
      /** Format: int32 */
      ProbeConfigurationCredentialsId?: number
      /** Format: int32 */
      ProbeConfigurationId?: number
      /** Format: int32 */
      CredentialId?: number
      /** Format: int32 */
      AttemptSequence?: number
      CredentialsAlias?: string
      CredentialDetails?: components['schemas']['LabTech.Models.ExternalSystemCredentials']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration': {
      /** Format: int32 */
      ProbeConfigurationId?: number
      /** Format: int32 */
      LocationId?: number
      /** Format: int32 */
      AgentDeploymentAttemptMaximum?: number
      AutomatedDeploymentEnabled?: boolean
      DiscoverySettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.DiscoveryScanSettings']
      StatusSettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.StatusScanSettings']
      SnmpSettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.SnmpSettings']
      IsDataCollectionEnabled?: boolean
      /** Format: int32 */
      SnmpTrapServerListeningPort?: number
      SyslogSettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.SyslogServerSettings']
      TftpSettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.TftpServerSettings']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.DiscoveryScanSettings': {
      DiscoveryScanFrequency?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ScanFrequency']
      LimitDiscoveryToScanWindow?: boolean
      DiscoveryWindowStart?: string
      DiscoveryWindowEnd?: string
      IsMacAddresScanningEnabled?: boolean
      /** Format: int32 */
      ConcurrentThreadCount?: number
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.StatusScanSettings': {
      StatusScanFrequency?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ScanFrequency']
      StatusScanNetworkPortList?: string
      NetworkPortOption?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.StatusScanNetworkPortOption']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.SnmpSettings': {
      CommunityStringsGet?: string
      /** Format: int32 */
      TimeoutInSeconds?: number
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.SyslogServerSettings': {
      /** Format: int32 */
      SyslogServerListeningPort?: number
      SyslogServerIpFilter?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.TftpServerSettings': {
      TftpServerIpFilter?: string
      /** Format: int32 */
      TftpServerListeningPort?: number
      AllowTftpUploads?: boolean
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationDefaults': {
      /** Format: int32 */
      ProbeDefaultSettingId?: number
      CommunityStringGetList?: string
      /** Format: int32 */
      SnmpTimeoutInSeconds?: number
      /** Format: int32 */
      AgentDeploymentAttemptMaximum?: number
      DiscoverySettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.DiscoveryScanSettings']
      StatusSettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.StatusScanSettings']
      SnmpSettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.SnmpSettings']
      IsDataCollectionEnabled?: boolean
      /** Format: int32 */
      SnmpTrapServerListeningPort?: number
      SyslogSettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.SyslogServerSettings']
      TftpSettings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.TftpServerSettings']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSubnet': {
      /** Format: int32 */
      ProbeSubnetId?: number
      /** Format: int32 */
      ProbeConfigurationId?: number
      Network?: string
      SubnetMask?: string
      Label?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeExcludedIpAddressRange': {
      /** Format: int32 */
      ExcludedIpRangeId?: number
      /** Format: int32 */
      ProbeSubnetId?: number
      ExcludedIpRange?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpConfiguration': {
      /** Format: int32 */
      ProbeSnmpConfigurationId?: number
      /** Format: int32 */
      ProbeConfigurationId?: number
      /** Format: int32 */
      SnmpTimeoutInSeconds?: number
      CommunityStringGetList?: string
      SnmpV3Settings?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpV3Configuration']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpV3Configuration': {
      /** Format: int32 */
      ProbeSnmpConfigurationId?: number
      SnmpV3Username?: string
      Authentication?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpAuthentication']
      Encryption?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpEncryption']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpAuthentication': {
      /** Format: int32 */
      SnmpAuthenticationId?: number
      /** Format: int32 */
      ProbeSnmpConfigurationId?: number
      AuthenticationSecret?: string
      HashMethod?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.HashMethod']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpEncryption': {
      /** Format: int32 */
      SnmpEncryptionId?: number
      /** Format: int32 */
      ProbeSnmpConfigurationId?: number
      EncryptionPassword?: string
      EncryptionMethod?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.EncryptionMethod']
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.NetMapPluginStatus': {
      /** Format: int32 */
      ComputerId?: number
      IsNetMapPluginEnabled?: boolean
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeDiscoveryScanStatus': {
      /** Format: int32 */
      ProbeDiscoveryScanStatusId?: number
      /** Format: int32 */
      LocationId?: number
      /** Format: int32 */
      ProbeId?: number
      IsDiscoveryScanRunning?: boolean
      /** Format: date-time */
      DiscoveryScanStart?: string
      /** Format: date-time */
      LastDiscoveryScan?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.ProbeEvent': {
      /** Format: int32 */
      ProbeId?: number
      EventLevel?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ProbeEventLevel']
      Message?: string
      /** Format: date-time */
      EventTime?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSummary': {
      /** Format: int32 */
      CurrentProbeId?: number
      /** Format: int32 */
      TotalDevices?: number
      /** Format: int32 */
      OfflineDevices?: number
      /** Format: int32 */
      MissingAgents?: number
      /** Format: date-time */
      LastDiscoveryScan?: string
      AgentDeploymentEnabled?: boolean
      HasMaxTilePermissions?: boolean
      IsGenerationTwo?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.RebootPolicy': {
      /** Format: int32 */
      PolicyId?: number
      PolicyName?: string
      RebootPolicyType?: string
      DisableServerPatchRebootSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.DisableServerPatchRebootSettings']
      PromptWithoutDeadlineSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.PromptWithoutDeadlineSettings']
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.DisableServerPatchRebootSettings': {
      ServerSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.DisableServerPatchRebootServerSettings']
      WorkstationSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.DisableServerPatchRebootWorkstationSettings']
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.PromptWithoutDeadlineSettings': {
      RebootTriggerType?: string
      PostPatchInstallTriggerSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.PostPatchInstallTriggerSettings']
      ScheduleTriggerSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.PatchingPolicySchedule']
      PromptSettings?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.RebootPolicyPromptSettings']
      RebootPriorToPatchJobInstalls?: boolean
      MaintenanceModeOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.RebootPolicyMaintenanceModeOptions']
      ScriptOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.PatchingPolicyScriptOptions']
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.DisableServerPatchRebootServerSettings': {
      AlertTemplate?: components['schemas']['Automate.Api.Domain.Contracts.AlertTemplates.AlertTemplate']
      AlertMessage?: string
      TicketCategory?: components['schemas']['Automate.Api.Domain.Contracts.Ticketing.TicketCategory']
      ReportCategory?: components['schemas']['Automate.Api.Domain.Contracts.Reporting.ReportCategory']
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.DisableServerPatchRebootWorkstationSettings': {
      PromptMessage?: string
      PromptInterval?: string
      RebootDeadline?: string
      RebootDeadlinePromptMessage?: string
      RebootDeadlinePromptDuration?: string
      SendWakeOnLanPacket?: boolean
      RebootIfNoUserLoggedIn?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.PostPatchInstallTriggerSettings': {
      LimitToMicrosoftUpdatePolicyWindow?: boolean
      WindowExtension?: string
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.RebootPolicyPromptSettings': {
      UsePrompt?: boolean
      RequiresConfirmation?: boolean
      RebootIfNoUserLoggedOn?: boolean
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.RebootPolicy.RebootPolicyMaintenanceModeOptions': {
      SetWindow?: boolean
      WindowIgnoreTypes?: string[]
      WindowDuration?: string
    }
    'Automate.Api.Domain.Contracts.AlertTemplates.AlertTemplate': {
      /** Format: int32 */
      TemplateId?: number
      TemplateName?: string
    }
    'Automate.Api.Domain.Contracts.Ticketing.TicketCategory': {
      /** Format: int32 */
      CategoryId?: number
      CategoryName?: string
    }
    'Automate.Api.Domain.Contracts.Reporting.ReportCategory': {
      /** Format: int32 */
      CategoryId?: number
      CategoryName?: string
    }
    'Automate.Api.Domain.Contracts.Analytics.RecordedAction': {
      Type?: components['schemas']['Automate.Api.Domain.Contracts.Analytics.RecordedActionType']
      /** Format: int32 */
      ObjectId?: number
      SecondaryIdentifier?: string
      Description?: string
      Source?: components['schemas']['Automate.Api.Domain.Contracts.Analytics.RecordedActionSource']
    }
    'Automate.Api.Domain.Contracts.Analytics.RecordedActionType': {
      /** Format: int32 */
      RecordedActionTypeId?: number
    }
    'Automate.Api.Domain.Contracts.Analytics.RecordedActionSource': {
      /** Format: int32 */
      RecordedActionSourceId?: number
    }
    'Automate.Api.Domain.Contracts.InstallerRequest': {
      /** Format: int32 */
      LocationId?: number
      /** Format: int32 */
      InstallerType?: number
    }
    'LabTech.Models.RetiredAsset': {
      Id?: string
      Client?: components['schemas']['LabTech.Models.Client']
      Location?: components['schemas']['LabTech.Models.Location']
      ComputerName?: string
      OperatingSystemName?: string
      OperatingSystemVersion?: string
      Comment?: string
      LocalIPAddress?: string
      GatewayIPAddress?: string
      AssetTag?: string
      /** Format: date-time */
      AssetDate?: string
      /** Format: date-time */
      RetiredDate?: string
      RetireComment?: string
      ComputerId?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.RunningScripts.RunningScript': {
      /** Format: int32 */
      ScriptInstanceId?: number
      Target?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.RunningScripts.RunningScriptTarget']
      Script?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Script']
      Source?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptSource']
      State?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptState']
      /** Format: date-time */
      StartDate?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.RunningScripts.RunningScriptTarget': {
      TargetType?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.RunningScripts.RunningScriptTargetType']
      Computer?: components['schemas']['Automate.Api.Domain.Contracts.Computers.Computer']
      Client?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Client']
    }
    'Automate.Api.Domain.Contracts.Scripts.Script': {
      /** Format: int32 */
      ScriptId?: number
      TicketEntrySettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Settings.TicketEntrySettings']
      TimeEntrySettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Settings.TimeEntrySettings']
      UserClassAccessSettings?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Settings.UserClassAccess'][]
      Name?: string
      Description?: string
      Folder?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptFolder']
      ScriptTargetType?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptTarget']
      ScriptOptions?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptOptions']
      /** Format: int32 */
      AutomationMinutes?: number
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptSource': {
      SourceType?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.SourceType']
      Name?: string
      AlternativeName?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptState': {
      /** Format: int32 */
      StateId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.RunningScripts.RunningScriptTargetType': {
      /** Format: int32 */
      TargetTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Computers.Computer': {
      /** Format: int32 */
      ComputerId?: number
      Name?: string
      FriendlyName?: string
      IsOnline?: boolean
      Location?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Location']
      Client?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Client']
    }
    'Automate.Api.Domain.Contracts.Scripts.Settings.TicketEntrySettings': {
      TicketSubject?: string
      TicketRequestor?: string
      TicketCategory?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Settings.TicketEntryCategory']
      CloseTicketTrigger?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Settings.CloseTicketTrigger']
    }
    'Automate.Api.Domain.Contracts.Scripts.Settings.TimeEntrySettings': {
      TicketId?: string
      MinutesToLog?: string
      TimeCategory?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Settings.TimeEntryCategory']
      StopTimerTrigger?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Settings.StopTimerTrigger']
      Notes?: string
      Technician?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Settings.TimeEntryTechnician']
    }
    'Automate.Api.Domain.Contracts.Scripts.Settings.UserClassAccess': {
      /** Format: int32 */
      UserClassId?: number
      Name?: string
      CanExecute?: boolean
      CanEdit?: boolean
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptFolder': {
      /** Format: int32 */
      ScriptFolderId?: number
      Name?: string
      ChildFolders?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptFolder'][]
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptTarget': {
      /** Format: int32 */
      ScriptTargetTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptOptions': {
      IsIsolatedScript?: boolean
      IsMaintenanceScript?: boolean
      IsFunctionScript?: boolean
      IsOfflineScript?: boolean
      IsSystemScript?: boolean
    }
    'Automate.Api.Domain.Contracts.Scripts.SourceType': {
      /** Format: int32 */
      SourceTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.Settings.TicketEntryCategory': {
      /** Format: int32 */
      TicketCategoryId?: number
      Name?: string
      IsOverridden?: boolean
      CustomValue?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.Settings.CloseTicketTrigger': {
      /** Format: int32 */
      CloseTicketTriggerTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.Settings.TimeEntryCategory': {
      /** Format: int32 */
      TimeCategoryId?: number
      Name?: string
      IsOverridden?: boolean
      CustomValue?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.Settings.StopTimerTrigger': {
      /** Format: int32 */
      StopTimerTriggerTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.Settings.TimeEntryTechnician': {
      /** Format: int32 */
      UserId?: number
      Name?: string
      IsOverridden?: boolean
      CustomValue?: string
    }
    'LabTech.Models.ScheduledScript': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      ScriptId?: number
      /** Format: int32 */
      ClientId?: number
      /** Format: int32 */
      LocationId?: number
      /** Format: int32 */
      ComputerId?: number
      /** Format: int32 */
      GroupId?: number
      IncludeSubgroups?: boolean
      /** Format: int32 */
      SearchId?: number
      Disabled?: boolean
      /** Format: date-time */
      EffectiveStartDate?: string
      /** Format: date-time */
      EffectiveEndDate?: string
      /** Format: int32 */
      EffectiveOccurrences?: number
      /** Format: int32 */
      DistributionWindowType?: number
      /** Format: int32 */
      DistributionWindowAmount?: number
      /** Format: date-time */
      NextRun?: string
      /** Format: date-time */
      NextSchedule?: string
      /** Format: int32 */
      ScheduleType?: number
      ExcludeTimeStart?: string
      ExcludeTimeEnd?: string
      /** Format: int32 */
      Interval?: number
      /** Format: int32 */
      ScheduleWeekOfMonth?: number
      /** Format: int32 */
      ScheduleDayOfWeek?: number
      /** Format: int32 */
      RepeatType?: number
      /** Format: int32 */
      RepeatAmount?: number
      /** Format: int32 */
      RepeatStopAfter?: number
      SkipOffline?: boolean
      OfflineOnly?: boolean
      WakeOffline?: boolean
      WakeScript?: boolean
      DisableTimeZone?: boolean
      RunScriptOnProbe?: boolean
      Parameters?: string
      /** Format: int32 */
      Priority?: number
      /** Format: double */
      TimeZoneAdd?: number
      User?: string
      /** Format: date-time */
      LastUpdate?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScript': {
      /** Format: int32 */
      ScheduledScriptId?: number
      Script?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.Script']
      ScheduleTarget?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScriptTarget']
      Schedule?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptScheduleSettings']
      LimitingSearch?: components['schemas']['Automate.Api.Domain.Contracts.Searches.Search']
      OfflineActionFlags?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScriptOfflineActionFlags']
      DistributionWindow?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.DistributionWindow']
      Parameters?: components['schemas']['System.Collections.Generic.KeyValuePair_System.String_System.String_'][]
      UseAgentTime?: boolean
      ScheduledBy?: string
      /** Format: int32 */
      Occurrences?: number
      /** Format: date-time */
      StartDate?: string
      /** Format: date-time */
      ExpireDate?: string
      /** Format: date-time */
      NextRunDate?: string
      IsDisabled?: boolean
      /** Format: int32 */
      Priority?: number
      IncludeSubGroups?: boolean
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScriptTarget': {
      ScheduleTargetType?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.ScheduleTargetType']
      Group?: components['schemas']['Automate.Api.Domain.Contracts.Groups.Group']
      Client?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Client']
      Location?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Location']
      Computer?: components['schemas']['Automate.Api.Domain.Contracts.Computers.Computer']
      NetworkDevice?: components['schemas']['Automate.Api.Domain.Contracts.NetworkDevices.NetworkDevice']
    }
    'Automate.Api.Domain.Contracts.Scripts.ScheduledScripts.ScheduleTargetType': {
      /** Format: int32 */
      ScheduleTargetTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Groups.Group': {
      /** Format: int32 */
      GroupId?: number
      Name?: string
      FullName?: string
    }
    'Automate.Api.Domain.Contracts.NetworkDevices.NetworkDevice': {
      /** Format: int32 */
      NetworkDeviceId?: number
      Name?: string
      FriendlyName?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptFunction': {
      /** Format: int32 */
      FunctionId?: number
      Name?: string
      IsConditionalFunction?: boolean
      Description?: string
      TargetType?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptFunctionTarget']
      Parameters?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptFunctionParameter'][]
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptFunctionTarget': {
      /** Format: int32 */
      TargetTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptFunctionParameter': {
      Name?: string
      Description?: string
      Type?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptReferences': {
      /** Format: int32 */
      ScheduleCount?: number
      InternalMonitors?: components['schemas']['Automate.Api.Domain.Contracts.Monitors.Monitor'][]
      RemoteMonitors?: components['schemas']['Automate.Api.Domain.Contracts.Monitors.Monitor'][]
      AlertTemplates?: components['schemas']['Automate.Api.Domain.Contracts.Alerts.AlertTemplate'][]
    }
    'Automate.Api.Domain.Contracts.Monitors.Monitor': {
      /** Format: int32 */
      MonitorId?: number
      Name?: string
      Groups?: components['schemas']['Automate.Api.Domain.Contracts.Groups.Group'][]
      TargetComputer?: components['schemas']['Automate.Api.Domain.Contracts.Computers.Computer']
    }
    'LabTech.Models.SensorCheck': {
      Id?: string
      Name?: string
      /** @enum {string} */
      SensorCheckType?: 'SystemAverages' | 'SystemCounts' | 'Trends' | 'PerDayCounts'
    }
    'Automate.Api.Domain.Contracts.System.ServerInformation': {
      /** Format: int32 */
      ServerId?: number
      OperatingSystem?: string
      MacAddress?: string
      MachineName?: string
      CPUName?: string
      /** Format: int32 */
      CPUSockets?: number
      /** Format: int32 */
      CPUCores?: number
      /** Format: int32 */
      LogicalProcessors?: number
      /** Format: int64 */
      MemoryTotal?: number
      IsDatabaseServer?: boolean
      IsWebServer?: boolean
    }
    'Automate.Api.Domain.Contracts.Security.ImplicitClientUpgradeRequest': {
      ImplicitToken?: string
    }
    'Automate.Api.Domain.Contracts.SingleSignOn.RegisterSsoRequest': {
      RegistrationToken?: string
      EnabledUserFolders?: number[]
    }
    'Automate.Api.Domain.Contracts.SingleSignOn.UnregisterSsoRequest': {
      ClientId?: string
    }
    'LabTech.Repositories.MySQL.Domain.Models.DriveStatistics': {
      /** Format: int32 */
      DriveId?: number
      /** Format: double */
      PercentageUsedDifference?: number
    }
    'Automate.Api.Domain.Contracts.Statistics.AgentStatistics': {
      /** Format: int32 */
      TotalAgentsPurchased?: number
      /** Format: int32 */
      TotalAgentsDeployed?: number
    }
    'Automate.Api.Domain.Contracts.Statistics.ScriptAutomationTimeCategoryResponse': {
      Total?: components['schemas']['Automate.Api.Domain.Contracts.Statistics.ScriptAutomationTimeResult']
      System?: components['schemas']['Automate.Api.Domain.Contracts.Statistics.ScriptAutomationTimeResult']
      Users?: components['schemas']['Automate.Api.Domain.Contracts.Statistics.ScriptAutomationTimeResult']
      /** Format: int32 */
      MaximumHistoryDaysAvailable?: number
    }
    'Automate.Api.Domain.Contracts.Statistics.ScriptAutomationTimeResult': {
      /** Format: int32 */
      SuccessfulScripts?: number
      /** Format: int32 */
      AutomationTimeMinutes?: number
      /** Format: int32 */
      AutomationValue?: number
    }
    'Automate.Api.Domain.Contracts.Statistics.ScriptAutomationTimeUserResponse': {
      UserList?: components['schemas']['Automate.Api.Domain.Contracts.Statistics.ScriptAutomationTimeUserResult'][]
      /** Format: int32 */
      MaximumHistoryDaysAvailable?: number
    }
    'Automate.Api.Domain.Contracts.Statistics.ScriptAutomationTimeUserResult': {
      Name?: string
      /** Format: int32 */
      SuccessfulScripts?: number
      /** Format: int32 */
      AutomationTimeMinutes?: number
      /** Format: int32 */
      AutomationValue?: number
    }
    'Automate.Api.Domain.Contracts.Statistics.GetComputerStatisticsRequest': {
      /** Format: int32 */
      NumberOfDays?: number
      EntityIds?: number[]
      EntityType?: string
    }
    'Automate.Api.Domain.Contracts.Statistics.GetScriptStatisticsResponse': {
      /** Format: int64 */
      ScriptHistoryCount?: number
      /** Format: int64 */
      ScriptPendingCount?: number
      /** Format: int64 */
      ScriptRunningCount?: number
      /** Format: int64 */
      ScriptFailureCount?: number
      /** Format: int64 */
      ScriptSuccessCount?: number
    }
    'Automate.Api.Domain.Contracts.Statistics.GetCommandStatisticsResponse': {
      /** Format: int64 */
      CommandPendingCount?: number
      /** Format: int64 */
      CommandFailureCount?: number
    }
    'Automate.Api.Domain.Contracts.Statistics.IndividualScriptStatisticsResponse': {
      /** Format: int32 */
      SuccessCount?: number
      /** Format: int32 */
      TotalRunCount?: number
      LastRunTarget?: string
      /** Format: date-time */
      LastRunDate?: string
      /** Format: int32 */
      TotalValue?: number
      /** Format: date-time */
      LastHistoryDateAvailable?: string
      LastRunStatus?: string
    }
    'Automate.Api.Domain.Contracts.Workflows.SystemWorkflowProgressEntry': {
      /** Format: int32 */
      SystemWorkflowProgressId?: number
      Description?: string
      WorkflowStep?: components['schemas']['Automate.Api.Domain.Contracts.Workflows.WorkflowStep']
      WorkflowStatus?: components['schemas']['Automate.Api.Domain.Contracts.Workflows.WorkflowStatus']
      WorkflowMetadata?: components['schemas']['Automate.Api.Domain.Contracts.Workflows.WorkflowMetadata'][]
    }
    'Automate.Api.Domain.Contracts.Workflows.WorkflowStep': {
      /** Format: int32 */
      WorkflowStepId?: number
      Description?: string
      IsRequired?: boolean
      /** Format: int32 */
      PrerequisiteId?: number
    }
    'Automate.Api.Domain.Contracts.Workflows.WorkflowStatus': {
      /** Format: int32 */
      WorkflowStatusId?: number
      Description?: string
    }
    'Automate.Api.Domain.Contracts.Workflows.WorkflowMetadata': {
      /** Format: int32 */
      SystemWorkflowProgressMetadataId?: number
      MetadataKey?: string
      MetadataValue?: string
    }
    'LabTech.Models.TemplateAvailableProperty': {
      PropertyId?: string
      PropertyName?: string
      PropertyDescription?: string
      PropertyGuid?: string
    }
    'Automate.Api.Domain.Contracts.Patching.ThirdPartyPatchesSummaryData': {
      /** Format: double */
      ThirdPartyComplianceScore?: number
      /** Format: double */
      ThirdPartyServerComplianceScore?: number
      /** Format: double */
      ThirdPartyWorkstationComplianceScore?: number
      /** Format: int32 */
      DevicesAffectingComplianceCount?: number
      /** Format: int32 */
      ServersAffectingComplianceCount?: number
      /** Format: int32 */
      WorkstationsAffectingComplianceCount?: number
      /** Format: int32 */
      ApprovedCount?: number
      /** Format: int32 */
      CompliantCount?: number
      /** Format: int32 */
      FailedCount?: number
      /** Format: int32 */
      IncorrectVersionCount?: number
      /** Format: int32 */
      NonCompliantCount?: number
      /** Format: int32 */
      NotAttemptedCount?: number
    }
    'Automate.Api.Domain.Contracts.Patching.ThirdPartyPatchVersion': {
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      LTProductKey?: string
      Versions?: string[]
    }
    'Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.ThirdPartyUpdatePolicy': {
      /** Format: int32 */
      PolicyId?: number
      PolicyName?: string
      PatchingPolicySchedule?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.Schedule.PatchingPolicySchedule']
      WorkstationOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.UpdatePolicy.PatchingPolicyWorkstationOptions']
      ScriptOptions?: components['schemas']['Automate.Api.Domain.Contracts.Patching.v1_5.PatchingPolicyScriptOptions']
    }
    'Automate.Api.Domain.Contracts.Users.UserAccess': {
      /** Format: int32 */
      UserId?: number
      UserPermissions?: string[]
      PluginPermissions?: components['schemas']['Automate.Api.Domain.Contracts.SystemExtensions.Binary.UserBinaryExtensionPermission'][]
      WebExtensionClaims?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.UserExtensionClaimType'][]
    }
    'Automate.Api.Domain.Contracts.SystemExtensions.Binary.UserBinaryExtensionPermission': {
      HasPermission?: boolean
      /** Format: int32 */
      ExtensionPermissionId?: number
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      ExtensionGuid?: string
      ExtensionName?: string
      /** Format: int32 */
      PermissionId?: number
      PermissionName?: string
    }
    'Automate.Api.Domain.Contracts.WebExtensions.UserExtensionClaimType': {
      HasClaim?: boolean
      /** Format: int32 */
      ExtensionClaimTypeId?: number
      /** Format: int32 */
      WebExtensionId?: number
      DisplayName?: string
      ClaimKey?: string
      Description?: string
    }
    'Automate.Api.Domain.ExternalContracts.ConnectWiseSso.SsoUser': {
      PartnerId?: string
      Id?: string
      UserName?: string
      Email?: string
      FirstName?: string
      LastName?: string
      LoginScheme?: string
      EmailConfirmed?: boolean
      IsDisabled?: boolean
      /** Format: int64 */
      Created?: number
      /** Format: int64 */
      Updated?: number
    }
    'Automate.Api.Domain.Contracts.SingleSignOn.LinkToSsoRequest': {
      ServiceIdentifier?: string
    }
    'Automate.Api.Domain.Contracts.Users.ChangePasswordRequest': {
      OldPassword?: string
      NewPassword?: string
    }
    'Automate.Api.Domain.Contracts.Users.UserPasswordResetRequest': {
      Username?: string
      PasswordResetToken?: string
      NewPassword?: string
    }
    'LabTech.Models.UserAudit': {
      /** Format: int32 */
      Id?: number
      User?: components['schemas']['LabTech.Models.User']
      Message?: string
      /** Format: date-time */
      DateCreated?: string
      /** Format: int32 */
      ExternalId?: number
      AuditAction?: components['schemas']['LabTech.Models.AuditAction']
      Source?: components['schemas']['LabTech.Models.AuditSource']
      SecondaryIdentifier?: string
    }
    'LabTech.Models.AuditAction': {
      /** Format: int32 */
      Id?: number
      Name?: string
      /** Format: int32 */
      Level?: number
      ExtensionName?: string
    }
    'LabTech.Models.AuditSource': {
      /** Format: int32 */
      Id?: number
      Name?: string
    }
    'LabTech.RESTApi.Security.APIAuthLinkInformation': {
      Nonce?: string
    }
    'Automate.Api.Domain.Contracts.Users.UserAvatar': {
      /** Format: byte */
      FileData?: string
    }
    'Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel': {
      /** Format: int32 */
      WebExtensionId?: number
      WebExtensionName?: string
      ExtensionClaims?: components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.ExtensionClaimViewModel'][]
    }
    'Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.ExtensionClaimViewModel': {
      /** Format: int32 */
      ExtensionClaimTypeId?: number
      DisplayName?: string
      Description?: string
      IsAssigned?: boolean
      IsDefaultClaim?: boolean
    }
    'Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionRequest': {
      AssignedExtensions?: components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.AssignedWebExtension'][]
    }
    'Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.AssignedWebExtension': {
      /** Format: int32 */
      WebExtensionId?: number
      AssignedClaims?: number[]
    }
    'LabTech.Models.UserFavorite': {
      /** Format: int32 */
      Id?: number
      /** Format: int32 */
      UserId?: number
      AdditionalIdentifier?: string
      /** Format: int32 */
      Order?: number
      ItemGUID?: string
    }
    'Automate.Api.Domain.Contracts.Users.UserFolder': {
      /** Format: int32 */
      UserFolderId?: number
      Name?: string
      IsSsoEnabled?: boolean
    }
    'LabTech.Repositories.MySQL.Domain.Models.PresentationLayer.UserProfile': {
      IsSuperAdmin?: boolean
      IsFolderLimited?: boolean
      UserClassIdList?: number[]
    }
    'Automate.Api.Domain.Contracts.Users.User': {
      /** Format: int32 */
      UserId?: number
      Name?: string
      FirstName?: string
      LastName?: string
      /** Format: date-time */
      LastSuccessfulLogin?: string
      Password?: string
      Folder?: components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
      EmailAddress?: string
      /** Format: int32 */
      AuditingLevel?: number
      /** Format: int32 */
      CommandLevel?: number
      UsesTicketBasedSecurity?: boolean
      /** Format: int32 */
      NewTicketDisplayLimit?: number
      /** Format: int32 */
      OpenTicketLimit?: number
      IsIntegrator?: boolean
      IsLocked?: boolean
      IsTicketRouter?: boolean
      IsTicketSupervisor?: boolean
      TicketLevel?: components['schemas']['Automate.Api.Domain.Contracts.Ticketing.TicketLevel']
      RequiresLoginReport?: boolean
      RequiresLogoutReport?: boolean
      /** Format: date-time */
      LastUpdated?: string
      PrimaryClients?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Client'][]
      UserClasses?: components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass'][]
      AssociatedGroups?: components['schemas']['Automate.Api.Domain.Contracts.Groups.Group'][]
      SsoStatus?: components['schemas']['Automate.Api.Domain.Contracts.Users.UserSingleSignOnStatus']
      SsoEmail?: string
    }
    'Automate.Api.Domain.Contracts.Ticketing.TicketLevel': {
      /** Format: int32 */
      TicketLevelId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Users.UserSingleSignOnStatus': {
      /** Format: int32 */
      SsoStatusId?: number
      StatusName?: string
    }
    'LabTech.Models.UserSetting': {
      /** Format: int32 */
      UserId?: number
      Name?: string
      Value?: string
    }
    'Automate.Api.Domain.Contracts.Users.UserLockoutInfo': {
      UserName?: string
      /** Format: int32 */
      UserId?: number
      LastIPAddress?: string
      IsLocked?: boolean
      /** Format: int32 */
      FailedLoginCount?: number
      /** Format: date-time */
      LastFailDateUtc?: string
      /** Format: date-time */
      LockOutExpirationDateUtc?: string
    }
    'Automate.Api.Domain.Contracts.Clients.Contact': {
      /** Format: int32 */
      ContactId?: number
      FirstName?: string
      LastName?: string
      EmailAddress?: string
      PhoneNumber?: string
      MobileNumber?: string
      PagerNumber?: string
      FaxNumber?: string
      Address1?: string
      Address2?: string
      City?: string
      State?: string
      ZipCode?: string
      Client?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Client']
      Location?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Location']
      Password?: string
      Permissions?: string[]
      IsManaged?: boolean
      IsActivated?: boolean
      /** Format: date-time */
      DateCreated?: string
      /** Format: date-time */
      LastUpdateDate?: string
      PluginData?: {
        [key: string]: { [key: string]: { [key: string]: unknown } }
      }
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.ScriptSettingsViewModel': {
      UserClasses?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.UserClass'][]
      TicketCategories?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.TicketEntryCategory'][]
      CloseTicketTriggers?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.CloseTicketTrigger'][]
      Users?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.TimeEntryTechnician'][]
      StopTimerTriggers?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.StopTimerTrigger'][]
      TicketTimeCategories?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.TimeEntryCategory'][]
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.UserClass': {
      /** Format: int32 */
      UserClassId?: number
      Name?: string
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.TicketEntryCategory': {
      /** Format: int32 */
      TicketCategoryId?: number
      Name?: string
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.CloseTicketTrigger': {
      /** Format: int32 */
      CloseTicketTriggerTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.TimeEntryTechnician': {
      /** Format: int32 */
      UserId?: number
      Name?: string
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.StopTimerTrigger': {
      /** Format: int32 */
      StopTimerTriggerTypeId?: number
      Name?: string
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Scripts.ScriptSettings.TimeEntryCategory': {
      /** Format: int32 */
      TimeCategoryId?: number
      Name?: string
    }
    'Automate.Api.Domain.Contracts.Scripts.ScriptSummary': {
      Name?: string
      Description?: string
      Folder?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptFolder']
      ScriptTargetType?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptTarget']
      ScriptOptions?: components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScriptOptions']
      /** Format: int32 */
      AutomationMinutes?: number
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionAreaControls': {
      WebExtensionArea?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionArea']
      ClickButtons?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionClickButton'][]
      MenuButtons?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionMenuButton'][]
      Tiles?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionTile'][]
      Redirects?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionRedirect'][]
      InlineFrames?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionInlineFrame'][]
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionArea': {
      /** Format: int32 */
      WebExtensionAreaId?: number
      WebExtensionAreaName?: string
      /** Format: int32 */
      WebExtensionScreenId?: number
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionClickButton': {
      IconUrl?: string
      ButtonText?: string
      ClickAction?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionClickAction']
      AllowsMultiSelect?: boolean
      /** Format: int32 */
      WebExtensionControlId?: number
      WebExtensionControlName?: string
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      WebExtensionGuid?: string
      ExtensionClaimType?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.ExtensionClaimType']
      IsCoreExtension?: boolean
      WebExtensionAreaControlTypeIds?: number[]
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionMenuButton': {
      IconUrl?: string
      ButtonText?: string
      MenuItems?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionMenuItem'][]
      AllowsMultiSelect?: boolean
      /** Format: int32 */
      WebExtensionControlId?: number
      WebExtensionControlName?: string
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      WebExtensionGuid?: string
      ExtensionClaimType?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.ExtensionClaimType']
      IsCoreExtension?: boolean
      WebExtensionAreaControlTypeIds?: number[]
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionTile': {
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      TileGuid?: string
      NormalTileSourceUrl?: string
      NormalTileHeaderUrl?: string
      MaxTileSourceUrl?: string
      TileTitle?: string
      TileSize?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionTileSize']
      /** Format: int32 */
      WebExtensionControlId?: number
      WebExtensionControlName?: string
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      WebExtensionGuid?: string
      ExtensionClaimType?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.ExtensionClaimType']
      IsCoreExtension?: boolean
      WebExtensionAreaControlTypeIds?: number[]
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionRedirect': {
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      RedirectGuid?: string
      SourceUrl?: string
      /** Format: int32 */
      WebExtensionControlId?: number
      WebExtensionControlName?: string
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      WebExtensionGuid?: string
      ExtensionClaimType?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.ExtensionClaimType']
      IsCoreExtension?: boolean
      WebExtensionAreaControlTypeIds?: number[]
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionInlineFrame': {
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      InlineFrameGuid?: string
      SourceUrl?: string
      /** Format: int32 */
      WebExtensionControlId?: number
      WebExtensionControlName?: string
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      WebExtensionGuid?: string
      ExtensionClaimType?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.ExtensionClaimType']
      IsCoreExtension?: boolean
      WebExtensionAreaControlTypeIds?: number[]
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionClickAction': {
      /** Format: int32 */
      ClickActionId?: number
      Url?: string
      UrlOpenType?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionUrlOpenType']
    }
    'Automate.Api.Domain.Contracts.WebExtensions.ExtensionClaimType': {
      /** Format: int32 */
      ExtensionClaimTypeId?: number
      /** Format: int32 */
      WebExtensionId?: number
      DisplayName?: string
      ClaimKey?: string
      Description?: string
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionMenuItem': {
      /** Format: int32 */
      WebExtensionMenuItemId?: number
      /** Format: int32 */
      WebExtensionMenuItemParentId?: number
      MenuText?: string
      ClickAction?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionClickAction']
      MenuItems?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionMenuItem'][]
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionTileSize': {
      /** Format: int32 */
      TileSizeId?: number
      Description?: string
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtensionUrlOpenType': {
      /** Format: int32 */
      UrlOpenTypeId?: number
      Description?: string
    }
    'Automate.Api.Domain.Contracts.WebExtensions.WebExtension': {
      /** Format: int32 */
      WebExtensionId?: number
      ExtensionSolution?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.ExtensionSolution']
      ExtensionStatus?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.ExtensionStatus']
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      WebExtensionGuid?: string
      WebExtensionName?: string
      Author?: string
      Description?: string
      Version?: string
      FileUrl?: string
      Filename?: string
      FileCheckSum?: string
      HasStaticFiles?: boolean
      HasGraphFiles?: boolean
      IsCoreExtension?: boolean
      ExtensionClaimTypes?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.ExtensionClaimType'][]
      Redirects?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionRedirect'][]
      Tiles?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionTile'][]
      InlineFrames?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionInlineFrame'][]
      MenuButtons?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionMenuButton'][]
      ClickButtons?: components['schemas']['Automate.Api.Domain.Contracts.WebExtensions.WebExtensionClickButton'][]
    }
    'Automate.Api.Domain.Contracts.WebExtensions.ExtensionSolution': {
      /** Format: int32 */
      ExtensionSolutionId?: number
      /**
       * Format: uuid
       * @example 00000000-0000-0000-0000-000000000000
       */
      SolutionGuid?: string
      SolutionName?: string
      IsInstalled?: boolean
      InstalledVersion?: string
      LatestVersion?: string
    }
    'Automate.Api.Domain.Contracts.WebExtensions.ExtensionStatus': {
      /** Format: int32 */
      ExtensionStatusId?: number
      Description?: string
    }
    'Automate.Api.Domain.Contracts.Patching.WindowsServiceBranchStats': {
      ServerReleaseCounts?: components['schemas']['Automate.Api.Domain.Contracts.Patching.WindowsReleaseStats'][]
      /** Format: int32 */
      ServerNoChannelCount?: number
      /** Format: int32 */
      ServerSemiAnnualChannelCount?: number
      /** Format: int32 */
      ServerSemiAnnualChannelTargetedCount?: number
      WorkstationReleaseCounts?: components['schemas']['Automate.Api.Domain.Contracts.Patching.WindowsReleaseStats'][]
      /** Format: int32 */
      WorkstationNoChannelCount?: number
      /** Format: int32 */
      WorkstationSemiAnnualChannelCount?: number
      /** Format: int32 */
      WorkstationSemiAnnualChannelTargetedCount?: number
    }
    'Automate.Api.Domain.Contracts.Patching.WindowsReleaseStats': {
      /** Format: int32 */
      ReleaseId?: number
      /** Format: int32 */
      ReleaseCount?: number
    }
    'System.Collections.Generic.KeyValuePair_System.String_System.String_': {
      Key?: string
      Value?: string
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerChassis_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerChassis'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.Client_': {
      ResultSet?: components['schemas']['LabTech.Models.Client'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.CommandExecute_': {
      ResultSet?: components['schemas']['LabTech.Models.CommandExecute'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.CommandHistory_': {
      ResultSet?: components['schemas']['LabTech.Models.CommandHistory'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.ComputerDriver_': {
      ResultSet?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ComputerDriver'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerDrive_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerDrive'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.SmartData_': {
      ResultSet?: components['schemas']['LabTech.Models.SmartData'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPatchingPolicy_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerPatchingPolicy'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPrinter_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerPrinter'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.Computer_': {
      ResultSet?: components['schemas']['LabTech.Models.Computer'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.MaintenanceMode_': {
      ResultSet?: components['schemas']['LabTech.Models.MaintenanceMode'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerMemorySlot_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerMemorySlot'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerProcessor_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerProcessor'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerService_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerService'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSoftware_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerSoftware'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerVideoCard_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerVideoCard'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSensor_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerSensor'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSystemSlot_': {
      ResultSet?: components['schemas']['LabTech.Models.ComputerSystemSlot'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.Contact_': {
      ResultSet?: components['schemas']['LabTech.Models.Contact'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.DataViewFolder_': {
      ResultSet?: components['schemas']['LabTech.Models.DataViewFolder'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.Document_': {
      ResultSet?: components['schemas']['LabTech.Models.Document'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_': {
      ResultSet?: components['schemas']['LabTech.Repositories.MySQL.Domain.Models.DriveStats'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.EventLog_': {
      ResultSet?: components['schemas']['LabTech.Models.EventLog'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ExternalSystemCredentials_': {
      ResultSet?: components['schemas']['LabTech.Models.ExternalSystemCredentials'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Patching.GroupPatchingPolicy_': {
      ResultSet?: components['schemas']['Automate.Api.Domain.Contracts.Patching.GroupPatchingPolicy'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.LicensedProduct_': {
      ResultSet?: components['schemas']['LabTech.Models.LicensedProduct'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.Link_': {
      ResultSet?: components['schemas']['LabTech.Models.Link'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.Location_': {
      ResultSet?: components['schemas']['LabTech.Models.Location'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Maintenance.MaintenanceWindowDefinition_': {
      ResultSet?: components['schemas']['Automate.Api.Domain.Contracts.Maintenance.MaintenanceWindowDefinition'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ManagedLicense_': {
      ResultSet?: components['schemas']['LabTech.Models.ManagedLicense'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Menus.Menu_Automate.Api.Domain.PresentationLayer.ViewModels.Menus.ComputerCommands.CommandMenuItemBase_': {
      MenuKey?: string
      SubMenus?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Menus.SubMenu_Automate.Api.Domain.PresentationLayer.ViewModels.Menus.ComputerCommands.CommandMenuItemBase_'][]
      MenuItems?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Menus.ComputerCommands.CommandMenuItemBase'][]
    }
    'Automate.Api.Domain.PresentationLayer.ViewModels.Menus.SubMenu_Automate.Api.Domain.PresentationLayer.ViewModels.Menus.ComputerCommands.CommandMenuItemBase_': {
      DisplayName?: string
      /** Format: int32 */
      DisplayOrder?: number
      MenuKey?: string
      SubMenus?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Menus.SubMenu_Automate.Api.Domain.PresentationLayer.ViewModels.Menus.ComputerCommands.CommandMenuItemBase_'][]
      MenuItems?: components['schemas']['Automate.Api.Domain.PresentationLayer.ViewModels.Menus.ComputerCommands.CommandMenuItemBase'][]
    }
    'LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.ProbeCommandHistoryEntry_': {
      ResultSet?: components['schemas']['Automate.Api.Domain.Contracts.ProbeCommandHistoryEntry'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.ProductKey_': {
      ResultSet?: components['schemas']['LabTech.Models.ProductKey'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.RetiredAsset_': {
      ResultSet?: components['schemas']['LabTech.Models.RetiredAsset'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.Script_': {
      ResultSet?: components['schemas']['LabTech.Models.Script'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.SearchFolder_': {
      ResultSet?: components['schemas']['LabTech.Models.SearchFolder'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.SensorCheck_': {
      ResultSet?: components['schemas']['LabTech.Models.SensorCheck'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.System.ServerInformation_': {
      ResultSet?: components['schemas']['Automate.Api.Domain.Contracts.System.ServerInformation'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_LabTech.Models.UserAudit_': {
      ResultSet?: components['schemas']['LabTech.Models.UserAudit'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
    'LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Clients.Contact_': {
      ResultSet?: components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact'][]
      /** Format: int32 */
      TotalRecordCount?: number
    }
  }
  requestBodies: {
    'LabTech.Models.RemoteAgentTemplate': {
      content: {
        'application/json': components['schemas']['LabTech.Models.RemoteAgentTemplate']
        'text/json': components['schemas']['LabTech.Models.RemoteAgentTemplate']
        'application/xml': components['schemas']['LabTech.Models.RemoteAgentTemplate']
        'text/xml': components['schemas']['LabTech.Models.RemoteAgentTemplate']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.RemoteAgentTemplate']
      }
    }
    ApiToken_RefreshBearerTokenAsyncTokentext: {
      content: {
        'application/json': string
        'text/json': string
        'application/xml': string
        'text/xml': string
        'application/x-www-form-urlencoded': string
      }
    }
    'Automate.Api.Domain.Contracts.Patching.LocalOverridePolicy': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Patching.LocalOverridePolicy']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Patching.LocalOverridePolicy']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Patching.LocalOverridePolicy']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Patching.LocalOverridePolicy']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Patching.LocalOverridePolicy']
      }
    }
    'LabTech.Models.Script': {
      content: {
        'application/json': components['schemas']['LabTech.Models.Script']
        'text/json': components['schemas']['LabTech.Models.Script']
        'application/xml': components['schemas']['LabTech.Models.Script']
        'text/xml': components['schemas']['LabTech.Models.Script']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.Script']
      }
    }
    'LabTech.Models.AVTemplatePolicyData': {
      content: {
        'application/json': components['schemas']['LabTech.Models.AVTemplatePolicyData']
        'text/json': components['schemas']['LabTech.Models.AVTemplatePolicyData']
        'application/xml': components['schemas']['LabTech.Models.AVTemplatePolicyData']
        'text/xml': components['schemas']['LabTech.Models.AVTemplatePolicyData']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.AVTemplatePolicyData']
      }
    }
    'LabTech.Models.GroupComputer': {
      content: {
        'application/json': components['schemas']['LabTech.Models.GroupComputer']
        'text/json': components['schemas']['LabTech.Models.GroupComputer']
        'application/xml': components['schemas']['LabTech.Models.GroupComputer']
        'text/xml': components['schemas']['LabTech.Models.GroupComputer']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.GroupComputer']
      }
    }
    'Automate.Api.Domain.Contracts.Patching.RpcContracts.ExecutePatchActionRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Patching.RpcContracts.ExecutePatchActionRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Patching.RpcContracts.ExecutePatchActionRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Patching.RpcContracts.ExecutePatchActionRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Patching.RpcContracts.ExecutePatchActionRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Patching.RpcContracts.ExecutePatchActionRequest']
      }
    }
    'LabTech.Models.Contact': {
      content: {
        'application/json': components['schemas']['LabTech.Models.Contact']
        'text/json': components['schemas']['LabTech.Models.Contact']
        'application/xml': components['schemas']['LabTech.Models.Contact']
        'text/xml': components['schemas']['LabTech.Models.Contact']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.Contact']
      }
    }
    'LabTech.Models.TemplateAvailableProperty': {
      content: {
        'application/json': components['schemas']['LabTech.Models.TemplateAvailableProperty']
        'text/json': components['schemas']['LabTech.Models.TemplateAvailableProperty']
        'application/xml': components['schemas']['LabTech.Models.TemplateAvailableProperty']
        'text/xml': components['schemas']['LabTech.Models.TemplateAvailableProperty']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.TemplateAvailableProperty']
      }
    }
    'Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandsRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandsRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandsRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandsRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandsRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.DeviceCommands.ExecuteDeviceCommandsRequest']
      }
    }
    'Automate.Api.Domain.Contracts.BatchUsers.UserClassMembership.UserClassMembershipRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UserClassMembership.UserClassMembershipRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UserClassMembership.UserClassMembershipRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UserClassMembership.UserClassMembershipRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UserClassMembership.UserClassMembershipRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UserClassMembership.UserClassMembershipRequest']
      }
    }
    'LabTech.RESTApi.Models.PatchOperationArray': {
      content: {
        'application/json': components['schemas']['LabTech.RESTApi.Models.PatchOperation'][]
        'text/json': components['schemas']['LabTech.RESTApi.Models.PatchOperation'][]
        'application/xml': components['schemas']['LabTech.RESTApi.Models.PatchOperation'][]
        'text/xml': components['schemas']['LabTech.RESTApi.Models.PatchOperation'][]
        'application/x-www-form-urlencoded': components['schemas']['LabTech.RESTApi.Models.PatchOperation'][]
      }
    }
    'LabTech.Models.Client': {
      content: {
        'application/json': components['schemas']['LabTech.Models.Client']
        'text/json': components['schemas']['LabTech.Models.Client']
        'application/xml': components['schemas']['LabTech.Models.Client']
        'text/xml': components['schemas']['LabTech.Models.Client']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.Client']
      }
    }
    'Automate.Api.Domain.Contracts.Security.PkceRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Security.PkceRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Security.PkceRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Security.PkceRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Security.PkceRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Security.PkceRequest']
      }
    }
    'LabTech.Models.GroupNetworkDevice': {
      content: {
        'application/json': components['schemas']['LabTech.Models.GroupNetworkDevice']
        'text/json': components['schemas']['LabTech.Models.GroupNetworkDevice']
        'application/xml': components['schemas']['LabTech.Models.GroupNetworkDevice']
        'text/xml': components['schemas']['LabTech.Models.GroupNetworkDevice']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.GroupNetworkDevice']
      }
    }
    'LabTech.Models.RemoteAgentSchedule': {
      content: {
        'application/json': components['schemas']['LabTech.Models.RemoteAgentSchedule']
        'text/json': components['schemas']['LabTech.Models.RemoteAgentSchedule']
        'application/xml': components['schemas']['LabTech.Models.RemoteAgentSchedule']
        'text/xml': components['schemas']['LabTech.Models.RemoteAgentSchedule']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.RemoteAgentSchedule']
      }
    }
    'Automate.Api.Domain.Contracts.BatchUsers.UsersGroupMembership.UsersGroupMembershipBatchRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UsersGroupMembership.UsersGroupMembershipBatchRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UsersGroupMembership.UsersGroupMembershipBatchRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UsersGroupMembership.UsersGroupMembershipBatchRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UsersGroupMembership.UsersGroupMembershipBatchRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.BatchUsers.UsersGroupMembership.UsersGroupMembershipBatchRequest']
      }
    }
    'Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldSectionResetRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldSectionResetRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldSectionResetRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldSectionResetRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldSectionResetRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.ExtraFields.ExtraFieldSectionResetRequest']
      }
    }
    'LabTech.RESTApi.Security.AuthServiceCredentials': {
      content: {
        'application/json': components['schemas']['LabTech.RESTApi.Security.AuthServiceCredentials']
        'text/json': components['schemas']['LabTech.RESTApi.Security.AuthServiceCredentials']
        'application/xml': components['schemas']['LabTech.RESTApi.Security.AuthServiceCredentials']
        'text/xml': components['schemas']['LabTech.RESTApi.Security.AuthServiceCredentials']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.RESTApi.Security.AuthServiceCredentials']
      }
    }
    'Automate.Api.Domain.Contracts.Patching.ApprovalPolicy': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Patching.ApprovalPolicy']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Patching.ApprovalPolicy']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Patching.ApprovalPolicy']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Patching.ApprovalPolicy']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Patching.ApprovalPolicy']
      }
    }
    'LabTech.Models.AVTemplatePolicy': {
      content: {
        'application/json': components['schemas']['LabTech.Models.AVTemplatePolicy']
        'text/json': components['schemas']['LabTech.Models.AVTemplatePolicy']
        'application/xml': components['schemas']['LabTech.Models.AVTemplatePolicy']
        'text/xml': components['schemas']['LabTech.Models.AVTemplatePolicy']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.AVTemplatePolicy']
      }
    }
    'Automate.Api.Domain.Contracts.BatchBinaryExtension.BinaryExtensionBatchRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.BatchBinaryExtension.BinaryExtensionBatchRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.BatchBinaryExtension.BinaryExtensionBatchRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchBinaryExtension.BinaryExtensionBatchRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchBinaryExtension.BinaryExtensionBatchRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.BatchBinaryExtension.BinaryExtensionBatchRequest']
      }
    }
    'Automate.Api.Domain.Contracts.BatchMaintenanceModes.MaintenanceModes.MaintenanceModeQueueBatchRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.BatchMaintenanceModes.MaintenanceModes.MaintenanceModeQueueBatchRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.BatchMaintenanceModes.MaintenanceModes.MaintenanceModeQueueBatchRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchMaintenanceModes.MaintenanceModes.MaintenanceModeQueueBatchRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchMaintenanceModes.MaintenanceModes.MaintenanceModeQueueBatchRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.BatchMaintenanceModes.MaintenanceModes.MaintenanceModeQueueBatchRequest']
      }
    }
    'Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.BatchScripts.ScheduleScriptBatchRequest']
      }
    }
    'Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputersBatchRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputersBatchRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputersBatchRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputersBatchRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputersBatchRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.BatchCommands.Computer.ExecuteComputersBatchRequest']
      }
    }
    'Automate.Api.Domain.Contracts.BatchWebExtension.WebExtensionBatchRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.BatchWebExtension.WebExtensionBatchRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.BatchWebExtension.WebExtensionBatchRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchWebExtension.WebExtensionBatchRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.BatchWebExtension.WebExtensionBatchRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.BatchWebExtension.WebExtensionBatchRequest']
      }
    }
    ClientPermissions_PutUserClassPermissionsPermissions: {
      content: {
        'application/json': string[]
        'text/json': string[]
        'application/xml': string[]
        'text/xml': string[]
        'application/x-www-form-urlencoded': string[]
      }
    }
    'LabTech.Models.ComputerMenu': {
      content: {
        'application/json': components['schemas']['LabTech.Models.ComputerMenu']
        'text/json': components['schemas']['LabTech.Models.ComputerMenu']
        'application/xml': components['schemas']['LabTech.Models.ComputerMenu']
        'text/xml': components['schemas']['LabTech.Models.ComputerMenu']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.ComputerMenu']
      }
    }
    'LabTech.RESTApi.RpcContracts.SoftwareClassificationInfo': {
      content: {
        'application/json': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareClassificationInfo']
        'text/json': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareClassificationInfo']
        'application/xml': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareClassificationInfo']
        'text/xml': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareClassificationInfo']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareClassificationInfo']
      }
    }
    'Automate.Api.Domain.Contracts.Clients.DeploymentLogin': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Clients.DeploymentLogin']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Clients.DeploymentLogin']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Clients.DeploymentLogin']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Clients.DeploymentLogin']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Clients.DeploymentLogin']
      }
    }
    'LabTech.Models.GroupContact': {
      content: {
        'application/json': components['schemas']['LabTech.Models.GroupContact']
        'text/json': components['schemas']['LabTech.Models.GroupContact']
        'application/xml': components['schemas']['LabTech.Models.GroupContact']
        'text/xml': components['schemas']['LabTech.Models.GroupContact']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.GroupContact']
      }
    }
    'LabTech.Models.Group': {
      content: {
        'application/json': components['schemas']['LabTech.Models.Group']
        'text/json': components['schemas']['LabTech.Models.Group']
        'application/xml': components['schemas']['LabTech.Models.Group']
        'text/xml': components['schemas']['LabTech.Models.Group']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.Group']
      }
    }
    'LabTech.Models.Location': {
      content: {
        'application/json': components['schemas']['LabTech.Models.Location']
        'text/json': components['schemas']['LabTech.Models.Location']
        'application/xml': components['schemas']['LabTech.Models.Location']
        'text/xml': components['schemas']['LabTech.Models.Location']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.Location']
      }
    }
    'LabTech.Models.ManagedLicense': {
      content: {
        'application/json': components['schemas']['LabTech.Models.ManagedLicense']
        'text/json': components['schemas']['LabTech.Models.ManagedLicense']
        'application/xml': components['schemas']['LabTech.Models.ManagedLicense']
        'text/xml': components['schemas']['LabTech.Models.ManagedLicense']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.ManagedLicense']
      }
    }
    'LabTech.Models.PatchActionArgs': {
      content: {
        'application/json': components['schemas']['LabTech.Models.PatchActionArgs']
        'text/json': components['schemas']['LabTech.Models.PatchActionArgs']
        'application/xml': components['schemas']['LabTech.Models.PatchActionArgs']
        'text/xml': components['schemas']['LabTech.Models.PatchActionArgs']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.PatchActionArgs']
      }
    }
    'LabTech.Models.ProductKey': {
      content: {
        'application/json': components['schemas']['LabTech.Models.ProductKey']
        'text/json': components['schemas']['LabTech.Models.ProductKey']
        'application/xml': components['schemas']['LabTech.Models.ProductKey']
        'text/xml': components['schemas']['LabTech.Models.ProductKey']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.ProductKey']
      }
    }
    'LabTech.Models.ScriptFolder': {
      content: {
        'application/json': components['schemas']['LabTech.Models.ScriptFolder']
        'text/json': components['schemas']['LabTech.Models.ScriptFolder']
        'application/xml': components['schemas']['LabTech.Models.ScriptFolder']
        'text/xml': components['schemas']['LabTech.Models.ScriptFolder']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.ScriptFolder']
      }
    }
    'LabTech.Models.SearchFolder': {
      content: {
        'application/json': components['schemas']['LabTech.Models.SearchFolder']
        'text/json': components['schemas']['LabTech.Models.SearchFolder']
        'application/xml': components['schemas']['LabTech.Models.SearchFolder']
        'text/xml': components['schemas']['LabTech.Models.SearchFolder']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.SearchFolder']
      }
    }
    'Automate.Api.Domain.Contracts.Statistics.GetComputerStatisticsRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Statistics.GetComputerStatisticsRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Statistics.GetComputerStatisticsRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Statistics.GetComputerStatisticsRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Statistics.GetComputerStatisticsRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Statistics.GetComputerStatisticsRequest']
      }
    }
    'LabTech.Models.TemplateProperty': {
      content: {
        'application/json': components['schemas']['LabTech.Models.TemplateProperty']
        'text/json': components['schemas']['LabTech.Models.TemplateProperty']
        'application/xml': components['schemas']['LabTech.Models.TemplateProperty']
        'text/xml': components['schemas']['LabTech.Models.TemplateProperty']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.TemplateProperty']
      }
    }
    'Automate.Api.Domain.Contracts.Users.UserPasswordResetRequest': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserPasswordResetRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserPasswordResetRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserPasswordResetRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserPasswordResetRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Users.UserPasswordResetRequest']
      }
    }
    'Automate.Api.Domain.Contracts.Clients.Contact': {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact']
      }
    }
    'LabTech.Models.VirusScannerDef': {
      content: {
        'application/json': components['schemas']['LabTech.Models.VirusScannerDef']
        'text/json': components['schemas']['LabTech.Models.VirusScannerDef']
        'application/xml': components['schemas']['LabTech.Models.VirusScannerDef']
        'text/xml': components['schemas']['LabTech.Models.VirusScannerDef']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.VirusScannerDef']
      }
    }
  }
}

/**
 * @public
 */
export interface operations {
  Tickets_GetTicketList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  ApiToken_Get: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Security.AuthInformation']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Security.AuthInformation']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Security.AuthInformation']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Security.AuthInformation']
        }
      }
    }
  }
  ApiToken_Post: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Security.TokenResult']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Security.TokenResult']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Security.TokenCredentials']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Security.TokenCredentials']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Security.TokenCredentials']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Security.TokenCredentials']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Security.TokenCredentials']
      }
    }
  }
  ServerInformation_GetServerInformationListAsync: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.System.ServerInformation_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.System.ServerInformation_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.System.ServerInformation_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.System.ServerInformation_']
        }
      }
    }
  }
  DatabaseServerTime_GetDatabaseServerDateTimeWithUtcOffset: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': string
          'text/json': string
          'application/xml': string
          'text/xml': string
        }
      }
    }
  }
  ExternalSystemCredentials_GetClientSystemCredentialsList: {
    parameters: {
      path: {
        clientId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ExternalSystemCredentials_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ExternalSystemCredentials_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ExternalSystemCredentials_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ExternalSystemCredentials_']
        }
      }
    }
  }
  FeatureFlags_GetFeatureFlagList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  FeatureFlags_PostFeatureFlag: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.FeatureFlag']
          'text/json': components['schemas']['LabTech.Models.FeatureFlag']
          'application/xml': components['schemas']['LabTech.Models.FeatureFlag']
          'text/xml': components['schemas']['LabTech.Models.FeatureFlag']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.FeatureFlag']
        'text/json': components['schemas']['LabTech.Models.FeatureFlag']
        'application/xml': components['schemas']['LabTech.Models.FeatureFlag']
        'text/xml': components['schemas']['LabTech.Models.FeatureFlag']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.FeatureFlag']
      }
    }
  }
  LicensedProducts_GetLicensedProducts: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.LicensedProduct_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.LicensedProduct_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.LicensedProduct_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.LicensedProduct_']
        }
      }
    }
  }
  Links_GetLinkList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Link_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Link_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Link_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Link_']
        }
      }
    }
  }
  PatchInformation_GetPatchInformation: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.PatchInformation']
          'text/json': components['schemas']['LabTech.Models.PatchInformation']
          'application/xml': components['schemas']['LabTech.Models.PatchInformation']
          'text/xml': components['schemas']['LabTech.Models.PatchInformation']
        }
      }
    }
  }
  Permissions_GetClientPermissionList: {
    parameters: {
      path: {
        clientId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': string[]
          'text/json': string[]
          'application/xml': string[]
          'text/xml': string[]
        }
      }
    }
  }
  Permissions_GetUserPermissionList: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': string[]
          'text/json': string[]
          'application/xml': string[]
          'text/xml': string[]
        }
      }
    }
  }
  Plugins_GetPluginList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  RebootPolicies_GetRebootPolicyListAsync: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  UserAudits_GetUserAuditList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.UserAudit_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.UserAudit_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.UserAudit_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.UserAudit_']
        }
      }
    }
  }
  UserAudits_PostUserAudit: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.UserAudit']
          'text/json': components['schemas']['LabTech.Models.UserAudit']
          'application/xml': components['schemas']['LabTech.Models.UserAudit']
          'text/xml': components['schemas']['LabTech.Models.UserAudit']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.UserAudit']
        'text/json': components['schemas']['LabTech.Models.UserAudit']
        'application/xml': components['schemas']['LabTech.Models.UserAudit']
        'text/xml': components['schemas']['LabTech.Models.UserAudit']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.UserAudit']
      }
    }
  }
  UserClasses_GetUserClassList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass'][]
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass'][]
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass'][]
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass'][]
        }
      }
    }
  }
  UserClasses_GetUserClass: {
    parameters: {
      path: {
        userClassId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserClass']
        }
      }
    }
  }
  UserClasses_GetUserClassWebExtensionList: {
    parameters: {
      path: {
        userClassId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel'][]
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel'][]
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel'][]
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel'][]
        }
      }
    }
  }
  UserClasses_PutUserClassWebExtensionList: {
    parameters: {
      path: {
        userClassId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel'][]
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel'][]
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel'][]
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionViewModel'][]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.PresentationLayer.WebExtensions.UserClassWebExtensionRequest']
      }
    }
  }
  Users_GetUserList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  Users_AddUser: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
      }
    }
  }
  Users_GetUser: {
    parameters: {
      path: {
        userId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
        }
      }
    }
  }
  Users_DeleteUser: {
    parameters: {
      path: {
        userId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  Users_PatchUser: {
    parameters: {
      path: {
        userId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.User']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.RESTApi.Models.PatchOperationArray']
  }
  UserAuthLink_PostAuthorizationInitialLink: {
    parameters: {
      path: {
        userId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.RESTApi.Security.AuthServiceCredentials']
          'text/json': components['schemas']['LabTech.RESTApi.Security.AuthServiceCredentials']
          'application/xml': components['schemas']['LabTech.RESTApi.Security.AuthServiceCredentials']
          'text/xml': components['schemas']['LabTech.RESTApi.Security.AuthServiceCredentials']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.RESTApi.Security.AuthServiceCredentials']
  }
  UserActions_ChangePassword: {
    parameters: {
      path: {
        userId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.ChangePasswordRequest']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.ChangePasswordRequest']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.ChangePasswordRequest']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.ChangePasswordRequest']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Users.ChangePasswordRequest']
      }
    }
  }
  UserFavorites_GetUserFavoriteList: {
    parameters: {
      path: {
        userId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  UserFavorites_PostUserFavorite: {
    parameters: {
      path: {
        userId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.UserFavorite']
          'text/json': components['schemas']['LabTech.Models.UserFavorite']
          'application/xml': components['schemas']['LabTech.Models.UserFavorite']
          'text/xml': components['schemas']['LabTech.Models.UserFavorite']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.UserFavorite']
        'text/json': components['schemas']['LabTech.Models.UserFavorite']
        'application/xml': components['schemas']['LabTech.Models.UserFavorite']
        'text/xml': components['schemas']['LabTech.Models.UserFavorite']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.UserFavorite']
      }
    }
  }
  UserAccess_GetUserPermissionsAsync: {
    parameters: {
      path: {
        userId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserAccess']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserAccess']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserAccess']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserAccess']
        }
      }
    }
  }
  UserSettings_GetUserSettingList: {
    parameters: {
      path: {
        userId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  UserSettings_PostUserSetting: {
    parameters: {
      path: {
        userId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.UserSetting']
          'text/json': components['schemas']['LabTech.Models.UserSetting']
          'application/xml': components['schemas']['LabTech.Models.UserSetting']
          'text/xml': components['schemas']['LabTech.Models.UserSetting']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.UserSetting']
        'text/json': components['schemas']['LabTech.Models.UserSetting']
        'application/xml': components['schemas']['LabTech.Models.UserSetting']
        'text/xml': components['schemas']['LabTech.Models.UserSetting']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.UserSetting']
      }
    }
  }
  UserFolders_GetUserFolderList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  UserFolders_PostUserFolder: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
        'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
        'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
        'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
        'application/x-www-form-urlencoded': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
      }
    }
  }
  UserFolders_GetUserFolder: {
    parameters: {
      path: {
        userFolderId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
        }
      }
    }
  }
  UserFolders_DeleteUserFolder: {
    parameters: {
      path: {
        userFolderId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  UserFolders_PatchUserFolder: {
    parameters: {
      path: {
        userFolderId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Users.UserFolder']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.RESTApi.Models.PatchOperationArray']
  }
  DriveStats_GetDailyDriveStats: {
    parameters: {
      path: {
        driveId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
        }
      }
    }
  }
  DriveStats_GetWeeklyDriveStats: {
    parameters: {
      path: {
        driveId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
        }
      }
    }
  }
  DriveStats_GetYearlyDriveStats: {
    parameters: {
      path: {
        driveId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
        }
      }
    }
  }
  DriveStats_GetMonthlyDriveStats: {
    parameters: {
      path: {
        driveId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.DriveStats_']
        }
      }
    }
  }
  Statistics_GetDriveStatisticsList: {
    parameters: {
      query: {
        numberOfDays: number
        driveId: number[]
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.DriveStatistics'][]
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.DriveStatistics'][]
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.DriveStatistics'][]
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.DriveStatistics'][]
        }
      }
    }
  }
  Searches_GetSearchList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Search'][]
          'text/json': components['schemas']['LabTech.Models.Search'][]
          'application/xml': components['schemas']['LabTech.Models.Search'][]
          'text/xml': components['schemas']['LabTech.Models.Search'][]
        }
      }
    }
  }
  SearchFolders_GetSearchFolderList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SearchFolder_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SearchFolder_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SearchFolder_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SearchFolder_']
        }
      }
    }
  }
  SearchFolders_PostSearchFolder: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.SearchFolder']
          'text/json': components['schemas']['LabTech.Models.SearchFolder']
          'application/xml': components['schemas']['LabTech.Models.SearchFolder']
          'text/xml': components['schemas']['LabTech.Models.SearchFolder']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.SearchFolder']
  }
  ScriptFolders_GetScriptFolderList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ScriptFolder'][]
          'text/json': components['schemas']['LabTech.Models.ScriptFolder'][]
          'application/xml': components['schemas']['LabTech.Models.ScriptFolder'][]
          'text/xml': components['schemas']['LabTech.Models.ScriptFolder'][]
        }
      }
    }
  }
  ScriptFolders_PostScriptFolder: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ScriptFolder']
          'text/json': components['schemas']['LabTech.Models.ScriptFolder']
          'application/xml': components['schemas']['LabTech.Models.ScriptFolder']
          'text/xml': components['schemas']['LabTech.Models.ScriptFolder']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.ScriptFolder']
  }
  ScriptFolders_GetScriptFolderHierarchy: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ScriptFolder'][]
          'text/json': components['schemas']['LabTech.Models.ScriptFolder'][]
          'application/xml': components['schemas']['LabTech.Models.ScriptFolder'][]
          'text/xml': components['schemas']['LabTech.Models.ScriptFolder'][]
        }
      }
    }
  }
  ScriptFolders_GetScriptFolder: {
    parameters: {
      path: {
        entityId: string
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ScriptFolder']
          'text/json': components['schemas']['LabTech.Models.ScriptFolder']
          'application/xml': components['schemas']['LabTech.Models.ScriptFolder']
          'text/xml': components['schemas']['LabTech.Models.ScriptFolder']
        }
      }
    }
  }
  ScriptFolders_DeleteScriptFolder: {
    parameters: {
      path: {
        entityId: string
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  ScriptFolders_PatchScriptFolder: {
    parameters: {
      path: {
        entityId: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ScriptFolder']
          'text/json': components['schemas']['LabTech.Models.ScriptFolder']
          'application/xml': components['schemas']['LabTech.Models.ScriptFolder']
          'text/xml': components['schemas']['LabTech.Models.ScriptFolder']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.RESTApi.Models.PatchOperationArray']
  }
  RunningScript_GetRunningScripts: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Scripts.RunningScripts.RunningScript'][]
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Scripts.RunningScripts.RunningScript'][]
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Scripts.RunningScripts.RunningScript'][]
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Scripts.RunningScripts.RunningScript'][]
        }
      }
    }
  }
  ScheduledScript_GetScheduledScripts: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScript'][]
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScript'][]
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScript'][]
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScript'][]
        }
      }
    }
  }
  ScheduledScript_DeleteScriptSchedule: {
    parameters: {
      path: {
        scheduledId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  ScheduledScript_PatchScriptSchedule: {
    parameters: {
      path: {
        scheduledId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScript']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScript']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScript']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Scripts.ScheduledScript']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.RESTApi.Models.PatchOperationArray']
  }
  Scripts_GetScriptList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Script'][]
          'text/json': components['schemas']['LabTech.Models.Script'][]
          'application/xml': components['schemas']['LabTech.Models.Script'][]
          'text/xml': components['schemas']['LabTech.Models.Script'][]
        }
      }
    }
  }
  Scripts_PostScript: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Script']
          'text/json': components['schemas']['LabTech.Models.Script']
          'application/xml': components['schemas']['LabTech.Models.Script']
          'text/xml': components['schemas']['LabTech.Models.Script']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.Script']
  }
  ScriptActions_GetScriptCopyAsync: {
    parameters: {
      path: {
        scriptId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': number
          'text/json': number
          'application/xml': number
          'text/xml': number
        }
      }
    }
  }
  RemoteAgentSchedules_GetRemoteAgentScheduleList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.RemoteAgentSchedule'][]
          'text/json': components['schemas']['LabTech.Models.RemoteAgentSchedule'][]
          'application/xml': components['schemas']['LabTech.Models.RemoteAgentSchedule'][]
          'text/xml': components['schemas']['LabTech.Models.RemoteAgentSchedule'][]
        }
      }
    }
  }
  RemoteAgentSchedules_PostRemoteAgentSchedule: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.RemoteAgentSchedule']
          'text/json': components['schemas']['LabTech.Models.RemoteAgentSchedule']
          'application/xml': components['schemas']['LabTech.Models.RemoteAgentSchedule']
          'text/xml': components['schemas']['LabTech.Models.RemoteAgentSchedule']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.RemoteAgentSchedule']
  }
  RemoteAgentTemplates_GetRemoteAgentTemplateListAsync: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.RemoteAgentTemplate'][]
          'text/json': components['schemas']['LabTech.Models.RemoteAgentTemplate'][]
          'application/xml': components['schemas']['LabTech.Models.RemoteAgentTemplate'][]
          'text/xml': components['schemas']['LabTech.Models.RemoteAgentTemplate'][]
        }
      }
    }
  }
  RemoteAgentTemplates_PostRemoteAgentTemplateAsync: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.RemoteAgentTemplate']
          'text/json': components['schemas']['LabTech.Models.RemoteAgentTemplate']
          'application/xml': components['schemas']['LabTech.Models.RemoteAgentTemplate']
          'text/xml': components['schemas']['LabTech.Models.RemoteAgentTemplate']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.RemoteAgentTemplate']
  }
  ProbeConfiguration_GetProbeConfiguration: {
    parameters: {
      path: {
        locationId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
        }
      }
    }
  }
  ProbeConfiguration_PostProbeConfiguration: {
    parameters: {
      path: {
        locationId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.RESTApi.RpcContracts.NewProbeConfiguration']
        'text/json': components['schemas']['LabTech.RESTApi.RpcContracts.NewProbeConfiguration']
        'application/xml': components['schemas']['LabTech.RESTApi.RpcContracts.NewProbeConfiguration']
        'text/xml': components['schemas']['LabTech.RESTApi.RpcContracts.NewProbeConfiguration']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.RESTApi.RpcContracts.NewProbeConfiguration']
      }
    }
  }
  ProbeConfiguration_DeleteProbeConfiguration: {
    parameters: {
      path: {
        locationId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  ProbeConfiguration_PatchProbeConfiguration: {
    parameters: {
      path: {
        locationId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.RESTApi.Models.PatchOperationArray']
  }
  ProbeConfiguration_UpgradeProbe: {
    parameters: {
      path: {
        locationId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  Lookups_GetProbeEventLevelList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ProbeEventLevel'][]
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ProbeEventLevel'][]
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ProbeEventLevel'][]
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ProbeEventLevel'][]
        }
      }
    }
  }
  Lookups_GetScanFrequencyList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ScanFrequency'][]
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ScanFrequency'][]
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ScanFrequency'][]
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ScanFrequency'][]
        }
      }
    }
  }
  Lookups_GetSnmpEncryptionMethodList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.EncryptionMethod'][]
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.EncryptionMethod'][]
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.EncryptionMethod'][]
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.EncryptionMethod'][]
        }
      }
    }
  }
  Lookups_GetSnmpHashMethodList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.HashMethod'][]
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.HashMethod'][]
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.HashMethod'][]
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.HashMethod'][]
        }
      }
    }
  }
  Lookups_GetStatusScanNetworkPortOptionList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.StatusScanNetworkPortOption'][]
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.StatusScanNetworkPortOption'][]
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.StatusScanNetworkPortOption'][]
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.StatusScanNetworkPortOption'][]
        }
      }
    }
  }
  ProbeConfiguration_GetAgentPushCredentialsList: {
    parameters: {
      path: {
        probeConfigurationId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
        }
      }
    }
  }
  ProbeConfiguration_PutAgentPushCredentialsList: {
    parameters: {
      path: {
        probeConfigurationId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
        'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
        'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
        'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfigurationCredentials'][]
      }
    }
  }
  ProbeConfiguration_DeleteAgentPushCredentials: {
    parameters: {
      path: {
        probeConfigurationId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  ProbeConfiguration_GetProbeSnmpConfigurationAsync: {
    parameters: {
      path: {
        probeConfigurationId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpConfiguration']
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpConfiguration']
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpConfiguration']
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpConfiguration']
        }
      }
    }
  }
  ProbeConfiguration_PatchProbeSnmpConfigurationAsync: {
    parameters: {
      path: {
        probeConfigurationId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpConfiguration']
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpConfiguration']
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpConfiguration']
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeSnmpConfiguration']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.RESTApi.Models.PatchOperationArray']
  }
  ProbeConfiguration_EnableProbe: {
    parameters: {
      path: {
        computerId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.NetworkProbe.ProbeConfiguration']
        }
      }
    }
  }
  ProbeEvents_GetProbeEventList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ProbeEvent'][]
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ProbeEvent'][]
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ProbeEvent'][]
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.ProbeEvent'][]
        }
      }
    }
  }
  UserProfiles_GetUserProfile: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.PresentationLayer.UserProfile']
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.PresentationLayer.UserProfile']
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.PresentationLayer.UserProfile']
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.PresentationLayer.UserProfile']
        }
      }
    }
  }
  ApprovalPolicy_GetApprovalPolicyListAsync: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  GroupPatchingPolicies_GetGroupPatchingPolicyListAsync: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Patching.GroupPatchingPolicy_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Patching.GroupPatchingPolicy_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Patching.GroupPatchingPolicy_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Patching.GroupPatchingPolicy_']
        }
      }
    }
  }
  MicrosoftUpdatePolicies_GetMicrosoftUpdatePolicyListAsync: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  PatchActions_DeployAllApproved: {
    responses: {
      /** No Content */
      204: never
    }
    requestBody: components['requestBodies']['LabTech.Models.PatchActionArgs']
  }
  PatchActions_DeployAllSecurity: {
    responses: {
      /** No Content */
      204: never
    }
    requestBody: components['requestBodies']['LabTech.Models.PatchActionArgs']
  }
  PatchActions_ReattemptFailed: {
    responses: {
      /** No Content */
      204: never
    }
    requestBody: components['requestBodies']['LabTech.Models.PatchActionArgs']
  }
  PatchActions_SetToPilotStage: {
    responses: {
      /** No Content */
      204: never
    }
    requestBody: components['requestBodies']['LabTech.Models.PatchActionArgs']
  }
  PatchActions_SetToProductionStage: {
    responses: {
      /** No Content */
      204: never
    }
    requestBody: components['requestBodies']['LabTech.Models.PatchActionArgs']
  }
  PatchActions_SetToTestStage: {
    responses: {
      /** No Content */
      204: never
    }
    requestBody: components['requestBodies']['LabTech.Models.PatchActionArgs']
  }
  PatchHistory_GetPatchHistoryListAsync: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  ThirdPartyUpdatePolicies_GetThirdPartyUpdatePolicyListAsync: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  NetworkDevices_GetNetworkDeviceList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.NetworkDevice'][]
          'text/json': components['schemas']['LabTech.Models.NetworkDevice'][]
          'application/xml': components['schemas']['LabTech.Models.NetworkDevice'][]
          'text/xml': components['schemas']['LabTech.Models.NetworkDevice'][]
        }
      }
    }
  }
  NetworkDevices_PostNetworkDevice: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.NetworkDevice']
          'text/json': components['schemas']['LabTech.Models.NetworkDevice']
          'application/xml': components['schemas']['LabTech.Models.NetworkDevice']
          'text/xml': components['schemas']['LabTech.Models.NetworkDevice']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.NetworkDevice']
        'text/json': components['schemas']['LabTech.Models.NetworkDevice']
        'application/xml': components['schemas']['LabTech.Models.NetworkDevice']
        'text/xml': components['schemas']['LabTech.Models.NetworkDevice']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.NetworkDevice']
      }
    }
  }
  Routers_GetRouters: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Router'][]
          'text/json': components['schemas']['LabTech.Models.Router'][]
          'application/xml': components['schemas']['LabTech.Models.Router'][]
          'text/xml': components['schemas']['LabTech.Models.Router'][]
        }
      }
    }
  }
  InternalMonitorResults_GetInternalMonitorResultList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  MonitorsHistory_GetMonitorHistoryList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  MonitorsCollectedData_GetDailyCollectedData: {
    parameters: {
      path: {
        monitorId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  MonitorsCollectedData_GetMonthlyCollectedData: {
    parameters: {
      path: {
        monitorId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  MonitorsCollectedData_GetWeeklyCollectedData: {
    parameters: {
      path: {
        monitorId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  MonitorsCollectedData_GetYearlyCollectedData: {
    parameters: {
      path: {
        monitorId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  MonitorDataCollectionSettings_GetDataCollectionSettingsForMonitorAsync: {
    parameters: {
      path: {
        monitorId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.MonitorDataCollectionSettings']
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.MonitorDataCollectionSettings']
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.MonitorDataCollectionSettings']
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.MonitorDataCollectionSettings']
        }
      }
    }
  }
  MonitorsStatistics_GetMonitorStatisticsList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  SensorChecks_GetSensorCheckList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SensorCheck_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SensorCheck_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SensorCheck_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SensorCheck_']
        }
      }
    }
  }
  MaintenanceWindowDefinition_GetDefinitionList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Maintenance.MaintenanceWindowDefinition_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Maintenance.MaintenanceWindowDefinition_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Maintenance.MaintenanceWindowDefinition_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Maintenance.MaintenanceWindowDefinition_']
        }
      }
    }
  }
  AVTemplatePolicies_GetAntivirusTemplatePolicyList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  AVTemplatePolicies_PostAntivirusTemplatePolicy: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.AVTemplatePolicy']
          'text/json': components['schemas']['LabTech.Models.AVTemplatePolicy']
          'application/xml': components['schemas']['LabTech.Models.AVTemplatePolicy']
          'text/xml': components['schemas']['LabTech.Models.AVTemplatePolicy']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.AVTemplatePolicy']
  }
  AVTemplatePolicyData_GetAntivirusTemplatePolicyDataList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  AVTemplatePolicyData_PostAntivirusTemplatePolicyData: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.AVTemplatePolicyData']
          'text/json': components['schemas']['LabTech.Models.AVTemplatePolicyData']
          'application/xml': components['schemas']['LabTech.Models.AVTemplatePolicyData']
          'text/xml': components['schemas']['LabTech.Models.AVTemplatePolicyData']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.AVTemplatePolicyData']
  }
  Groups_GetGroupList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Group'][]
          'text/json': components['schemas']['LabTech.Models.Group'][]
          'application/xml': components['schemas']['LabTech.Models.Group'][]
          'text/xml': components['schemas']['LabTech.Models.Group'][]
        }
      }
    }
  }
  Groups_PostGroup: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Group']
          'text/json': components['schemas']['LabTech.Models.Group']
          'application/xml': components['schemas']['LabTech.Models.Group']
          'text/xml': components['schemas']['LabTech.Models.Group']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.Group']
  }
  TemplateAvailableProperties_GetTemplateAvailablePropertyList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.TemplateAvailableProperty'][]
          'text/json': components['schemas']['LabTech.Models.TemplateAvailableProperty'][]
          'application/xml': components['schemas']['LabTech.Models.TemplateAvailableProperty'][]
          'text/xml': components['schemas']['LabTech.Models.TemplateAvailableProperty'][]
        }
      }
    }
  }
  TemplateAvailableProperties_PostTemplateAvailableProperty: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.TemplateAvailableProperty']
          'text/json': components['schemas']['LabTech.Models.TemplateAvailableProperty']
          'application/xml': components['schemas']['LabTech.Models.TemplateAvailableProperty']
          'text/xml': components['schemas']['LabTech.Models.TemplateAvailableProperty']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.TemplateAvailableProperty']
  }
  TemplateProperties_GetTemplatePropertyList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.TemplateProperty'][]
          'text/json': components['schemas']['LabTech.Models.TemplateProperty'][]
          'application/xml': components['schemas']['LabTech.Models.TemplateProperty'][]
          'text/xml': components['schemas']['LabTech.Models.TemplateProperty'][]
        }
      }
    }
  }
  TemplateProperties_PostTemplateProperty: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.TemplateProperty']
          'text/json': components['schemas']['LabTech.Models.TemplateProperty']
          'application/xml': components['schemas']['LabTech.Models.TemplateProperty']
          'text/xml': components['schemas']['LabTech.Models.TemplateProperty']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.TemplateProperty']
  }
  EventLog_GetEventLogsAsync: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.EventLog_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.EventLog_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.EventLog_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.EventLog_']
        }
      }
    }
  }
  DataViewFolders_GetDataViewFolderList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.DataViewFolder_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.DataViewFolder_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.DataViewFolder_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.DataViewFolder_']
        }
      }
    }
  }
  DataViews_GetDataViewList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.DataView'][]
          'text/json': components['schemas']['LabTech.Models.DataView'][]
          'application/xml': components['schemas']['LabTech.Models.DataView'][]
          'text/xml': components['schemas']['LabTech.Models.DataView'][]
        }
      }
    }
  }
  Contacts_GetContactList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Contact_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Contact_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Contact_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Contact_']
        }
      }
    }
  }
  SystemContacts_GetSystemContactList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Contact_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Contact_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Contact_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Contact_']
        }
      }
    }
  }
  V2Contacts_GetContactList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Clients.Contact_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Clients.Contact_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Clients.Contact_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_Automate.Api.Domain.Contracts.Clients.Contact_']
        }
      }
    }
  }
  V2Contacts_GetContact: {
    parameters: {
      path: {
        contactId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Clients.Contact']
        }
      }
    }
  }
  ComputerMenus_GetComputerMenuList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ComputerMenu'][]
          'text/json': components['schemas']['LabTech.Models.ComputerMenu'][]
          'application/xml': components['schemas']['LabTech.Models.ComputerMenu'][]
          'text/xml': components['schemas']['LabTech.Models.ComputerMenu'][]
        }
      }
    }
  }
  ComputerMenus_PostComputerMenu: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ComputerMenu']
          'text/json': components['schemas']['LabTech.Models.ComputerMenu']
          'application/xml': components['schemas']['LabTech.Models.ComputerMenu']
          'text/xml': components['schemas']['LabTech.Models.ComputerMenu']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.ComputerMenu']
  }
  Computers_GetComputerList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Computer_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Computer_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Computer_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Computer_']
        }
      }
    }
  }
  ComputerAlerts_GetComputerAlerts: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  MaintenanceAlertSuspensions_GetSuspensionList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  TemplateAlertSuspension_GetSuspensionList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  ComputerBios_GetComputerBios: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ComputerBios']
          'text/json': components['schemas']['LabTech.Models.ComputerBios']
          'application/xml': components['schemas']['LabTech.Models.ComputerBios']
          'text/xml': components['schemas']['LabTech.Models.ComputerBios']
        }
      }
    }
  }
  CommandExecute_GetCommandExecuteList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.CommandExecute_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.CommandExecute_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.CommandExecute_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.CommandExecute_']
        }
      }
    }
  }
  CommandExecute_PostCommandExecute: {
    parameters: {
      path: {
        computerId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.CommandExecute']
          'text/json': components['schemas']['LabTech.Models.CommandExecute']
          'application/xml': components['schemas']['LabTech.Models.CommandExecute']
          'text/xml': components['schemas']['LabTech.Models.CommandExecute']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.CommandExecute']
        'text/json': components['schemas']['LabTech.Models.CommandExecute']
        'application/xml': components['schemas']['LabTech.Models.CommandExecute']
        'text/xml': components['schemas']['LabTech.Models.CommandExecute']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.CommandExecute']
      }
    }
  }
  CommandHistory_GetCommandHistoryList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.CommandHistory_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.CommandHistory_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.CommandHistory_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.CommandHistory_']
        }
      }
    }
  }
  ComputerPatchingPolicies_GetComputerPatchingPolicyListAsync: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPatchingPolicy_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPatchingPolicy_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPatchingPolicy_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPatchingPolicy_']
        }
      }
    }
  }
  Computers_GetComputerDeviceList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ComputerDevice'][]
          'text/json': components['schemas']['LabTech.Models.ComputerDevice'][]
          'application/xml': components['schemas']['LabTech.Models.ComputerDevice'][]
          'text/xml': components['schemas']['LabTech.Models.ComputerDevice'][]
        }
      }
    }
  }
  ComputerDrivers_GetComputerDrivers: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.ComputerDriver_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.ComputerDriver_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.ComputerDriver_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Repositories.MySQL.Domain.Models.ComputerDriver_']
        }
      }
    }
  }
  ComputerDrives_GetComputerDriveSmartDataList: {
    parameters: {
      path: {
        computerId: number
        driveId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SmartData_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SmartData_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SmartData_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.SmartData_']
        }
      }
    }
  }
  ComputerEffectivePatchingPolicy_GetComputerEffectivePatchingPolicy: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ComputerEffectivePatchingPolicy']
          'text/json': components['schemas']['LabTech.Models.ComputerEffectivePatchingPolicy']
          'application/xml': components['schemas']['LabTech.Models.ComputerEffectivePatchingPolicy']
          'text/xml': components['schemas']['LabTech.Models.ComputerEffectivePatchingPolicy']
        }
      }
    }
  }
  ComputerMicrosoftUpdateData_GetComputerMicrosoftUpdateDataListAsync: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  MonitorAlertSuspensions_GetSuspensionList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  MonitorAlertSuspensions_PostSuspension: {
    parameters: {
      path: {
        computerId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.Alerting.MonitorAlertSuspension']
          'text/json': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.Alerting.MonitorAlertSuspension']
          'application/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.Alerting.MonitorAlertSuspension']
          'text/xml': components['schemas']['LabTech.Repositories.MySQL.Domain.Models.Alerting.MonitorAlertSuspension']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': number
        'text/json': number
        'application/xml': number
        'text/xml': number
        'application/x-www-form-urlencoded': number
      }
    }
  }
  ComputerMonitors_GetComputerMonitorsList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  ComputerOperatingSystem_GetComputerOperatingSystem: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ComputerOperatingSystem']
          'text/json': components['schemas']['LabTech.Models.ComputerOperatingSystem']
          'application/xml': components['schemas']['LabTech.Models.ComputerOperatingSystem']
          'text/xml': components['schemas']['LabTech.Models.ComputerOperatingSystem']
        }
      }
    }
  }
  DevicePatchingStatistics_GetDevicePatchingStatisticsAsync: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Automate.Api.Domain.Contracts.Patching.ComputerPatchingStats']
          'text/json': components['schemas']['Automate.Api.Domain.Contracts.Patching.ComputerPatchingStats']
          'application/xml': components['schemas']['Automate.Api.Domain.Contracts.Patching.ComputerPatchingStats']
          'text/xml': components['schemas']['Automate.Api.Domain.Contracts.Patching.ComputerPatchingStats']
        }
      }
    }
  }
  PatchJob_GetComputerPatchJobListAsync: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  ComputerPrinters_GetComputerPrintersList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPrinter_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPrinter_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPrinter_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerPrinter_']
        }
      }
    }
  }
  Computers_GetComputerProcessorList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerProcessor_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerProcessor_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerProcessor_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerProcessor_']
        }
      }
    }
  }
  ComputerRunningScripts_GetComputerRunningScripts: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ComputerRunningScript'][]
          'text/json': components['schemas']['LabTech.Models.ComputerRunningScript'][]
          'application/xml': components['schemas']['LabTech.Models.ComputerRunningScript'][]
          'text/xml': components['schemas']['LabTech.Models.ComputerRunningScript'][]
        }
      }
    }
  }
  ScheduledScript_GetComputerScheduledScripts: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ScheduledScript'][]
          'text/json': components['schemas']['LabTech.Models.ScheduledScript'][]
          'application/xml': components['schemas']['LabTech.Models.ScheduledScript'][]
          'text/xml': components['schemas']['LabTech.Models.ScheduledScript'][]
        }
      }
    }
  }
  ScheduledScript_PostComputerScheduledScript: {
    parameters: {
      path: {
        computerId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ScheduledScript']
          'text/json': components['schemas']['LabTech.Models.ScheduledScript']
          'application/xml': components['schemas']['LabTech.Models.ScheduledScript']
          'text/xml': components['schemas']['LabTech.Models.ScheduledScript']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.ScheduledScript']
        'text/json': components['schemas']['LabTech.Models.ScheduledScript']
        'application/xml': components['schemas']['LabTech.Models.ScheduledScript']
        'text/xml': components['schemas']['LabTech.Models.ScheduledScript']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.ScheduledScript']
      }
    }
  }
  ScheduledScript_GetComputerScheduledScript: {
    parameters: {
      path: {
        computerId: number
        entityId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ScheduledScript']
          'text/json': components['schemas']['LabTech.Models.ScheduledScript']
          'application/xml': components['schemas']['LabTech.Models.ScheduledScript']
          'text/xml': components['schemas']['LabTech.Models.ScheduledScript']
        }
      }
    }
  }
  ComputerScheduledTasks_GetScheduledTaskList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  ComputerScheduledTasks_PostScheduledTask: {
    parameters: {
      path: {
        computerId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.ComputerScheduledTask']
        'text/json': components['schemas']['LabTech.Models.ComputerScheduledTask']
        'application/xml': components['schemas']['LabTech.Models.ComputerScheduledTask']
        'text/xml': components['schemas']['LabTech.Models.ComputerScheduledTask']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.ComputerScheduledTask']
      }
    }
  }
  ComputerScriptHistory_GetComputerScriptHistoryList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ComputerScriptHistory'][]
          'text/json': components['schemas']['LabTech.Models.ComputerScriptHistory'][]
          'application/xml': components['schemas']['LabTech.Models.ComputerScriptHistory'][]
          'text/xml': components['schemas']['LabTech.Models.ComputerScriptHistory'][]
        }
      }
    }
  }
  ComputerSensor_GetComputerSensorListAsync: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSensor_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSensor_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSensor_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSensor_']
        }
      }
    }
  }
  Computers_GetComputerServiceList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerService_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerService_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerService_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerService_']
        }
      }
    }
  }
  Computers_GetComputerSoftwareList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSoftware_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSoftware_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSoftware_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSoftware_']
        }
      }
    }
  }
  ComputerSoftwareActions_UninstallSoftware: {
    parameters: {
      path: {
        computerId: number
        softwareId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareUninstallInfo']
        'text/json': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareUninstallInfo']
        'application/xml': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareUninstallInfo']
        'text/xml': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareUninstallInfo']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.RESTApi.RpcContracts.SoftwareUninstallInfo']
      }
    }
  }
  ComputerSystemSlots_GetComputerSystemSlotList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSystemSlot_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSystemSlot_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSystemSlot_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerSystemSlot_']
        }
      }
    }
  }
  ComputerThirdPartyPatches_GetComputerThirdPartyPatchListAsync: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': { [key: string]: unknown }
          'text/json': { [key: string]: unknown }
          'application/xml': { [key: string]: unknown }
          'text/xml': { [key: string]: unknown }
        }
      }
    }
  }
  ComputerUps_GetComputerUpsListAsync: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ComputerUps'][]
          'text/json': components['schemas']['LabTech.Models.ComputerUps'][]
          'application/xml': components['schemas']['LabTech.Models.ComputerUps'][]
          'text/xml': components['schemas']['LabTech.Models.ComputerUps'][]
        }
      }
    }
  }
  Computers_GetComputerVideoCardList: {
    parameters: {
      path: {
        computerId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerVideoCard_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerVideoCard_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerVideoCard_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerVideoCard_']
        }
      }
    }
  }
  Chassis_GetComputerChassis: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerChassis_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerChassis_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerChassis_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerChassis_']
        }
      }
    }
  }
  ComputerDrives_GetComputerDriveList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerDrive_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerDrive_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerDrive_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerDrive_']
        }
      }
    }
  }
  Computers_GetComputerMaintenanceModeList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.MaintenanceMode_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.MaintenanceMode_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.MaintenanceMode_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.MaintenanceMode_']
        }
      }
    }
  }
  Computers_GetComputerMemorySlotList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerMemorySlot_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerMemorySlot_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerMemorySlot_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ComputerMemorySlot_']
        }
      }
    }
  }
  RetiredAssets_GetRetiredAssetList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.RetiredAsset_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.RetiredAsset_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.RetiredAsset_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.RetiredAsset_']
        }
      }
    }
  }
  Services_ClassifyService: {
    parameters: {
      path: {
        serviceId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.ServiceClassification']
        'text/json': components['schemas']['LabTech.Models.ServiceClassification']
        'application/xml': components['schemas']['LabTech.Models.ServiceClassification']
        'text/xml': components['schemas']['LabTech.Models.ServiceClassification']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.ServiceClassification']
      }
    }
  }
  VirusScannerDefs_GetVirusScannerDefinitionList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.VirusScannerDef'][]
          'text/json': components['schemas']['LabTech.Models.VirusScannerDef'][]
          'application/xml': components['schemas']['LabTech.Models.VirusScannerDef'][]
          'text/xml': components['schemas']['LabTech.Models.VirusScannerDef'][]
        }
      }
    }
  }
  VirusScannerDefs_PostVirusScannerDefinition: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.VirusScannerDef']
          'text/json': components['schemas']['LabTech.Models.VirusScannerDef']
          'application/xml': components['schemas']['LabTech.Models.VirusScannerDef']
          'text/xml': components['schemas']['LabTech.Models.VirusScannerDef']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.VirusScannerDef']
  }
  Clients_GetClientList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Client_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Client_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Client_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Client_']
        }
      }
    }
  }
  Clients_PostClient: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Client']
          'text/json': components['schemas']['LabTech.Models.Client']
          'application/xml': components['schemas']['LabTech.Models.Client']
          'text/xml': components['schemas']['LabTech.Models.Client']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.Client']
  }
  Documents_GetAllDocuments: {
    parameters: {
      path: {
        clientId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Document_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Document_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Document_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Document_']
        }
      }
    }
  }
  Documents_PostDocument: {
    parameters: {
      path: {
        clientId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Document']
          'text/json': components['schemas']['LabTech.Models.Document']
          'application/xml': components['schemas']['LabTech.Models.Document']
          'text/xml': components['schemas']['LabTech.Models.Document']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['LabTech.Models.Document']
        'text/json': components['schemas']['LabTech.Models.Document']
        'application/xml': components['schemas']['LabTech.Models.Document']
        'text/xml': components['schemas']['LabTech.Models.Document']
        'application/x-www-form-urlencoded': components['schemas']['LabTech.Models.Document']
      }
    }
  }
  ManagedLicenses_GetManagedLicenses: {
    parameters: {
      path: {
        clientId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ManagedLicense_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ManagedLicense_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ManagedLicense_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ManagedLicense_']
        }
      }
    }
  }
  ManagedLicenses_PostManagedLicense: {
    parameters: {
      path: {
        clientId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ManagedLicense']
          'text/json': components['schemas']['LabTech.Models.ManagedLicense']
          'application/xml': components['schemas']['LabTech.Models.ManagedLicense']
          'text/xml': components['schemas']['LabTech.Models.ManagedLicense']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.ManagedLicense']
  }
  ClientPermissions_GetUserClassPermissions: {
    parameters: {
      path: {
        clientId: number
        userClassId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': string[]
          'text/json': string[]
          'application/xml': string[]
          'text/xml': string[]
        }
      }
    }
  }
  ClientPermissions_PutUserClassPermissions: {
    parameters: {
      path: {
        clientId: number
        userClassId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': string[]
          'text/json': string[]
          'application/xml': string[]
          'text/xml': string[]
        }
      }
    }
    requestBody: components['requestBodies']['ClientPermissions_PutUserClassPermissionsPermissions']
  }
  ClientPermissions_PostUserClassPermissions: {
    parameters: {
      path: {
        clientId: number
        userClassId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': string[]
          'text/json': string[]
          'application/xml': string[]
          'text/xml': string[]
        }
      }
    }
    requestBody: components['requestBodies']['ClientPermissions_PutUserClassPermissionsPermissions']
  }
  ClientPermissions_DeleteUserClassPermissions: {
    parameters: {
      path: {
        clientId: number
        userClassId: number
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  ProductKeys_GetProductKeys: {
    parameters: {
      path: {
        clientId: number
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ProductKey_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ProductKey_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ProductKey_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.ProductKey_']
        }
      }
    }
  }
  ProductKeys_PostProductKey: {
    parameters: {
      path: {
        clientId: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.ProductKey']
          'text/json': components['schemas']['LabTech.Models.ProductKey']
          'application/xml': components['schemas']['LabTech.Models.ProductKey']
          'text/xml': components['schemas']['LabTech.Models.ProductKey']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.ProductKey']
  }
  Locations_GetLocationList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Location_']
          'text/json': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Location_']
          'application/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Location_']
          'text/xml': components['schemas']['LabTech.Database.ResultSetWithCount_LabTech.Models.Location_']
        }
      }
    }
  }
  Locations_PostLocation: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Location']
          'text/json': components['schemas']['LabTech.Models.Location']
          'application/xml': components['schemas']['LabTech.Models.Location']
          'text/xml': components['schemas']['LabTech.Models.Location']
        }
      }
    }
    requestBody: components['requestBodies']['LabTech.Models.Location']
  }
  Commands_GetCommandList: {
    parameters: {
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Command'][]
          'text/json': components['schemas']['LabTech.Models.Command'][]
          'application/xml': components['schemas']['LabTech.Models.Command'][]
          'text/xml': components['schemas']['LabTech.Models.Command'][]
        }
      }
    }
  }
  Commands_GetCommand: {
    parameters: {
      path: {
        entityId: string
      }
      query: {
        'options.orderBy.name'?: string
        'options.orderBy.type'?: 'Undefined' | 'Ascending' | 'Descending'
        'options.page'?: number
        'options.pageSize'?: number
        'options.condition'?: string
        'options.expands'?: unknown
        'options.includedFields'?: string[]
        'options.excludedFields'?: string[]
        'options.ids'?: string[]
        'options.timeout'?: number
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['LabTech.Models.Command']
          'text/json': components['schemas']['LabTech.Models.Command']
          'application/xml': components['schemas']['LabTech.Models.Command']
          'text/xml': components['schemas']['LabTech.Models.Command']
        }
      }
    }
  }
}
