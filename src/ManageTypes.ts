/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/company/addressFormats": {
    get: operations["getCompanyAddressFormats"];
    post: operations["postCompanyAddressFormats"];
  };
  "/company/addressFormats/{id}": {
    get: operations["getCompanyAddressFormatsById"];
    put: operations["putCompanyAddressFormatsById"];
    delete: operations["deleteCompanyAddressFormatsById"];
    patch: operations["patchCompanyAddressFormatsById"];
  };
  "/company/addressFormats/{id}/info": {
    get: operations["getCompanyAddressFormatsByIdInfo"];
  };
  "/company/addressFormats/count": {
    get: operations["getCompanyAddressFormatsCount"];
  };
  "/company/addressFormats/info": {
    get: operations["getCompanyAddressFormatsInfo"];
  };
  "/company/addressFormats/info/count": {
    get: operations["getCompanyAddressFormatsInfoCount"];
  };
  "/company/billingSetups/info/count": {
    get: operations["getCompanyBillingSetupsInfoCount"];
  };
  "/company/communicationTypes": {
    get: operations["getCompanyCommunicationTypes"];
    post: operations["postCompanyCommunicationTypes"];
  };
  "/company/communicationTypes/{id}": {
    get: operations["getCompanyCommunicationTypesById"];
    put: operations["putCompanyCommunicationTypesById"];
    delete: operations["deleteCompanyCommunicationTypesById"];
    patch: operations["patchCompanyCommunicationTypesById"];
  };
  "/company/communicationTypes/{id}/info": {
    get: operations["getCompanyCommunicationTypesByIdInfo"];
  };
  "/company/communicationTypes/{id}/usages": {
    get: operations["getCompanyCommunicationTypesByIdUsages"];
  };
  "/company/communicationTypes/{id}/usages/list": {
    get: operations["getCompanyCommunicationTypesByIdUsagesList"];
  };
  "/company/communicationTypes/count": {
    get: operations["getCompanyCommunicationTypesCount"];
  };
  "/company/communicationTypes/info": {
    get: operations["getCompanyCommunicationTypesInfo"];
  };
  "/company/communicationTypes/info/count": {
    get: operations["getCompanyCommunicationTypesInfoCount"];
  };
  "/company/companies": {
    get: operations["getCompanyCompanies"];
    post: operations["postCompanyCompanies"];
  };
  "/company/companies/{id}": {
    get: operations["getCompanyCompaniesById"];
    put: operations["putCompanyCompaniesById"];
    delete: operations["deleteCompanyCompaniesById"];
    patch: operations["patchCompanyCompaniesById"];
  };
  "/company/companies/{id}/merge": {
    post: operations["postCompanyCompaniesByIdMerge"];
  };
  "/company/companies/{id}/usages": {
    get: operations["getCompanyCompaniesByIdUsages"];
  };
  "/company/companies/{id}/usages/list": {
    get: operations["getCompanyCompaniesByIdUsagesList"];
  };
  "/company/companies/{parentId}/customStatusNotes": {
    get: operations["getCompanyCompaniesByParentIdCustomStatusNotes"];
    post: operations["postCompanyCompaniesByParentIdCustomStatusNotes"];
  };
  "/company/companies/{parentId}/customStatusNotes/{id}": {
    get: operations["getCompanyCompaniesByParentIdCustomStatusNotesById"];
    put: operations["putCompanyCompaniesByParentIdCustomStatusNotesById"];
    delete: operations["deleteCompanyCompaniesByParentIdCustomStatusNotesById"];
    patch: operations["patchCompanyCompaniesByParentIdCustomStatusNotesById"];
  };
  "/company/companies/{parentId}/customStatusNotes/count": {
    get: operations["getCompanyCompaniesByParentIdCustomStatusNotesCount"];
  };
  "/company/companies/{parentId}/groups": {
    get: operations["getCompanyCompaniesByParentIdGroups"];
    post: operations["postCompanyCompaniesByParentIdGroups"];
  };
  "/company/companies/{parentId}/groups/{id}": {
    get: operations["getCompanyCompaniesByParentIdGroupsById"];
    put: operations["putCompanyCompaniesByParentIdGroupsById"];
    delete: operations["deleteCompanyCompaniesByParentIdGroupsById"];
    patch: operations["patchCompanyCompaniesByParentIdGroupsById"];
  };
  "/company/companies/{parentId}/groups/count": {
    get: operations["getCompanyCompaniesByParentIdGroupsCount"];
  };
  "/company/companies/{parentId}/managementReportNotifications": {
    get: operations["getCompanyCompaniesByParentIdManagementReportNotifications"];
    post: operations["postCompanyCompaniesByParentIdManagementReportNotifications"];
  };
  "/company/companies/{parentId}/managementReportNotifications/{id}": {
    get: operations["getCompanyCompaniesByParentIdManagementReportNotificationsById"];
    put: operations["putCompanyCompaniesByParentIdManagementReportNotificationsById"];
    delete: operations["deleteCompanyCompaniesByParentIdManagementReportNotificationsById"];
    patch: operations["patchCompanyCompaniesByParentIdManagementReportNotificationsById"];
  };
  "/company/companies/{parentId}/managementReportNotifications/count": {
    get: operations["getCompanyCompaniesByParentIdManagementReportNotificationsCount"];
  };
  "/company/companies/{parentId}/managementReportSetup": {
    get: operations["getCompanyCompaniesByParentIdManagementReportSetup"];
    post: operations["postCompanyCompaniesByParentIdManagementReportSetup"];
  };
  "/company/companies/{parentId}/managementReportSetup/{id}": {
    put: operations["putCompanyCompaniesByParentIdManagementReportSetupById"];
    patch: operations["patchCompanyCompaniesByParentIdManagementReportSetupById"];
  };
  "/company/companies/{parentId}/managementSummaryReports": {
    get: operations["getCompanyCompaniesByParentIdManagementSummaryReports"];
    post: operations["postCompanyCompaniesByParentIdManagementSummaryReports"];
  };
  "/company/companies/{parentId}/managementSummaryReports/{id}": {
    get: operations["getCompanyCompaniesByParentIdManagementSummaryReportsById"];
    put: operations["putCompanyCompaniesByParentIdManagementSummaryReportsById"];
    delete: operations["deleteCompanyCompaniesByParentIdManagementSummaryReportsById"];
    patch: operations["patchCompanyCompaniesByParentIdManagementSummaryReportsById"];
  };
  "/company/companies/{parentId}/managementSummaryReports/count": {
    get: operations["getCompanyCompaniesByParentIdManagementSummaryReportsCount"];
  };
  "/company/companies/{parentId}/notes": {
    get: operations["getCompanyCompaniesByParentIdNotes"];
    post: operations["postCompanyCompaniesByParentIdNotes"];
  };
  "/company/companies/{parentId}/notes/{id}": {
    get: operations["getCompanyCompaniesByParentIdNotesById"];
    put: operations["putCompanyCompaniesByParentIdNotesById"];
    delete: operations["deleteCompanyCompaniesByParentIdNotesById"];
    patch: operations["patchCompanyCompaniesByParentIdNotesById"];
  };
  "/company/companies/{parentId}/notes/count": {
    get: operations["getCompanyCompaniesByParentIdNotesCount"];
  };
  "/company/companies/{parentId}/sites": {
    get: operations["getCompanyCompaniesByParentIdSites"];
    post: operations["postCompanyCompaniesByParentIdSites"];
  };
  "/company/companies/{parentId}/sites/{id}": {
    get: operations["getCompanyCompaniesByParentIdSitesById"];
    put: operations["putCompanyCompaniesByParentIdSitesById"];
    delete: operations["deleteCompanyCompaniesByParentIdSitesById"];
    patch: operations["patchCompanyCompaniesByParentIdSitesById"];
  };
  "/company/companies/{parentId}/sites/{id}/usages": {
    get: operations["getCompanyCompaniesByParentIdSitesByIdUsages"];
  };
  "/company/companies/{parentId}/sites/{id}/usages/list": {
    get: operations["getCompanyCompaniesByParentIdSitesByIdUsagesList"];
  };
  "/company/companies/{parentId}/sites/count": {
    get: operations["getCompanyCompaniesByParentIdSitesCount"];
  };
  "/company/companies/{parentId}/surveys/count": {
    get: operations["getCompanyCompaniesByParentIdSurveysCount"];
  };
  "/company/companies/{parentId}/teams": {
    get: operations["getCompanyCompaniesByParentIdTeams"];
    post: operations["postCompanyCompaniesByParentIdTeams"];
  };
  "/company/companies/{parentId}/teams/{id}": {
    get: operations["getCompanyCompaniesByParentIdTeamsById"];
    put: operations["putCompanyCompaniesByParentIdTeamsById"];
    delete: operations["deleteCompanyCompaniesByParentIdTeamsById"];
    patch: operations["patchCompanyCompaniesByParentIdTeamsById"];
  };
  "/company/companies/{parentId}/teams/count": {
    get: operations["getCompanyCompaniesByParentIdTeamsCount"];
  };
  "/company/companies/{parentId}/tracks": {
    get: operations["getCompanyCompaniesByParentIdTracks"];
    post: operations["postCompanyCompaniesByParentIdTracks"];
  };
  "/company/companies/{parentId}/tracks/{id}": {
    get: operations["getCompanyCompaniesByParentIdTracksById"];
    delete: operations["deleteCompanyCompaniesByParentIdTracksById"];
  };
  "/company/companies/{parentId}/tracks/count": {
    get: operations["getCompanyCompaniesByParentIdTracksCount"];
  };
  "/company/companies/{parentId}/typeAssociations": {
    get: operations["getCompanyCompaniesByParentIdTypeAssociations"];
    post: operations["postCompanyCompaniesByParentIdTypeAssociations"];
  };
  "/company/companies/{parentId}/typeAssociations/{id}": {
    get: operations["getCompanyCompaniesByParentIdTypeAssociationsById"];
    put: operations["putCompanyCompaniesByParentIdTypeAssociationsById"];
    delete: operations["deleteCompanyCompaniesByParentIdTypeAssociationsById"];
    patch: operations["patchCompanyCompaniesByParentIdTypeAssociationsById"];
  };
  "/company/companies/{parentId}/typeAssociations/count": {
    get: operations["getCompanyCompaniesByParentIdTypeAssociationsCount"];
  };
  "/company/companies/count": {
    get: operations["getCompanyCompaniesCount"];
  };
  "/company/companies/default": {
    get: operations["getCompanyCompaniesDefault"];
  };
  "/company/companies/info/types": {
    get: operations["getCompanyCompaniesInfoTypes"];
  };
  "/company/companies/info/types/{id}": {
    get: operations["getCompanyCompaniesInfoTypesById"];
  };
  "/company/companies/info/types/count": {
    get: operations["getCompanyCompaniesInfoTypesCount"];
  };
  "/company/companies/statuses": {
    get: operations["getCompanyCompaniesStatuses"];
    post: operations["postCompanyCompaniesStatuses"];
  };
  "/company/companies/statuses/{id}": {
    get: operations["getCompanyCompaniesStatusesById"];
    put: operations["putCompanyCompaniesStatusesById"];
    delete: operations["deleteCompanyCompaniesStatusesById"];
    patch: operations["patchCompanyCompaniesStatusesById"];
  };
  "/company/companies/statuses/{id}/usages": {
    get: operations["getCompanyCompaniesStatusesByIdUsages"];
  };
  "/company/companies/statuses/{id}/usages/list": {
    get: operations["getCompanyCompaniesStatusesByIdUsagesList"];
  };
  "/company/companies/statuses/count": {
    get: operations["getCompanyCompaniesStatusesCount"];
  };
  "/company/companies/types": {
    get: operations["getCompanyCompaniesTypes"];
    post: operations["postCompanyCompaniesTypes"];
  };
  "/company/companies/types/{id}": {
    get: operations["getCompanyCompaniesTypesById"];
    put: operations["putCompanyCompaniesTypesById"];
    delete: operations["deleteCompanyCompaniesTypesById"];
    patch: operations["patchCompanyCompaniesTypesById"];
  };
  "/company/companies/types/{id}/usages": {
    get: operations["getCompanyCompaniesTypesByIdUsages"];
  };
  "/company/companies/types/{id}/usages/list": {
    get: operations["getCompanyCompaniesTypesByIdUsagesList"];
  };
  "/company/companies/types/count": {
    get: operations["getCompanyCompaniesTypesCount"];
  };
  "/company/companyFinance/{id}": {
    put: operations["putCompanyCompanyFinanceById"];
  };
  "/company/companyPickerItems": {
    get: operations["getCompanyCompanyPickerItems"];
    post: operations["postCompanyCompanyPickerItems"];
  };
  "/company/companyPickerItems/{id}": {
    get: operations["getCompanyCompanyPickerItemsById"];
    delete: operations["deleteCompanyCompanyPickerItemsById"];
  };
  "/company/companyPickerItems/clear": {
    post: operations["postCompanyCompanyPickerItemsClear"];
  };
  "/company/companyPickerItems/count": {
    get: operations["getCompanyCompanyPickerItemsCount"];
  };
  "/company/companyTypeAssociations": {
    get: operations["getCompanyCompanyTypeAssociations"];
    post: operations["postCompanyCompanyTypeAssociations"];
  };
  "/company/companyTypeAssociations/{id}": {
    get: operations["getCompanyCompanyTypeAssociationsById"];
    put: operations["putCompanyCompanyTypeAssociationsById"];
    delete: operations["deleteCompanyCompanyTypeAssociationsById"];
    patch: operations["patchCompanyCompanyTypeAssociationsById"];
  };
  "/company/companyTypeAssociations/count": {
    get: operations["getCompanyCompanyTypeAssociationsCount"];
  };
  "/company/configurations": {
    get: operations["getCompanyConfigurations"];
    post: operations["postCompanyConfigurations"];
  };
  "/company/configurations/{id}": {
    get: operations["getCompanyConfigurationsById"];
    put: operations["putCompanyConfigurationsById"];
    delete: operations["deleteCompanyConfigurationsById"];
    patch: operations["patchCompanyConfigurationsById"];
  };
  "/company/configurations/{id}/changeType": {
    patch: operations["patchCompanyConfigurationsByIdChangeType"];
  };
  "/company/configurations/bulk": {
    put: operations["putCompanyConfigurationsBulk"];
    post: operations["postCompanyConfigurationsBulk"];
    delete: operations["deleteCompanyConfigurationsBulk"];
  };
  "/company/configurations/count": {
    get: operations["getCompanyConfigurationsCount"];
  };
  "/company/configurations/statuses": {
    get: operations["getCompanyConfigurationsStatuses"];
    post: operations["postCompanyConfigurationsStatuses"];
  };
  "/company/configurations/statuses/{id}": {
    get: operations["getCompanyConfigurationsStatusesById"];
    put: operations["putCompanyConfigurationsStatusesById"];
    delete: operations["deleteCompanyConfigurationsStatusesById"];
    patch: operations["patchCompanyConfigurationsStatusesById"];
  };
  "/company/configurations/statuses/{id}/info": {
    get: operations["getCompanyConfigurationsStatusesByIdInfo"];
  };
  "/company/configurations/statuses/{id}/usages": {
    get: operations["getCompanyConfigurationsStatusesByIdUsages"];
  };
  "/company/configurations/statuses/{id}/usages/list": {
    get: operations["getCompanyConfigurationsStatusesByIdUsagesList"];
  };
  "/company/configurations/statuses/count": {
    get: operations["getCompanyConfigurationsStatusesCount"];
  };
  "/company/configurations/statuses/info": {
    get: operations["getCompanyConfigurationsStatusesInfo"];
  };
  "/company/configurations/statuses/info/count": {
    get: operations["getCompanyConfigurationsStatusesInfoCount"];
  };
  "/company/configurations/types": {
    get: operations["getCompanyConfigurationsTypes"];
    post: operations["postCompanyConfigurationsTypes"];
  };
  "/company/configurations/types/{grandparentId}/questions/{parentId}/values": {
    get: operations["getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValues"];
    post: operations["postCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValues"];
  };
  "/company/configurations/types/{grandparentId}/questions/{parentId}/values/{id}": {
    get: operations["getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById"];
    put: operations["putCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById"];
    delete: operations["deleteCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById"];
    patch: operations["patchCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById"];
  };
  "/company/configurations/types/{grandparentId}/questions/{parentId}/values/{id}/usages": {
    get: operations["getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesByIdUsages"];
  };
  "/company/configurations/types/{grandparentId}/questions/{parentId}/values/{id}/usages/list": {
    get: operations["getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesByIdUsagesList"];
  };
  "/company/configurations/types/{grandparentId}/questions/{parentId}/values/count": {
    get: operations["getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesCount"];
  };
  "/company/configurations/types/{id}": {
    get: operations["getCompanyConfigurationsTypesById"];
    put: operations["putCompanyConfigurationsTypesById"];
    delete: operations["deleteCompanyConfigurationsTypesById"];
    patch: operations["patchCompanyConfigurationsTypesById"];
  };
  "/company/configurations/types/{id}/info": {
    get: operations["getCompanyConfigurationsTypesByIdInfo"];
  };
  "/company/configurations/types/{id}/usages": {
    get: operations["getCompanyConfigurationsTypesByIdUsages"];
  };
  "/company/configurations/types/{id}/usages/list": {
    get: operations["getCompanyConfigurationsTypesByIdUsagesList"];
  };
  "/company/configurations/types/{parentId}/questions": {
    get: operations["getCompanyConfigurationsTypesByParentIdQuestions"];
    post: operations["postCompanyConfigurationsTypesByParentIdQuestions"];
  };
  "/company/configurations/types/{parentId}/questions/{id}": {
    get: operations["getCompanyConfigurationsTypesByParentIdQuestionsById"];
    put: operations["putCompanyConfigurationsTypesByParentIdQuestionsById"];
    delete: operations["deleteCompanyConfigurationsTypesByParentIdQuestionsById"];
    patch: operations["patchCompanyConfigurationsTypesByParentIdQuestionsById"];
  };
  "/company/configurations/types/{parentId}/questions/count": {
    get: operations["getCompanyConfigurationsTypesByParentIdQuestionsCount"];
  };
  "/company/configurations/types/count": {
    get: operations["getCompanyConfigurationsTypesCount"];
  };
  "/company/contacts": {
    get: operations["getCompanyContacts"];
    post: operations["postCompanyContacts"];
  };
  "/company/contacts/{id}": {
    get: operations["getCompanyContactsById"];
    put: operations["putCompanyContactsById"];
    delete: operations["deleteCompanyContactsById"];
    patch: operations["patchCompanyContactsById"];
  };
  "/company/contacts/{id}/image": {
    get: operations["getCompanyContactsByIdImage"];
  };
  "/company/contacts/{id}/portalSecurity": {
    get: operations["getCompanyContactsByIdPortalSecurity"];
  };
  "/company/contacts/{id}/usages": {
    get: operations["getCompanyContactsByIdUsages"];
  };
  "/company/contacts/{id}/usages/list": {
    get: operations["getCompanyContactsByIdUsagesList"];
  };
  "/company/contacts/{parentId}/communications": {
    get: operations["getCompanyContactsByParentIdCommunications"];
    post: operations["postCompanyContactsByParentIdCommunications"];
  };
  "/company/contacts/{parentId}/communications/{id}": {
    get: operations["getCompanyContactsByParentIdCommunicationsById"];
    put: operations["putCompanyContactsByParentIdCommunicationsById"];
    delete: operations["deleteCompanyContactsByParentIdCommunicationsById"];
    patch: operations["patchCompanyContactsByParentIdCommunicationsById"];
  };
  "/company/contacts/{parentId}/communications/count": {
    get: operations["getCompanyContactsByParentIdCommunicationsCount"];
  };
  "/company/contacts/{parentId}/groups": {
    get: operations["getCompanyContactsByParentIdGroups"];
    post: operations["postCompanyContactsByParentIdGroups"];
  };
  "/company/contacts/{parentId}/groups/{id}": {
    get: operations["getCompanyContactsByParentIdGroupsById"];
    put: operations["putCompanyContactsByParentIdGroupsById"];
    delete: operations["deleteCompanyContactsByParentIdGroupsById"];
    patch: operations["patchCompanyContactsByParentIdGroupsById"];
  };
  "/company/contacts/{parentId}/groups/count": {
    get: operations["getCompanyContactsByParentIdGroupsCount"];
  };
  "/company/contacts/{parentId}/notes": {
    get: operations["getCompanyContactsByParentIdNotes"];
    post: operations["postCompanyContactsByParentIdNotes"];
  };
  "/company/contacts/{parentId}/notes/{id}": {
    get: operations["getCompanyContactsByParentIdNotesById"];
    put: operations["putCompanyContactsByParentIdNotesById"];
    delete: operations["deleteCompanyContactsByParentIdNotesById"];
    patch: operations["patchCompanyContactsByParentIdNotesById"];
  };
  "/company/contacts/{parentId}/notes/count": {
    get: operations["getCompanyContactsByParentIdNotesCount"];
  };
  "/company/contacts/{parentId}/tracks": {
    get: operations["getCompanyContactsByParentIdTracks"];
    post: operations["postCompanyContactsByParentIdTracks"];
  };
  "/company/contacts/{parentId}/tracks/{id}": {
    get: operations["getCompanyContactsByParentIdTracksById"];
    delete: operations["deleteCompanyContactsByParentIdTracksById"];
  };
  "/company/contacts/{parentId}/tracks/count": {
    get: operations["getCompanyContactsByParentIdTracksCount"];
  };
  "/company/contacts/{parentId}/typeAssociations": {
    get: operations["getCompanyContactsByParentIdTypeAssociations"];
    post: operations["postCompanyContactsByParentIdTypeAssociations"];
  };
  "/company/contacts/{parentId}/typeAssociations/{id}": {
    get: operations["getCompanyContactsByParentIdTypeAssociationsById"];
    put: operations["putCompanyContactsByParentIdTypeAssociationsById"];
    delete: operations["deleteCompanyContactsByParentIdTypeAssociationsById"];
    patch: operations["patchCompanyContactsByParentIdTypeAssociationsById"];
  };
  "/company/contacts/{parentId}/typeAssociations/count": {
    get: operations["getCompanyContactsByParentIdTypeAssociationsCount"];
  };
  "/company/contacts/count": {
    get: operations["getCompanyContactsCount"];
  };
  "/company/contacts/default": {
    get: operations["getCompanyContactsDefault"];
  };
  "/company/contacts/departments": {
    get: operations["getCompanyContactsDepartments"];
    post: operations["postCompanyContactsDepartments"];
  };
  "/company/contacts/departments/{id}": {
    get: operations["getCompanyContactsDepartmentsById"];
    put: operations["putCompanyContactsDepartmentsById"];
    delete: operations["deleteCompanyContactsDepartmentsById"];
    patch: operations["patchCompanyContactsDepartmentsById"];
  };
  "/company/contacts/departments/{id}/info": {
    get: operations["getCompanyContactsDepartmentsByIdInfo"];
  };
  "/company/contacts/departments/{id}/usages": {
    get: operations["getCompanyContactsDepartmentsByIdUsages"];
  };
  "/company/contacts/departments/{id}/usages/list": {
    get: operations["getCompanyContactsDepartmentsByIdUsagesList"];
  };
  "/company/contacts/departments/count": {
    get: operations["getCompanyContactsDepartmentsCount"];
  };
  "/company/contacts/departments/info": {
    get: operations["getCompanyContactsDepartmentsInfo"];
  };
  "/company/contacts/departments/info/count": {
    get: operations["getCompanyContactsDepartmentsInfoCount"];
  };
  "/company/contacts/relationships": {
    get: operations["getCompanyContactsRelationships"];
    post: operations["postCompanyContactsRelationships"];
  };
  "/company/contacts/relationships/{id}": {
    get: operations["getCompanyContactsRelationshipsById"];
    put: operations["putCompanyContactsRelationshipsById"];
    delete: operations["deleteCompanyContactsRelationshipsById"];
    patch: operations["patchCompanyContactsRelationshipsById"];
  };
  "/company/contacts/relationships/count": {
    get: operations["getCompanyContactsRelationshipsCount"];
  };
  "/company/contacts/requestPassword": {
    post: operations["postCompanyContactsRequestPassword"];
  };
  "/company/contacts/types": {
    get: operations["getCompanyContactsTypes"];
    post: operations["postCompanyContactsTypes"];
  };
  "/company/contacts/types/{id}": {
    get: operations["getCompanyContactsTypesById"];
    put: operations["putCompanyContactsTypesById"];
    delete: operations["deleteCompanyContactsTypesById"];
    patch: operations["patchCompanyContactsTypesById"];
  };
  "/company/contacts/types/{id}/info": {
    get: operations["getCompanyContactsTypesByIdInfo"];
  };
  "/company/contacts/types/count": {
    get: operations["getCompanyContactsTypesCount"];
  };
  "/company/contacts/types/count/info": {
    get: operations["getCompanyContactsTypesCountInfo"];
  };
  "/company/contacts/types/info": {
    get: operations["getCompanyContactsTypesInfo"];
  };
  "/company/contacts/validatePortalCredentials": {
    post: operations["postCompanyContactsValidatePortalCredentials"];
  };
  "/company/contactTypeAssociations": {
    get: operations["getCompanyContactTypeAssociations"];
    post: operations["postCompanyContactTypeAssociations"];
  };
  "/company/contactTypeAssociations/{id}": {
    get: operations["getCompanyContactTypeAssociationsById"];
    put: operations["putCompanyContactTypeAssociationsById"];
    delete: operations["deleteCompanyContactTypeAssociationsById"];
    patch: operations["patchCompanyContactTypeAssociationsById"];
  };
  "/company/contactTypeAssociations/count": {
    get: operations["getCompanyContactTypeAssociationsCount"];
  };
  "/company/countries": {
    get: operations["getCompanyCountries"];
    post: operations["postCompanyCountries"];
  };
  "/company/countries/{id}": {
    get: operations["getCompanyCountriesById"];
    put: operations["putCompanyCountriesById"];
    delete: operations["deleteCompanyCountriesById"];
    patch: operations["patchCompanyCountriesById"];
  };
  "/company/countries/{id}/info": {
    get: operations["getCompanyCountriesByIdInfo"];
  };
  "/company/countries/count": {
    get: operations["getCompanyCountriesCount"];
  };
  "/company/countries/info": {
    get: operations["getCompanyCountriesInfo"];
  };
  "/company/countries/info/count": {
    get: operations["getCompanyCountriesInfoCount"];
  };
  "/company/entityTypes": {
    get: operations["getCompanyEntityTypes"];
  };
  "/company/entityTypes/{id}": {
    get: operations["getCompanyEntityTypesById"];
  };
  "/company/entitytypes/{id}/info": {
    get: operations["getCompanyEntitytypesByIdInfo"];
  };
  "/company/entityTypes/count": {
    get: operations["getCompanyEntityTypesCount"];
  };
  "/company/entitytypes/info": {
    get: operations["getCompanyEntitytypesInfo"];
  };
  "/company/entityTypes/info/count": {
    get: operations["getCompanyEntityTypesInfoCount"];
  };
  "/company/expenseTypes/info/count": {
    get: operations["getCompanyExpenseTypesInfoCount"];
  };
  "/company/managedDevicesIntegrations": {
    get: operations["getCompanyManagedDevicesIntegrations"];
    post: operations["postCompanyManagedDevicesIntegrations"];
  };
  "/company/managedDevicesIntegrations/{id}": {
    get: operations["getCompanyManagedDevicesIntegrationsById"];
    put: operations["putCompanyManagedDevicesIntegrationsById"];
    delete: operations["deleteCompanyManagedDevicesIntegrationsById"];
    patch: operations["patchCompanyManagedDevicesIntegrationsById"];
  };
  "/company/managedDevicesIntegrations/{id}/info": {
    get: operations["getCompanyManagedDevicesIntegrationsByIdInfo"];
  };
  "/company/managedDevicesIntegrations/{id}/usages": {
    get: operations["getCompanyManagedDevicesIntegrationsByIdUsages"];
  };
  "/company/managedDevicesIntegrations/{id}/usages/list": {
    get: operations["getCompanyManagedDevicesIntegrationsByIdUsagesList"];
  };
  "/company/managedDevicesIntegrations/{parentId}/crossReferences": {
    get: operations["getCompanyManagedDevicesIntegrationsByParentIdCrossReferences"];
    post: operations["postCompanyManagedDevicesIntegrationsByParentIdCrossReferences"];
  };
  "/company/managedDevicesIntegrations/{parentId}/crossReferences/{id}": {
    get: operations["getCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById"];
    put: operations["putCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById"];
    delete: operations["deleteCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById"];
    patch: operations["patchCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById"];
  };
  "/company/managedDevicesIntegrations/{parentId}/crossReferences/count": {
    get: operations["getCompanyManagedDevicesIntegrationsByParentIdCrossReferencesCount"];
  };
  "/company/managedDevicesIntegrations/{parentId}/logins": {
    get: operations["getCompanyManagedDevicesIntegrationsByParentIdLogins"];
    post: operations["postCompanyManagedDevicesIntegrationsByParentIdLogins"];
  };
  "/company/managedDevicesIntegrations/{parentId}/logins/{id}": {
    get: operations["getCompanyManagedDevicesIntegrationsByParentIdLoginsById"];
    put: operations["putCompanyManagedDevicesIntegrationsByParentIdLoginsById"];
    delete: operations["deleteCompanyManagedDevicesIntegrationsByParentIdLoginsById"];
    patch: operations["patchCompanyManagedDevicesIntegrationsByParentIdLoginsById"];
  };
  "/company/managedDevicesIntegrations/{parentId}/logins/count": {
    get: operations["getCompanyManagedDevicesIntegrationsByParentIdLoginsCount"];
  };
  "/company/managedDevicesIntegrations/{parentId}/notifications": {
    get: operations["getCompanyManagedDevicesIntegrationsByParentIdNotifications"];
    post: operations["postCompanyManagedDevicesIntegrationsByParentIdNotifications"];
  };
  "/company/managedDevicesIntegrations/{parentId}/notifications/{id}": {
    get: operations["getCompanyManagedDevicesIntegrationsByParentIdNotificationsById"];
    put: operations["putCompanyManagedDevicesIntegrationsByParentIdNotificationsById"];
    delete: operations["deleteCompanyManagedDevicesIntegrationsByParentIdNotificationsById"];
    patch: operations["patchCompanyManagedDevicesIntegrationsByParentIdNotificationsById"];
  };
  "/company/managedDevicesIntegrations/{parentId}/notifications/count": {
    get: operations["getCompanyManagedDevicesIntegrationsByParentIdNotificationsCount"];
  };
  "/company/managedDevicesIntegrations/count": {
    get: operations["getCompanyManagedDevicesIntegrationsCount"];
  };
  "/company/managedDevicesIntegrations/info": {
    get: operations["getCompanyManagedDevicesIntegrationsInfo"];
  };
  "/company/managedDevicesIntegrations/info/count": {
    get: operations["getCompanyManagedDevicesIntegrationsInfoCount"];
  };
  "/company/management": {
    get: operations["getCompanyManagement"];
  };
  "/company/management/{id}": {
    get: operations["getCompanyManagementById"];
    put: operations["putCompanyManagementById"];
    patch: operations["patchCompanyManagementById"];
  };
  "/company/management/{id}/executeManagedItSync": {
    post: operations["postCompanyManagementByIdExecuteManagedItSync"];
  };
  "/company/management/{id}/log/download": {
    get: operations["getCompanyManagementByIdLogDownload"];
  };
  "/company/management/{id}/logs": {
    get: operations["getCompanyManagementByIdLogs"];
  };
  "/company/management/{parentId}/managementReportNotifications": {
    get: operations["getCompanyManagementByParentIdManagementReportNotifications"];
    post: operations["postCompanyManagementByParentIdManagementReportNotifications"];
  };
  "/company/management/{parentId}/managementReportNotifications/{id}": {
    get: operations["getCompanyManagementByParentIdManagementReportNotificationsById"];
    put: operations["putCompanyManagementByParentIdManagementReportNotificationsById"];
    delete: operations["deleteCompanyManagementByParentIdManagementReportNotificationsById"];
    patch: operations["patchCompanyManagementByParentIdManagementReportNotificationsById"];
  };
  "/company/management/{parentId}/managementReportNotifications/count": {
    get: operations["getCompanyManagementByParentIdManagementReportNotificationsCount"];
  };
  "/company/management/count": {
    get: operations["getCompanyManagementCount"];
  };
  "/company/managementBackups": {
    get: operations["getCompanyManagementBackups"];
    post: operations["postCompanyManagementBackups"];
  };
  "/company/managementBackups/{id}": {
    get: operations["getCompanyManagementBackupsById"];
    put: operations["putCompanyManagementBackupsById"];
    delete: operations["deleteCompanyManagementBackupsById"];
    patch: operations["patchCompanyManagementBackupsById"];
  };
  "/company/managementBackups/count": {
    get: operations["getCompanyManagementBackupsCount"];
  };
  "/company/managementItSolutions": {
    get: operations["getCompanyManagementItSolutions"];
    post: operations["postCompanyManagementItSolutions"];
  };
  "/company/managementItSolutions/{id}": {
    get: operations["getCompanyManagementItSolutionsById"];
    put: operations["putCompanyManagementItSolutionsById"];
    delete: operations["deleteCompanyManagementItSolutionsById"];
    patch: operations["patchCompanyManagementItSolutionsById"];
  };
  "/company/managementItSolutions/{id}/usages": {
    get: operations["getCompanyManagementItSolutionsByIdUsages"];
  };
  "/company/managementItSolutions/{id}/usages/list": {
    get: operations["getCompanyManagementItSolutionsByIdUsagesList"];
  };
  "/company/managementItSolutions/{parentId}/managementProducts": {
    get: operations["getCompanyManagementItSolutionsByParentIdManagementProducts"];
    post: operations["postCompanyManagementItSolutionsByParentIdManagementProducts"];
  };
  "/company/managementItSolutions/{parentId}/managementProducts/{id}": {
    get: operations["getCompanyManagementItSolutionsByParentIdManagementProductsById"];
    put: operations["putCompanyManagementItSolutionsByParentIdManagementProductsById"];
    delete: operations["deleteCompanyManagementItSolutionsByParentIdManagementProductsById"];
    patch: operations["patchCompanyManagementItSolutionsByParentIdManagementProductsById"];
  };
  "/company/managementItSolutions/{parentId}/managementProducts/count": {
    get: operations["getCompanyManagementItSolutionsByParentIdManagementProductsCount"];
  };
  "/company/managementItSolutions/count": {
    get: operations["getCompanyManagementItSolutionsCount"];
  };
  "/company/marketDescriptions": {
    get: operations["getCompanyMarketDescriptions"];
    post: operations["postCompanyMarketDescriptions"];
  };
  "/company/marketDescriptions/{id}": {
    get: operations["getCompanyMarketDescriptionsById"];
    put: operations["putCompanyMarketDescriptionsById"];
    delete: operations["deleteCompanyMarketDescriptionsById"];
    patch: operations["patchCompanyMarketDescriptionsById"];
  };
  "/company/marketDescriptions/{id}/info": {
    get: operations["getCompanyMarketDescriptionsByIdInfo"];
  };
  "/company/marketDescriptions/{id}/usages": {
    get: operations["getCompanyMarketDescriptionsByIdUsages"];
  };
  "/company/marketDescriptions/{id}/usages/list": {
    get: operations["getCompanyMarketDescriptionsByIdUsagesList"];
  };
  "/company/marketDescriptions/count": {
    get: operations["getCompanyMarketDescriptionsCount"];
  };
  "/company/marketDescriptions/info": {
    get: operations["getCompanyMarketDescriptionsInfo"];
  };
  "/company/marketDescriptions/info/count": {
    get: operations["getCompanyMarketDescriptionsInfoCount"];
  };
  "/company/noteTypes": {
    get: operations["getCompanyNoteTypes"];
    post: operations["postCompanyNoteTypes"];
  };
  "/company/noteTypes/{id}": {
    get: operations["getCompanyNoteTypesById"];
    put: operations["putCompanyNoteTypesById"];
    delete: operations["deleteCompanyNoteTypesById"];
    patch: operations["patchCompanyNoteTypesById"];
  };
  "/company/noteTypes/{id}/info": {
    get: operations["getCompanyNoteTypesByIdInfo"];
  };
  "/company/noteTypes/count": {
    get: operations["getCompanyNoteTypesCount"];
  };
  "/company/noteTypes/count/info": {
    get: operations["getCompanyNoteTypesCountInfo"];
  };
  "/company/noteTypes/info": {
    get: operations["getCompanyNoteTypesInfo"];
  };
  "/company/ownershipTypes": {
    get: operations["getCompanyOwnershipTypes"];
    post: operations["postCompanyOwnershipTypes"];
  };
  "/company/ownershipTypes/{id}": {
    get: operations["getCompanyOwnershipTypesById"];
    put: operations["putCompanyOwnershipTypesById"];
    delete: operations["deleteCompanyOwnershipTypesById"];
    patch: operations["patchCompanyOwnershipTypesById"];
  };
  "/company/ownershipTypes/{id}/info": {
    get: operations["getCompanyOwnershipTypesByIdInfo"];
  };
  "/company/ownershipTypes/count": {
    get: operations["getCompanyOwnershipTypesCount"];
  };
  "/company/ownershipTypes/info": {
    get: operations["getCompanyOwnershipTypesInfo"];
  };
  "/company/ownershipTypes/info/count": {
    get: operations["getCompanyOwnershipTypesInfoCount"];
  };
  "/company/paymentTypes/info/count": {
    get: operations["getCompanyPaymentTypesInfoCount"];
  };
  "/company/portalConfigurations": {
    get: operations["getCompanyPortalConfigurations"];
    post: operations["postCompanyPortalConfigurations"];
  };
  "/company/portalConfigurations/{id}": {
    get: operations["getCompanyPortalConfigurationsById"];
    put: operations["putCompanyPortalConfigurationsById"];
    delete: operations["deleteCompanyPortalConfigurationsById"];
    patch: operations["patchCompanyPortalConfigurationsById"];
  };
  "/company/portalConfigurations/{parentId}/invoiceSetups": {
    get: operations["getCompanyPortalConfigurationsByParentIdInvoiceSetups"];
  };
  "/company/portalConfigurations/{parentId}/invoiceSetups/{id}": {
    get: operations["getCompanyPortalConfigurationsByParentIdInvoiceSetupsById"];
    put: operations["putCompanyPortalConfigurationsByParentIdInvoiceSetupsById"];
    patch: operations["patchCompanyPortalConfigurationsByParentIdInvoiceSetupsById"];
  };
  "/company/portalConfigurations/{parentId}/invoiceSetups/{id}/testTransaction": {
    post: operations["postCompanyPortalConfigurationsByParentIdInvoiceSetupsByIdTestTransaction"];
  };
  "/company/portalConfigurations/{parentId}/invoiceSetups/count": {
    get: operations["getCompanyPortalConfigurationsByParentIdInvoiceSetupsCount"];
  };
  "/company/portalConfigurations/{parentId}/opportunitySetups": {
    get: operations["getCompanyPortalConfigurationsByParentIdOpportunitySetups"];
    put: operations["putCompanyPortalConfigurationsByParentIdOpportunitySetups"];
    patch: operations["patchCompanyPortalConfigurationsByParentIdOpportunitySetups"];
  };
  "/company/portalConfigurations/{parentId}/opportunitySetups/{id}": {
    get: operations["getCompanyPortalConfigurationsByParentIdOpportunitySetupsById"];
    put: operations["putCompanyPortalConfigurationsByParentIdOpportunitySetupsById"];
    patch: operations["patchCompanyPortalConfigurationsByParentIdOpportunitySetupsById"];
  };
  "/company/portalConfigurations/{parentId}/passwordEmailSetups": {
    get: operations["getCompanyPortalConfigurationsByParentIdPasswordEmailSetups"];
  };
  "/company/portalConfigurations/{parentId}/passwordEmailSetups/{id}": {
    get: operations["getCompanyPortalConfigurationsByParentIdPasswordEmailSetupsById"];
    put: operations["putCompanyPortalConfigurationsByParentIdPasswordEmailSetupsById"];
    patch: operations["patchCompanyPortalConfigurationsByParentIdPasswordEmailSetupsById"];
  };
  "/company/portalConfigurations/{parentId}/projectSetups": {
    get: operations["getCompanyPortalConfigurationsByParentIdProjectSetups"];
  };
  "/company/portalConfigurations/{parentId}/projectSetups/{id}": {
    get: operations["getCompanyPortalConfigurationsByParentIdProjectSetupsById"];
    put: operations["putCompanyPortalConfigurationsByParentIdProjectSetupsById"];
    patch: operations["patchCompanyPortalConfigurationsByParentIdProjectSetupsById"];
  };
  "/company/portalConfigurations/{parentId}/projectSetups/count": {
    get: operations["getCompanyPortalConfigurationsByParentIdProjectSetupsCount"];
  };
  "/company/portalConfigurations/{parentId}/serviceSetups": {
    get: operations["getCompanyPortalConfigurationsByParentIdServiceSetups"];
  };
  "/company/portalConfigurations/{parentId}/serviceSetups/{id}": {
    get: operations["getCompanyPortalConfigurationsByParentIdServiceSetupsById"];
    put: operations["putCompanyPortalConfigurationsByParentIdServiceSetupsById"];
    patch: operations["patchCompanyPortalConfigurationsByParentIdServiceSetupsById"];
  };
  "/company/portalConfigurations/{parentId}/serviceSetups/count": {
    get: operations["getCompanyPortalConfigurationsByParentIdServiceSetupsCount"];
  };
  "/company/portalConfigurations/copy": {
    post: operations["postCompanyPortalConfigurationsCopy"];
  };
  "/company/portalConfigurations/count": {
    get: operations["getCompanyPortalConfigurationsCount"];
  };
  "/company/portalConfigurations/invoiceSetup/paymentProcessors": {
    get: operations["getCompanyPortalConfigurationsInvoiceSetupPaymentProcessors"];
  };
  "/company/portalConfigurations/invoiceSetup/paymentProcessors/{id}": {
    get: operations["getCompanyPortalConfigurationsInvoiceSetupPaymentProcessorsById"];
  };
  "/company/portalConfigurations/invoiceSetup/paymentProcessors/count": {
    get: operations["getCompanyPortalConfigurationsInvoiceSetupPaymentProcessorsCount"];
  };
  "/company/portalSecurityLevels": {
    get: operations["getCompanyPortalSecurityLevels"];
  };
  "/company/portalSecurityLevels/{id}": {
    get: operations["getCompanyPortalSecurityLevelsById"];
    put: operations["putCompanyPortalSecurityLevelsById"];
    patch: operations["patchCompanyPortalSecurityLevelsById"];
  };
  "/company/portalSecurityLevels/count": {
    get: operations["getCompanyPortalSecurityLevelsCount"];
  };
  "/company/portalSecuritySettings": {
    get: operations["getCompanyPortalSecuritySettings"];
  };
  "/company/portalSecuritySettings/{id}": {
    get: operations["getCompanyPortalSecuritySettingsById"];
    put: operations["putCompanyPortalSecuritySettingsById"];
    patch: operations["patchCompanyPortalSecuritySettingsById"];
  };
  "/company/portalSecuritySettings/count": {
    get: operations["getCompanyPortalSecuritySettingsCount"];
  };
  "/company/states": {
    get: operations["getCompanyStates"];
    post: operations["postCompanyStates"];
  };
  "/company/states/{id}": {
    get: operations["getCompanyStatesById"];
    put: operations["putCompanyStatesById"];
    delete: operations["deleteCompanyStatesById"];
    patch: operations["patchCompanyStatesById"];
  };
  "/company/states/{id}/info": {
    get: operations["getCompanyStatesByIdInfo"];
  };
  "/company/states/{id}/usages": {
    get: operations["getCompanyStatesByIdUsages"];
  };
  "/company/states/{id}/usages/list": {
    get: operations["getCompanyStatesByIdUsagesList"];
  };
  "/company/states/count": {
    get: operations["getCompanyStatesCount"];
  };
  "/company/states/info": {
    get: operations["getCompanyStatesInfo"];
  };
  "/company/states/info/count": {
    get: operations["getCompanyStatesInfoCount"];
  };
  "/company/teamRoles": {
    get: operations["getCompanyTeamRoles"];
    post: operations["postCompanyTeamRoles"];
  };
  "/company/teamRoles/{id}": {
    get: operations["getCompanyTeamRolesById"];
    put: operations["putCompanyTeamRolesById"];
    delete: operations["deleteCompanyTeamRolesById"];
    patch: operations["patchCompanyTeamRolesById"];
  };
  "/company/teamRoles/{id}/info": {
    get: operations["getCompanyTeamRolesByIdInfo"];
  };
  "/company/teamRoles/{id}/usages": {
    get: operations["getCompanyTeamRolesByIdUsages"];
  };
  "/company/teamRoles/{id}/usages/list": {
    get: operations["getCompanyTeamRolesByIdUsagesList"];
  };
  "/company/teamRoles/count": {
    get: operations["getCompanyTeamRolesCount"];
  };
  "/company/teamRoles/info": {
    get: operations["getCompanyTeamRolesInfo"];
  };
  "/company/teamRoles/info/count": {
    get: operations["getCompanyTeamRolesInfoCount"];
  };
  "/company/tracks": {
    get: operations["getCompanyTracks"];
    post: operations["postCompanyTracks"];
  };
  "/company/tracks/{id}": {
    get: operations["getCompanyTracksById"];
    put: operations["putCompanyTracksById"];
    delete: operations["deleteCompanyTracksById"];
    patch: operations["patchCompanyTracksById"];
  };
  "/company/tracks/{parentId}/actions": {
    get: operations["getCompanyTracksByParentIdActions"];
    post: operations["postCompanyTracksByParentIdActions"];
  };
  "/company/tracks/{parentId}/actions/{id}": {
    get: operations["getCompanyTracksByParentIdActionsById"];
    put: operations["putCompanyTracksByParentIdActionsById"];
    delete: operations["deleteCompanyTracksByParentIdActionsById"];
    patch: operations["patchCompanyTracksByParentIdActionsById"];
  };
  "/company/tracks/{parentId}/actions/count": {
    get: operations["getCompanyTracksByParentIdActionsCount"];
  };
  "/company/tracks/count": {
    get: operations["getCompanyTracksCount"];
  };
  "/configurations/types/{grandparentId}/questions/{parentId}/values/{id}/info": {
    get: operations["getConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesByIdInfo"];
  };
  "/configurations/types/{grandparentId}/questions/{parentId}/values/info": {
    get: operations["getConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesInfo"];
  };
  "/configurations/types/{grandparentId}/questions/{parentId}/values/info/count": {
    get: operations["getConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesInfoCount"];
  };
  "/configurations/types/{parentId}/questions/{id}/info": {
    get: operations["getConfigurationsTypesByParentIdQuestionsByIdInfo"];
  };
  "/configurations/types/{parentId}/questions/info": {
    get: operations["getConfigurationsTypesByParentIdQuestionsInfo"];
  };
  "/configurations/types/{parentId}/questions/info/count": {
    get: operations["getConfigurationsTypesByParentIdQuestionsInfoCount"];
  };
  "/configurations/types/info": {
    get: operations["getConfigurationsTypesInfo"];
  };
  "/configurations/types/info/count": {
    get: operations["getConfigurationsTypesInfoCount"];
  };
  "/expense/classifications": {
    get: operations["getExpenseClassifications"];
  };
  "/expense/classifications/{id}": {
    get: operations["getExpenseClassificationsById"];
  };
  "/expense/classifications/count": {
    get: operations["getExpenseClassificationsCount"];
  };
  "/expense/entries": {
    get: operations["getExpenseEntries"];
    post: operations["postExpenseEntries"];
  };
  "/expense/entries/{id}": {
    get: operations["getExpenseEntriesById"];
    put: operations["putExpenseEntriesById"];
    delete: operations["deleteExpenseEntriesById"];
    patch: operations["patchExpenseEntriesById"];
  };
  "/expense/entries/{parentId}/audits": {
    get: operations["getExpenseEntriesByParentIdAudits"];
  };
  "/expense/entries/{parentId}/audits/{id}": {
    get: operations["getExpenseEntriesByParentIdAuditsById"];
  };
  "/expense/entries/{parentId}/audits/count": {
    get: operations["getExpenseEntriesByParentIdAuditsCount"];
  };
  "/expense/entries/count": {
    get: operations["getExpenseEntriesCount"];
  };
  "/expense/info/taxTypes": {
    get: operations["getExpenseInfoTaxTypes"];
  };
  "/expense/info/taxTypes/{id}": {
    get: operations["getExpenseInfoTaxTypesById"];
  };
  "/expense/info/taxTypes/count": {
    get: operations["getExpenseInfoTaxTypesCount"];
  };
  "/expense/paymentTypes": {
    get: operations["getExpensePaymentTypes"];
    post: operations["postExpensePaymentTypes"];
  };
  "/expense/paymentTypes/{id}": {
    get: operations["getExpensePaymentTypesById"];
    put: operations["putExpensePaymentTypesById"];
    delete: operations["deleteExpensePaymentTypesById"];
    patch: operations["patchExpensePaymentTypesById"];
  };
  "/expense/paymentTypes/{id}/info": {
    get: operations["getExpensePaymentTypesByIdInfo"];
  };
  "/expense/paymentTypes/count": {
    get: operations["getExpensePaymentTypesCount"];
  };
  "/expense/paymentTypes/info": {
    get: operations["getExpensePaymentTypesInfo"];
  };
  "/expense/reports": {
    get: operations["getExpenseReports"];
  };
  "/expense/reports/{id}": {
    get: operations["getExpenseReportsById"];
  };
  "/expense/reports/{id}/reverse": {
    post: operations["postExpenseReportsByIdReverse"];
  };
  "/expense/reports/{id}/submit": {
    post: operations["postExpenseReportsByIdSubmit"];
  };
  "/expense/reports/{parentId}/audits": {
    get: operations["getExpenseReportsByParentIdAudits"];
  };
  "/expense/reports/{parentId}/audits/{id}": {
    get: operations["getExpenseReportsByParentIdAuditsById"];
  };
  "/expense/reports/{parentId}/audits/count": {
    get: operations["getExpenseReportsByParentIdAuditsCount"];
  };
  "/expense/reports/count": {
    get: operations["getExpenseReportsCount"];
  };
  "/expense/types": {
    get: operations["getExpenseTypes"];
    post: operations["postExpenseTypes"];
  };
  "/expense/types/{id}": {
    get: operations["getExpenseTypesById"];
    put: operations["putExpenseTypesById"];
    delete: operations["deleteExpenseTypesById"];
    patch: operations["patchExpenseTypesById"];
  };
  "/expense/types/{id}/info": {
    get: operations["getExpenseTypesByIdInfo"];
  };
  "/expense/types/count": {
    get: operations["getExpenseTypesCount"];
  };
  "/expense/types/info": {
    get: operations["getExpenseTypesInfo"];
  };
  "/finance/accounting/batches": {
    get: operations["getFinanceAccountingBatches"];
    post: operations["postFinanceAccountingBatches"];
  };
  "/finance/accounting/batches/{id}": {
    get: operations["getFinanceAccountingBatchesById"];
    delete: operations["deleteFinanceAccountingBatchesById"];
  };
  "/finance/accounting/batches/{id}/export": {
    post: operations["postFinanceAccountingBatchesByIdExport"];
  };
  "/finance/accounting/batches/{parentId}/entries": {
    get: operations["getFinanceAccountingBatchesByParentIdEntries"];
  };
  "/finance/accounting/batches/{parentId}/entries/{id}": {
    get: operations["getFinanceAccountingBatchesByParentIdEntriesById"];
  };
  "/finance/accounting/batches/{parentId}/entries/count": {
    get: operations["getFinanceAccountingBatchesByParentIdEntriesCount"];
  };
  "/finance/accounting/batches/count": {
    get: operations["getFinanceAccountingBatchesCount"];
  };
  "/finance/accounting/export": {
    post: operations["postFinanceAccountingExport"];
  };
  "/finance/accounting/unpostedexpenses": {
    get: operations["getFinanceAccountingUnpostedexpenses"];
  };
  "/finance/accounting/unpostedexpenses/{id}": {
    get: operations["getFinanceAccountingUnpostedexpensesById"];
  };
  "/finance/accounting/unpostedexpenses/{parentId}/taxableLevels": {
    get: operations["getFinanceAccountingUnpostedexpensesByParentIdTaxableLevels"];
  };
  "/finance/accounting/unpostedexpenses/{parentId}/taxableLevels/{id}": {
    get: operations["getFinanceAccountingUnpostedexpensesByParentIdTaxableLevelsById"];
  };
  "/finance/accounting/unpostedexpenses/{parentId}/taxableLevels/count": {
    get: operations["getFinanceAccountingUnpostedexpensesByParentIdTaxableLevelsCount"];
  };
  "/finance/accounting/unpostedexpenses/count": {
    get: operations["getFinanceAccountingUnpostedexpensesCount"];
  };
  "/finance/accounting/unpostedinvoices": {
    get: operations["getFinanceAccountingUnpostedinvoices"];
  };
  "/finance/accounting/unpostedinvoices/{id}": {
    get: operations["getFinanceAccountingUnpostedinvoicesById"];
  };
  "/finance/accounting/unpostedinvoices/{parentId}/taxableLevels": {
    get: operations["getFinanceAccountingUnpostedinvoicesByParentIdTaxableLevels"];
  };
  "/finance/accounting/unpostedinvoices/{parentId}/taxableLevels/{id}": {
    get: operations["getFinanceAccountingUnpostedinvoicesByParentIdTaxableLevelsById"];
  };
  "/finance/accounting/unpostedinvoices/{parentId}/taxableLevels/count": {
    get: operations["getFinanceAccountingUnpostedinvoicesByParentIdTaxableLevelsCount"];
  };
  "/finance/accounting/unpostedinvoices/count": {
    get: operations["getFinanceAccountingUnpostedinvoicesCount"];
  };
  "/finance/accounting/unpostedprocurement": {
    get: operations["getFinanceAccountingUnpostedprocurement"];
  };
  "/finance/accounting/unpostedprocurement/{id}": {
    get: operations["getFinanceAccountingUnpostedprocurementById"];
  };
  "/finance/accounting/unpostedprocurement/{parentId}/taxableLevels": {
    get: operations["getFinanceAccountingUnpostedprocurementByParentIdTaxableLevels"];
  };
  "/finance/accounting/unpostedprocurement/{parentId}/taxableLevels/{id}": {
    get: operations["getFinanceAccountingUnpostedprocurementByParentIdTaxableLevelsById"];
  };
  "/finance/accounting/unpostedprocurement/{parentId}/taxableLevels/count": {
    get: operations["getFinanceAccountingUnpostedprocurementByParentIdTaxableLevelsCount"];
  };
  "/finance/accounting/unpostedprocurement/count": {
    get: operations["getFinanceAccountingUnpostedprocurementCount"];
  };
  "/finance/accountingPackages": {
    get: operations["getFinanceAccountingPackages"];
  };
  "/finance/accountingPackages/{id}": {
    get: operations["getFinanceAccountingPackagesById"];
  };
  "/finance/accountingPackages/count": {
    get: operations["getFinanceAccountingPackagesCount"];
  };
  "/finance/accountingPackageSetup": {
    get: operations["getFinanceAccountingPackageSetup"];
  };
  "/finance/accountingPackageSetup/{id}": {
    get: operations["getFinanceAccountingPackageSetupById"];
    put: operations["putFinanceAccountingPackageSetupById"];
    patch: operations["patchFinanceAccountingPackageSetupById"];
  };
  "/finance/accountingPackageSetup/count": {
    get: operations["getFinanceAccountingPackageSetupCount"];
  };
  "/finance/agreements": {
    get: operations["getFinanceAgreements"];
    post: operations["postFinanceAgreements"];
  };
  "/finance/agreements/{id}": {
    get: operations["getFinanceAgreementsById"];
    put: operations["putFinanceAgreementsById"];
    delete: operations["deleteFinanceAgreementsById"];
    patch: operations["patchFinanceAgreementsById"];
  };
  "/finance/agreements/{parentId}/additions": {
    get: operations["getFinanceAgreementsByParentIdAdditions"];
    post: operations["postFinanceAgreementsByParentIdAdditions"];
  };
  "/finance/agreements/{parentId}/additions/{id}": {
    get: operations["getFinanceAgreementsByParentIdAdditionsById"];
    put: operations["putFinanceAgreementsByParentIdAdditionsById"];
    delete: operations["deleteFinanceAgreementsByParentIdAdditionsById"];
    patch: operations["patchFinanceAgreementsByParentIdAdditionsById"];
  };
  "/finance/agreements/{parentId}/additions/count": {
    get: operations["getFinanceAgreementsByParentIdAdditionsCount"];
  };
  "/finance/agreements/{parentId}/adjustments": {
    get: operations["getFinanceAgreementsByParentIdAdjustments"];
    post: operations["postFinanceAgreementsByParentIdAdjustments"];
  };
  "/finance/agreements/{parentId}/adjustments/{id}": {
    get: operations["getFinanceAgreementsByParentIdAdjustmentsById"];
    put: operations["putFinanceAgreementsByParentIdAdjustmentsById"];
    delete: operations["deleteFinanceAgreementsByParentIdAdjustmentsById"];
    patch: operations["patchFinanceAgreementsByParentIdAdjustmentsById"];
  };
  "/finance/agreements/{parentId}/adjustments/count": {
    get: operations["getFinanceAgreementsByParentIdAdjustmentsCount"];
  };
  "/finance/agreements/{parentId}/boardDefaults": {
    get: operations["getFinanceAgreementsByParentIdBoardDefaults"];
    post: operations["postFinanceAgreementsByParentIdBoardDefaults"];
  };
  "/finance/agreements/{parentId}/boardDefaults/{id}": {
    get: operations["getFinanceAgreementsByParentIdBoardDefaultsById"];
    put: operations["putFinanceAgreementsByParentIdBoardDefaultsById"];
    delete: operations["deleteFinanceAgreementsByParentIdBoardDefaultsById"];
    patch: operations["patchFinanceAgreementsByParentIdBoardDefaultsById"];
  };
  "/finance/agreements/{parentId}/boardDefaults/count": {
    get: operations["getFinanceAgreementsByParentIdBoardDefaultsCount"];
  };
  "/finance/agreements/{parentId}/configurations": {
    get: operations["getFinanceAgreementsByParentIdConfigurations"];
    post: operations["postFinanceAgreementsByParentIdConfigurations"];
  };
  "/finance/agreements/{parentId}/configurations/{id}": {
    get: operations["getFinanceAgreementsByParentIdConfigurationsById"];
    delete: operations["deleteFinanceAgreementsByParentIdConfigurationsById"];
  };
  "/finance/agreements/{parentId}/configurations/count": {
    get: operations["getFinanceAgreementsByParentIdConfigurationsCount"];
  };
  "/finance/agreements/{parentId}/sites": {
    get: operations["getFinanceAgreementsByParentIdSites"];
    post: operations["postFinanceAgreementsByParentIdSites"];
  };
  "/finance/agreements/{parentId}/sites/{id}": {
    get: operations["getFinanceAgreementsByParentIdSitesById"];
    put: operations["putFinanceAgreementsByParentIdSitesById"];
    delete: operations["deleteFinanceAgreementsByParentIdSitesById"];
    patch: operations["patchFinanceAgreementsByParentIdSitesById"];
  };
  "/finance/agreements/{parentId}/sites/count": {
    get: operations["getFinanceAgreementsByParentIdSitesCount"];
  };
  "/finance/agreements/{parentId}/workRoleExclusions": {
    get: operations["getFinanceAgreementsByParentIdWorkRoleExclusions"];
    post: operations["postFinanceAgreementsByParentIdWorkRoleExclusions"];
  };
  "/finance/agreements/{parentId}/workRoleExclusions/{id}": {
    delete: operations["deleteFinanceAgreementsByParentIdWorkRoleExclusionsById"];
  };
  "/finance/agreements/{parentId}/workRoleExclusions/count": {
    get: operations["getFinanceAgreementsByParentIdWorkRoleExclusionsCount"];
  };
  "/finance/agreements/{parentId}/workroles": {
    get: operations["getFinanceAgreementsByParentIdWorkroles"];
    post: operations["postFinanceAgreementsByParentIdWorkroles"];
  };
  "/finance/agreements/{parentId}/workroles/{id}": {
    get: operations["getFinanceAgreementsByParentIdWorkrolesById"];
    put: operations["putFinanceAgreementsByParentIdWorkrolesById"];
    delete: operations["deleteFinanceAgreementsByParentIdWorkrolesById"];
    patch: operations["patchFinanceAgreementsByParentIdWorkrolesById"];
  };
  "/finance/agreements/{parentId}/workroles/count": {
    get: operations["getFinanceAgreementsByParentIdWorkrolesCount"];
  };
  "/finance/agreements/{parentId}/workTypeExclusions": {
    get: operations["getFinanceAgreementsByParentIdWorkTypeExclusions"];
    post: operations["postFinanceAgreementsByParentIdWorkTypeExclusions"];
  };
  "/finance/agreements/{parentId}/workTypeExclusions/{id}": {
    delete: operations["deleteFinanceAgreementsByParentIdWorkTypeExclusionsById"];
  };
  "/finance/agreements/{parentId}/workTypeExclusions/count": {
    get: operations["getFinanceAgreementsByParentIdWorkTypeExclusionsCount"];
  };
  "/finance/agreements/{parentId}/worktypes": {
    get: operations["getFinanceAgreementsByParentIdWorktypes"];
    post: operations["postFinanceAgreementsByParentIdWorktypes"];
  };
  "/finance/agreements/{parentId}/worktypes/{id}": {
    get: operations["getFinanceAgreementsByParentIdWorktypesById"];
    put: operations["putFinanceAgreementsByParentIdWorktypesById"];
    delete: operations["deleteFinanceAgreementsByParentIdWorktypesById"];
    patch: operations["patchFinanceAgreementsByParentIdWorktypesById"];
  };
  "/finance/agreements/{parentId}/worktypes/count": {
    get: operations["getFinanceAgreementsByParentIdWorktypesCount"];
  };
  "/finance/agreements/count": {
    get: operations["getFinanceAgreementsCount"];
  };
  "/finance/agreements/types": {
    get: operations["getFinanceAgreementsTypes"];
    post: operations["postFinanceAgreementsTypes"];
  };
  "/finance/agreements/types/{id}": {
    get: operations["getFinanceAgreementsTypesById"];
    put: operations["putFinanceAgreementsTypesById"];
    delete: operations["deleteFinanceAgreementsTypesById"];
    patch: operations["patchFinanceAgreementsTypesById"];
  };
  "/finance/agreements/types/{id}/info": {
    get: operations["getFinanceAgreementsTypesByIdInfo"];
  };
  "/finance/agreements/types/{id}/usages": {
    get: operations["getFinanceAgreementsTypesByIdUsages"];
  };
  "/finance/agreements/types/{id}/usages/list": {
    get: operations["getFinanceAgreementsTypesByIdUsagesList"];
  };
  "/finance/agreements/types/count": {
    get: operations["getFinanceAgreementsTypesCount"];
  };
  "/finance/agreements/types/info": {
    get: operations["getFinanceAgreementsTypesInfo"];
  };
  "/finance/agreements/types/info/count": {
    get: operations["getFinanceAgreementsTypesInfoCount"];
  };
  "/finance/agreementTypes/{parentId}/boardDefaults": {
    get: operations["getFinanceAgreementTypesByParentIdBoardDefaults"];
    post: operations["postFinanceAgreementTypesByParentIdBoardDefaults"];
  };
  "/finance/agreementTypes/{parentId}/boardDefaults/{id}": {
    get: operations["getFinanceAgreementTypesByParentIdBoardDefaultsById"];
    put: operations["putFinanceAgreementTypesByParentIdBoardDefaultsById"];
    delete: operations["deleteFinanceAgreementTypesByParentIdBoardDefaultsById"];
    patch: operations["patchFinanceAgreementTypesByParentIdBoardDefaultsById"];
  };
  "/finance/agreementTypes/{parentId}/boardDefaults/count": {
    get: operations["getFinanceAgreementTypesByParentIdBoardDefaultsCount"];
  };
  "/finance/agreementTypes/{parentId}/workRoleExclusions": {
    get: operations["getFinanceAgreementTypesByParentIdWorkRoleExclusions"];
    post: operations["postFinanceAgreementTypesByParentIdWorkRoleExclusions"];
  };
  "/finance/agreementTypes/{parentId}/workRoleExclusions/{id}": {
    get: operations["getFinanceAgreementTypesByParentIdWorkRoleExclusionsById"];
    delete: operations["deleteFinanceAgreementTypesByParentIdWorkRoleExclusionsById"];
  };
  "/finance/agreementTypes/{parentId}/workRoleExclusions/count": {
    get: operations["getFinanceAgreementTypesByParentIdWorkRoleExclusionsCount"];
  };
  "/finance/agreementTypes/{parentId}/workroles": {
    get: operations["getFinanceAgreementTypesByParentIdWorkroles"];
    post: operations["postFinanceAgreementTypesByParentIdWorkroles"];
  };
  "/finance/agreementTypes/{parentId}/workroles/{id}": {
    get: operations["getFinanceAgreementTypesByParentIdWorkrolesById"];
    put: operations["putFinanceAgreementTypesByParentIdWorkrolesById"];
    delete: operations["deleteFinanceAgreementTypesByParentIdWorkrolesById"];
    patch: operations["patchFinanceAgreementTypesByParentIdWorkrolesById"];
  };
  "/finance/agreementTypes/{parentId}/workroles/count": {
    get: operations["getFinanceAgreementTypesByParentIdWorkrolesCount"];
  };
  "/finance/agreementTypes/{parentId}/workroles/info": {
    get: operations["getFinanceAgreementTypesByParentIdWorkrolesInfo"];
  };
  "/finance/agreementTypes/{parentId}/workroles/info/{id}": {
    get: operations["getFinanceAgreementTypesByParentIdWorkrolesInfoById"];
  };
  "/finance/agreementTypes/{parentId}/workroles/info/count": {
    get: operations["getFinanceAgreementTypesByParentIdWorkrolesInfoCount"];
  };
  "/finance/agreementTypes/{parentId}/workTypeExclusions": {
    get: operations["getFinanceAgreementTypesByParentIdWorkTypeExclusions"];
    post: operations["postFinanceAgreementTypesByParentIdWorkTypeExclusions"];
  };
  "/finance/agreementTypes/{parentId}/workTypeExclusions/{id}": {
    get: operations["getFinanceAgreementTypesByParentIdWorkTypeExclusionsById"];
    delete: operations["deleteFinanceAgreementTypesByParentIdWorkTypeExclusionsById"];
  };
  "/finance/agreementTypes/{parentId}/workTypeExclusions/count": {
    get: operations["getFinanceAgreementTypesByParentIdWorkTypeExclusionsCount"];
  };
  "/finance/agreementTypes/{parentId}/worktypes": {
    get: operations["getFinanceAgreementTypesByParentIdWorktypes"];
    post: operations["postFinanceAgreementTypesByParentIdWorktypes"];
  };
  "/finance/agreementTypes/{parentId}/worktypes/{id}": {
    get: operations["getFinanceAgreementTypesByParentIdWorktypesById"];
    put: operations["putFinanceAgreementTypesByParentIdWorktypesById"];
    delete: operations["deleteFinanceAgreementTypesByParentIdWorktypesById"];
    patch: operations["patchFinanceAgreementTypesByParentIdWorktypesById"];
  };
  "/finance/agreementTypes/{parentId}/worktypes/count": {
    get: operations["getFinanceAgreementTypesByParentIdWorktypesCount"];
  };
  "/finance/batchSetups": {
    get: operations["getFinanceBatchSetups"];
  };
  "/finance/batchSetups/{id}": {
    get: operations["getFinanceBatchSetupsById"];
    put: operations["putFinanceBatchSetupsById"];
    patch: operations["patchFinanceBatchSetupsById"];
  };
  "/finance/batchSetups/count": {
    get: operations["getFinanceBatchSetupsCount"];
  };
  "/finance/billingCycles": {
    get: operations["getFinanceBillingCycles"];
    post: operations["postFinanceBillingCycles"];
  };
  "/finance/billingCycles/{id}": {
    get: operations["getFinanceBillingCyclesById"];
    put: operations["putFinanceBillingCyclesById"];
    delete: operations["deleteFinanceBillingCyclesById"];
    patch: operations["patchFinanceBillingCyclesById"];
  };
  "/finance/billingCycles/{id}/info": {
    get: operations["getFinanceBillingCyclesByIdInfo"];
  };
  "/finance/billingCycles/{id}/usages": {
    get: operations["getFinanceBillingCyclesByIdUsages"];
  };
  "/finance/billingCycles/{id}/usages/list": {
    get: operations["getFinanceBillingCyclesByIdUsagesList"];
  };
  "/finance/billingCycles/count": {
    get: operations["getFinanceBillingCyclesCount"];
  };
  "/finance/billingCycles/info": {
    get: operations["getFinanceBillingCyclesInfo"];
  };
  "/finance/billingCycles/info/count": {
    get: operations["getFinanceBillingCyclesInfoCount"];
  };
  "/finance/billingSetups": {
    get: operations["getFinanceBillingSetups"];
    post: operations["postFinanceBillingSetups"];
  };
  "/finance/billingSetups/{id}": {
    get: operations["getFinanceBillingSetupsById"];
    put: operations["putFinanceBillingSetupsById"];
    delete: operations["deleteFinanceBillingSetupsById"];
    patch: operations["patchFinanceBillingSetupsById"];
  };
  "/finance/billingSetups/{id}/info": {
    get: operations["getFinanceBillingSetupsByIdInfo"];
  };
  "/finance/billingSetups/{parentId}/routings": {
    get: operations["getFinanceBillingSetupsByParentIdRoutings"];
    post: operations["postFinanceBillingSetupsByParentIdRoutings"];
  };
  "/finance/billingSetups/{parentId}/routings/{id}": {
    get: operations["getFinanceBillingSetupsByParentIdRoutingsById"];
    put: operations["putFinanceBillingSetupsByParentIdRoutingsById"];
    delete: operations["deleteFinanceBillingSetupsByParentIdRoutingsById"];
    patch: operations["patchFinanceBillingSetupsByParentIdRoutingsById"];
  };
  "/finance/billingSetups/{parentId}/routings/count": {
    get: operations["getFinanceBillingSetupsByParentIdRoutingsCount"];
  };
  "/finance/billingSetups/count": {
    get: operations["getFinanceBillingSetupsCount"];
  };
  "/finance/billingSetups/info": {
    get: operations["getFinanceBillingSetupsInfo"];
  };
  "/finance/billingStatuses": {
    get: operations["getFinanceBillingStatuses"];
    post: operations["postFinanceBillingStatuses"];
  };
  "/finance/billingStatuses/{id}": {
    get: operations["getFinanceBillingStatusesById"];
    put: operations["putFinanceBillingStatusesById"];
    delete: operations["deleteFinanceBillingStatusesById"];
    patch: operations["patchFinanceBillingStatusesById"];
  };
  "/finance/billingStatuses/{id}/info": {
    get: operations["getFinanceBillingStatusesByIdInfo"];
  };
  "/finance/billingStatuses/{id}/usages": {
    get: operations["getFinanceBillingStatusesByIdUsages"];
  };
  "/finance/billingStatuses/{id}/usages/list": {
    get: operations["getFinanceBillingStatusesByIdUsagesList"];
  };
  "/finance/billingStatuses/count": {
    get: operations["getFinanceBillingStatusesCount"];
  };
  "/finance/billingStatuses/info": {
    get: operations["getFinanceBillingStatusesInfo"];
  };
  "/finance/billingStatuses/info/count": {
    get: operations["getFinanceBillingStatusesInfoCount"];
  };
  "/finance/billingTerms": {
    get: operations["getFinanceBillingTerms"];
    post: operations["postFinanceBillingTerms"];
  };
  "/finance/billingTerms/{id}": {
    get: operations["getFinanceBillingTermsById"];
    put: operations["putFinanceBillingTermsById"];
    delete: operations["deleteFinanceBillingTermsById"];
    patch: operations["patchFinanceBillingTermsById"];
  };
  "/finance/billingTerms/{id}/info": {
    get: operations["getFinanceBillingTermsByIdInfo"];
  };
  "/finance/billingTerms/{id}/usages": {
    get: operations["getFinanceBillingTermsByIdUsages"];
  };
  "/finance/billingTerms/{id}/usages/list": {
    get: operations["getFinanceBillingTermsByIdUsagesList"];
  };
  "/finance/billingTerms/count": {
    get: operations["getFinanceBillingTermsCount"];
  };
  "/finance/billingTerms/info": {
    get: operations["getFinanceBillingTermsInfo"];
  };
  "/finance/billingTerms/info/count": {
    get: operations["getFinanceBillingTermsInfoCount"];
  };
  "/finance/closedInvoices/{id}": {
    put: operations["putFinanceClosedInvoicesById"];
    patch: operations["patchFinanceClosedInvoicesById"];
  };
  "/finance/companyFinance/": {
    get: operations["getFinanceCompanyFinance"];
  };
  "/finance/companyFinance/{id}": {
    get: operations["getFinanceCompanyFinanceById"];
    patch: operations["patchFinanceCompanyFinanceById"];
  };
  "/finance/companyFinance/count": {
    get: operations["getFinanceCompanyFinanceCount"];
  };
  "/finance/currencies": {
    get: operations["getFinanceCurrencies"];
    post: operations["postFinanceCurrencies"];
  };
  "/finance/currencies/{id}": {
    get: operations["getFinanceCurrenciesById"];
    put: operations["putFinanceCurrenciesById"];
    delete: operations["deleteFinanceCurrenciesById"];
    patch: operations["patchFinanceCurrenciesById"];
  };
  "/finance/currencies/{id}/info": {
    get: operations["getFinanceCurrenciesByIdInfo"];
  };
  "/finance/currencies/{id}/usages": {
    get: operations["getFinanceCurrenciesByIdUsages"];
  };
  "/finance/currencies/{id}/usages/list": {
    get: operations["getFinanceCurrenciesByIdUsagesList"];
  };
  "/finance/currencies/count": {
    get: operations["getFinanceCurrenciesCount"];
  };
  "/finance/currencies/info": {
    get: operations["getFinanceCurrenciesInfo"];
  };
  "/finance/currencies/info/count": {
    get: operations["getFinanceCurrenciesInfoCount"];
  };
  "/finance/deliveryMethods": {
    get: operations["getFinanceDeliveryMethods"];
    post: operations["postFinanceDeliveryMethods"];
  };
  "/finance/deliveryMethods/{id}": {
    get: operations["getFinanceDeliveryMethodsById"];
    put: operations["putFinanceDeliveryMethodsById"];
    delete: operations["deleteFinanceDeliveryMethodsById"];
    patch: operations["patchFinanceDeliveryMethodsById"];
  };
  "/finance/deliveryMethods/count": {
    get: operations["getFinanceDeliveryMethodsCount"];
  };
  "/finance/glAccounts": {
    get: operations["getFinanceGlAccounts"];
    post: operations["postFinanceGlAccounts"];
  };
  "/finance/glAccounts/{id}": {
    get: operations["getFinanceGlAccountsById"];
    put: operations["putFinanceGlAccountsById"];
    delete: operations["deleteFinanceGlAccountsById"];
    patch: operations["patchFinanceGlAccountsById"];
  };
  "/finance/glAccounts/count": {
    get: operations["getFinanceGlAccountsCount"];
  };
  "/finance/glAccounts/mappedTypes": {
    get: operations["getFinanceGlAccountsMappedTypes"];
  };
  "/finance/glAccounts/mappedTypes/count": {
    get: operations["getFinanceGlAccountsMappedTypesCount"];
  };
  "/finance/glCaptions": {
    get: operations["getFinanceGlCaptions"];
  };
  "/finance/glCaptions/{id}": {
    get: operations["getFinanceGlCaptionsById"];
    put: operations["putFinanceGlCaptionsById"];
    patch: operations["patchFinanceGlCaptionsById"];
  };
  "/finance/glCaptions/count": {
    get: operations["getFinanceGlCaptionsCount"];
  };
  "/finance/glpaths": {
    get: operations["getFinanceGlpaths"];
    post: operations["postFinanceGlpaths"];
  };
  "/finance/glpaths/{id}": {
    get: operations["getFinanceGlpathsById"];
    put: operations["putFinanceGlpathsById"];
    delete: operations["deleteFinanceGlpathsById"];
    patch: operations["patchFinanceGlpathsById"];
  };
  "/finance/glpaths/count": {
    get: operations["getFinanceGlpathsCount"];
  };
  "/finance/info/currencyCodes": {
    get: operations["getFinanceInfoCurrencyCodes"];
  };
  "/finance/info/currencyCodes/{id}": {
    get: operations["getFinanceInfoCurrencyCodesById"];
  };
  "/finance/info/currencyCodes/count": {
    get: operations["getFinanceInfoCurrencyCodesCount"];
  };
  "/finance/info/invoice/{id}": {
    get: operations["getFinanceInfoInvoiceById"];
  };
  "/finance/info/taxIntegrations": {
    get: operations["getFinanceInfoTaxIntegrations"];
  };
  "/finance/info/taxIntegrations/{id}": {
    get: operations["getFinanceInfoTaxIntegrationsById"];
  };
  "/finance/info/taxIntegrations/count": {
    get: operations["getFinanceInfoTaxIntegrationsCount"];
  };
  "/finance/invoiceEmailTemplates": {
    get: operations["getFinanceInvoiceEmailTemplates"];
    post: operations["postFinanceInvoiceEmailTemplates"];
  };
  "/finance/invoiceEmailTemplates/{id}": {
    get: operations["getFinanceInvoiceEmailTemplatesById"];
    put: operations["putFinanceInvoiceEmailTemplatesById"];
    delete: operations["deleteFinanceInvoiceEmailTemplatesById"];
    patch: operations["patchFinanceInvoiceEmailTemplatesById"];
  };
  "/finance/invoiceEmailTemplates/{id}/info": {
    get: operations["getFinanceInvoiceEmailTemplatesByIdInfo"];
  };
  "/finance/invoiceEmailTemplates/{id}/usages": {
    get: operations["getFinanceInvoiceEmailTemplatesByIdUsages"];
  };
  "/finance/invoiceEmailTemplates/{id}/usages/list": {
    get: operations["getFinanceInvoiceEmailTemplatesByIdUsagesList"];
  };
  "/finance/invoiceEmailTemplates/count": {
    get: operations["getFinanceInvoiceEmailTemplatesCount"];
  };
  "/finance/invoiceEmailTemplates/info": {
    get: operations["getFinanceInvoiceEmailTemplatesInfo"];
  };
  "/finance/invoiceEmailTemplates/info/count": {
    get: operations["getFinanceInvoiceEmailTemplatesInfoCount"];
  };
  "/finance/invoices": {
    get: operations["getFinanceInvoices"];
    post: operations["postFinanceInvoices"];
  };
  "/finance/invoices/{id}": {
    get: operations["getFinanceInvoicesById"];
    put: operations["putFinanceInvoicesById"];
    delete: operations["deleteFinanceInvoicesById"];
    patch: operations["patchFinanceInvoicesById"];
  };
  "/finance/invoices/{id}/pdf": {
    get: operations["getFinanceInvoicesByIdPdf"];
  };
  "/finance/invoices/{parentId}/payments": {
    get: operations["getFinanceInvoicesByParentIdPayments"];
    post: operations["postFinanceInvoicesByParentIdPayments"];
  };
  "/finance/invoices/{parentId}/payments/{id}": {
    get: operations["getFinanceInvoicesByParentIdPaymentsById"];
    put: operations["putFinanceInvoicesByParentIdPaymentsById"];
    delete: operations["deleteFinanceInvoicesByParentIdPaymentsById"];
    patch: operations["patchFinanceInvoicesByParentIdPaymentsById"];
  };
  "/finance/invoices/count": {
    get: operations["getFinanceInvoicesCount"];
  };
  "/finance/invoiceTemplates": {
    get: operations["getFinanceInvoiceTemplates"];
    post: operations["postFinanceInvoiceTemplates"];
  };
  "/finance/invoiceTemplates/{id}": {
    get: operations["getFinanceInvoiceTemplatesById"];
    put: operations["putFinanceInvoiceTemplatesById"];
    delete: operations["deleteFinanceInvoiceTemplatesById"];
    patch: operations["patchFinanceInvoiceTemplatesById"];
  };
  "/finance/invoiceTemplates/{id}/usages": {
    get: operations["getFinanceInvoiceTemplatesByIdUsages"];
  };
  "/finance/invoiceTemplates/{id}/usages/list": {
    get: operations["getFinanceInvoiceTemplatesByIdUsagesList"];
  };
  "/finance/invoiceTemplates/count": {
    get: operations["getFinanceInvoiceTemplatesCount"];
  };
  "/finance/invoiceTemplateSetups": {
    get: operations["getFinanceInvoiceTemplateSetups"];
  };
  "/finance/invoiceTemplateSetups/{id}": {
    get: operations["getFinanceInvoiceTemplateSetupsById"];
  };
  "/finance/invoiceTemplateSetups/count": {
    get: operations["getFinanceInvoiceTemplateSetupsCount"];
  };
  "/finance/taxCodes": {
    get: operations["getFinanceTaxCodes"];
    post: operations["postFinanceTaxCodes"];
  };
  "/finance/taxCodes/{grandparentId}/expenseTypeExemptions/{parentId}/taxableExpenseTypeLevels": {
    get: operations["getFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevels"];
    post: operations["postFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevels"];
  };
  "/finance/taxCodes/{grandparentId}/expenseTypeExemptions/{parentId}/taxableExpenseTypeLevels/{id}": {
    get: operations["getFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById"];
    put: operations["putFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById"];
    delete: operations["deleteFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById"];
    patch: operations["patchFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById"];
  };
  "/finance/taxCodes/{grandparentId}/expenseTypeExemptions/{parentId}/taxableExpenseTypeLevels/count": {
    get: operations["getFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsCount"];
  };
  "/finance/taxCodes/{grandparentId}/productTypeExemptions/{parentId}/taxableProductTypeLevels": {
    get: operations["getFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevels"];
    post: operations["postFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevels"];
  };
  "/finance/taxCodes/{grandparentId}/productTypeExemptions/{parentId}/taxableProductTypeLevels/{id}": {
    get: operations["getFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById"];
    put: operations["putFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById"];
    delete: operations["deleteFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById"];
    patch: operations["patchFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById"];
  };
  "/finance/taxCodes/{grandparentId}/productTypeExemptions/{parentId}/taxableProductTypeLevels/count": {
    get: operations["getFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsCount"];
  };
  "/finance/taxCodes/{grandparentId}/taxCodeXRefs/{parentId}/taxableXRefLevels": {
    get: operations["getFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevels"];
    post: operations["postFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevels"];
  };
  "/finance/taxCodes/{grandparentId}/taxCodeXRefs/{parentId}/taxableXRefLevels/{id}": {
    get: operations["getFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById"];
    put: operations["putFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById"];
    delete: operations["deleteFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById"];
    patch: operations["patchFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById"];
  };
  "/finance/taxCodes/{grandparentId}/taxCodeXRefs/{parentId}/taxableXRefLevels/count": {
    get: operations["getFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsCount"];
  };
  "/finance/taxCodes/{grandparentId}/workRoleExemptions/{parentId}/taxableWorkRoleLevels": {
    get: operations["getFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevels"];
    post: operations["postFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevels"];
  };
  "/finance/taxCodes/{grandparentId}/workRoleExemptions/{parentId}/taxableWorkRoleLevels/{id}": {
    get: operations["getFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById"];
    put: operations["putFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById"];
    delete: operations["deleteFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById"];
    patch: operations["patchFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById"];
  };
  "/finance/taxCodes/{grandparentId}/workRoleExemptions/{parentId}/taxableWorkRoleLevels/count": {
    get: operations["getFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsCount"];
  };
  "/finance/taxCodes/{id}": {
    get: operations["getFinanceTaxCodesById"];
    put: operations["putFinanceTaxCodesById"];
    delete: operations["deleteFinanceTaxCodesById"];
    patch: operations["patchFinanceTaxCodesById"];
  };
  "/finance/taxCodes/{id}/copy": {
    post: operations["postFinanceTaxCodesByIdCopy"];
  };
  "/finance/taxCodes/{id}/info": {
    get: operations["getFinanceTaxCodesByIdInfo"];
  };
  "/finance/taxCodes/{id}/usages": {
    get: operations["getFinanceTaxCodesByIdUsages"];
  };
  "/finance/taxCodes/{id}/usages/list": {
    get: operations["getFinanceTaxCodesByIdUsagesList"];
  };
  "/finance/taxCodes/{parentId}/expenseTypeExemptions": {
    get: operations["getFinanceTaxCodesByParentIdExpenseTypeExemptions"];
    post: operations["postFinanceTaxCodesByParentIdExpenseTypeExemptions"];
  };
  "/finance/taxCodes/{parentId}/expenseTypeExemptions/{id}": {
    get: operations["getFinanceTaxCodesByParentIdExpenseTypeExemptionsById"];
    put: operations["putFinanceTaxCodesByParentIdExpenseTypeExemptionsById"];
    delete: operations["deleteFinanceTaxCodesByParentIdExpenseTypeExemptionsById"];
    patch: operations["patchFinanceTaxCodesByParentIdExpenseTypeExemptionsById"];
  };
  "/finance/taxCodes/{parentId}/expenseTypeExemptions/count": {
    get: operations["getFinanceTaxCodesByParentIdExpenseTypeExemptionsCount"];
  };
  "/finance/taxCodes/{parentId}/productTypeExemptions": {
    get: operations["getFinanceTaxCodesByParentIdProductTypeExemptions"];
    post: operations["postFinanceTaxCodesByParentIdProductTypeExemptions"];
  };
  "/finance/taxCodes/{parentId}/productTypeExemptions/{id}": {
    get: operations["getFinanceTaxCodesByParentIdProductTypeExemptionsById"];
    put: operations["putFinanceTaxCodesByParentIdProductTypeExemptionsById"];
    delete: operations["deleteFinanceTaxCodesByParentIdProductTypeExemptionsById"];
    patch: operations["patchFinanceTaxCodesByParentIdProductTypeExemptionsById"];
  };
  "/finance/taxCodes/{parentId}/productTypeExemptions/count": {
    get: operations["getFinanceTaxCodesByParentIdProductTypeExemptionsCount"];
  };
  "/finance/taxCodes/{parentId}/taxCodeLevels": {
    get: operations["getFinanceTaxCodesByParentIdTaxCodeLevels"];
    post: operations["postFinanceTaxCodesByParentIdTaxCodeLevels"];
  };
  "/finance/taxCodes/{parentId}/taxCodeLevels/{id}": {
    get: operations["getFinanceTaxCodesByParentIdTaxCodeLevelsById"];
    put: operations["putFinanceTaxCodesByParentIdTaxCodeLevelsById"];
    delete: operations["deleteFinanceTaxCodesByParentIdTaxCodeLevelsById"];
    patch: operations["patchFinanceTaxCodesByParentIdTaxCodeLevelsById"];
  };
  "/finance/taxCodes/{parentId}/taxCodeLevels/count": {
    get: operations["getFinanceTaxCodesByParentIdTaxCodeLevelsCount"];
  };
  "/finance/taxCodes/{parentId}/taxCodeXRefs": {
    get: operations["getFinanceTaxCodesByParentIdTaxCodeXRefs"];
    post: operations["postFinanceTaxCodesByParentIdTaxCodeXRefs"];
  };
  "/finance/taxCodes/{parentId}/taxCodeXRefs/{id}": {
    get: operations["getFinanceTaxCodesByParentIdTaxCodeXRefsById"];
    put: operations["putFinanceTaxCodesByParentIdTaxCodeXRefsById"];
    delete: operations["deleteFinanceTaxCodesByParentIdTaxCodeXRefsById"];
    patch: operations["patchFinanceTaxCodesByParentIdTaxCodeXRefsById"];
  };
  "/finance/taxCodes/{parentId}/taxCodeXRefs/count": {
    get: operations["getFinanceTaxCodesByParentIdTaxCodeXRefsCount"];
  };
  "/finance/taxCodes/{parentId}/workRoleExemptions": {
    get: operations["getFinanceTaxCodesByParentIdWorkRoleExemptions"];
    post: operations["postFinanceTaxCodesByParentIdWorkRoleExemptions"];
  };
  "/finance/taxCodes/{parentId}/workRoleExemptions/{id}": {
    get: operations["getFinanceTaxCodesByParentIdWorkRoleExemptionsById"];
    put: operations["putFinanceTaxCodesByParentIdWorkRoleExemptionsById"];
    delete: operations["deleteFinanceTaxCodesByParentIdWorkRoleExemptionsById"];
    patch: operations["patchFinanceTaxCodesByParentIdWorkRoleExemptionsById"];
  };
  "/finance/taxCodes/{parentId}/workRoleExemptions/count": {
    get: operations["getFinanceTaxCodesByParentIdWorkRoleExemptionsCount"];
  };
  "/finance/taxCodes/count": {
    get: operations["getFinanceTaxCodesCount"];
  };
  "/finance/taxCodes/info": {
    get: operations["getFinanceTaxCodesInfo"];
  };
  "/finance/taxCodes/info/count": {
    get: operations["getFinanceTaxCodesInfoCount"];
  };
  "/finance/taxIntegrations": {
    get: operations["getFinanceTaxIntegrations"];
  };
  "/finance/taxIntegrations/{id}": {
    get: operations["getFinanceTaxIntegrationsById"];
    put: operations["putFinanceTaxIntegrationsById"];
    patch: operations["patchFinanceTaxIntegrationsById"];
  };
  "/finance/taxIntegrations/count": {
    get: operations["getFinanceTaxIntegrationsCount"];
  };
  "/marketing/campaigns": {
    get: operations["getMarketingCampaigns"];
    post: operations["postMarketingCampaigns"];
  };
  "/marketing/campaigns/{id}": {
    get: operations["getMarketingCampaignsById"];
    put: operations["putMarketingCampaignsById"];
    delete: operations["deleteMarketingCampaignsById"];
    patch: operations["patchMarketingCampaignsById"];
  };
  "/marketing/campaigns/{id}/activities": {
    get: operations["getMarketingCampaignsByIdActivities"];
  };
  "/marketing/campaigns/{id}/activities/count": {
    get: operations["getMarketingCampaignsByIdActivitiesCount"];
  };
  "/marketing/campaigns/{id}/opportunities": {
    get: operations["getMarketingCampaignsByIdOpportunities"];
  };
  "/marketing/campaigns/{id}/opportunities/count": {
    get: operations["getMarketingCampaignsByIdOpportunitiesCount"];
  };
  "/marketing/campaigns/{parentId}/audits": {
    get: operations["getMarketingCampaignsByParentIdAudits"];
    post: operations["postMarketingCampaignsByParentIdAudits"];
  };
  "/marketing/campaigns/{parentId}/audits/{id}": {
    get: operations["getMarketingCampaignsByParentIdAuditsById"];
    put: operations["putMarketingCampaignsByParentIdAuditsById"];
    delete: operations["deleteMarketingCampaignsByParentIdAuditsById"];
    patch: operations["patchMarketingCampaignsByParentIdAuditsById"];
  };
  "/marketing/campaigns/{parentId}/audits/count": {
    get: operations["getMarketingCampaignsByParentIdAuditsCount"];
  };
  "/marketing/campaigns/{parentId}/emailsOpened": {
    get: operations["getMarketingCampaignsByParentIdEmailsOpened"];
    post: operations["postMarketingCampaignsByParentIdEmailsOpened"];
  };
  "/marketing/campaigns/{parentId}/emailsOpened/{id}": {
    get: operations["getMarketingCampaignsByParentIdEmailsOpenedById"];
    put: operations["putMarketingCampaignsByParentIdEmailsOpenedById"];
    delete: operations["deleteMarketingCampaignsByParentIdEmailsOpenedById"];
    patch: operations["patchMarketingCampaignsByParentIdEmailsOpenedById"];
  };
  "/marketing/campaigns/{parentId}/emailsOpened/count": {
    get: operations["getMarketingCampaignsByParentIdEmailsOpenedCount"];
  };
  "/marketing/campaigns/{parentId}/formsSubmitted": {
    get: operations["getMarketingCampaignsByParentIdFormsSubmitted"];
    post: operations["postMarketingCampaignsByParentIdFormsSubmitted"];
  };
  "/marketing/campaigns/{parentId}/formsSubmitted/{id}": {
    get: operations["getMarketingCampaignsByParentIdFormsSubmittedById"];
    put: operations["putMarketingCampaignsByParentIdFormsSubmittedById"];
    delete: operations["deleteMarketingCampaignsByParentIdFormsSubmittedById"];
    patch: operations["patchMarketingCampaignsByParentIdFormsSubmittedById"];
  };
  "/marketing/campaigns/{parentId}/formsSubmitted/count": {
    get: operations["getMarketingCampaignsByParentIdFormsSubmittedCount"];
  };
  "/marketing/campaigns/{parentId}/linksClicked": {
    get: operations["getMarketingCampaignsByParentIdLinksClicked"];
    post: operations["postMarketingCampaignsByParentIdLinksClicked"];
  };
  "/marketing/campaigns/{parentId}/linksClicked/{id}": {
    get: operations["getMarketingCampaignsByParentIdLinksClickedById"];
    put: operations["putMarketingCampaignsByParentIdLinksClickedById"];
    delete: operations["deleteMarketingCampaignsByParentIdLinksClickedById"];
    patch: operations["patchMarketingCampaignsByParentIdLinksClickedById"];
  };
  "/marketing/campaigns/{parentId}/linksClicked/count": {
    get: operations["getMarketingCampaignsByParentIdLinksClickedCount"];
  };
  "/marketing/campaigns/count": {
    get: operations["getMarketingCampaignsCount"];
  };
  "/marketing/campaigns/statuses": {
    get: operations["getMarketingCampaignsStatuses"];
    post: operations["postMarketingCampaignsStatuses"];
  };
  "/marketing/campaigns/statuses/{id}": {
    get: operations["getMarketingCampaignsStatusesById"];
    put: operations["putMarketingCampaignsStatusesById"];
    delete: operations["deleteMarketingCampaignsStatusesById"];
    patch: operations["patchMarketingCampaignsStatusesById"];
  };
  "/marketing/campaigns/statuses/count": {
    get: operations["getMarketingCampaignsStatusesCount"];
  };
  "/marketing/campaigns/subTypes": {
    get: operations["getMarketingCampaignsSubTypes"];
    post: operations["postMarketingCampaignsSubTypes"];
  };
  "/marketing/campaigns/subTypes/{id}": {
    get: operations["getMarketingCampaignsSubTypesById"];
    put: operations["putMarketingCampaignsSubTypesById"];
    delete: operations["deleteMarketingCampaignsSubTypesById"];
    patch: operations["patchMarketingCampaignsSubTypesById"];
  };
  "/marketing/campaigns/subTypes/count": {
    get: operations["getMarketingCampaignsSubTypesCount"];
  };
  "/marketing/campaigns/types": {
    get: operations["getMarketingCampaignsTypes"];
    post: operations["postMarketingCampaignsTypes"];
  };
  "/marketing/campaigns/types/{id}": {
    get: operations["getMarketingCampaignsTypesById"];
    put: operations["putMarketingCampaignsTypesById"];
    delete: operations["deleteMarketingCampaignsTypesById"];
    patch: operations["patchMarketingCampaignsTypesById"];
  };
  "/marketing/campaigns/types/{id}/info": {
    get: operations["getMarketingCampaignsTypesByIdInfo"];
  };
  "/marketing/campaigns/types/{parentId}/subTypes": {
    get: operations["getMarketingCampaignsTypesByParentIdSubTypes"];
  };
  "/marketing/campaigns/types/{parentId}/subTypes/{id}": {
    get: operations["getMarketingCampaignsTypesByParentIdSubTypesById"];
  };
  "/marketing/campaigns/types/{parentId}/subTypes/count": {
    get: operations["getMarketingCampaignsTypesByParentIdSubTypesCount"];
  };
  "/marketing/campaigns/types/count": {
    get: operations["getMarketingCampaignsTypesCount"];
  };
  "/marketing/campaigns/types/info": {
    get: operations["getMarketingCampaignsTypesInfo"];
  };
  "/marketing/campaigns/types/info/count": {
    get: operations["getMarketingCampaignsTypesInfoCount"];
  };
  "/marketing/groups": {
    get: operations["getMarketingGroups"];
    post: operations["postMarketingGroups"];
  };
  "/marketing/groups/{id}": {
    get: operations["getMarketingGroupsById"];
    put: operations["putMarketingGroupsById"];
    delete: operations["deleteMarketingGroupsById"];
    patch: operations["patchMarketingGroupsById"];
  };
  "/marketing/groups/{id}/usages": {
    get: operations["getMarketingGroupsByIdUsages"];
  };
  "/marketing/groups/{id}/usages/list": {
    get: operations["getMarketingGroupsByIdUsagesList"];
  };
  "/marketing/groups/{parentId}/companies": {
    get: operations["getMarketingGroupsByParentIdCompanies"];
    post: operations["postMarketingGroupsByParentIdCompanies"];
  };
  "/marketing/groups/{parentId}/companies/{id}": {
    get: operations["getMarketingGroupsByParentIdCompaniesById"];
    put: operations["putMarketingGroupsByParentIdCompaniesById"];
    delete: operations["deleteMarketingGroupsByParentIdCompaniesById"];
    patch: operations["patchMarketingGroupsByParentIdCompaniesById"];
  };
  "/marketing/groups/{parentId}/companies/count": {
    get: operations["getMarketingGroupsByParentIdCompaniesCount"];
  };
  "/marketing/groups/{parentId}/contacts": {
    get: operations["getMarketingGroupsByParentIdContacts"];
    post: operations["postMarketingGroupsByParentIdContacts"];
  };
  "/marketing/groups/{parentId}/contacts/{id}": {
    get: operations["getMarketingGroupsByParentIdContactsById"];
    put: operations["putMarketingGroupsByParentIdContactsById"];
    delete: operations["deleteMarketingGroupsByParentIdContactsById"];
    patch: operations["patchMarketingGroupsByParentIdContactsById"];
  };
  "/marketing/groups/{parentId}/contacts/count": {
    get: operations["getMarketingGroupsByParentIdContactsCount"];
  };
  "/marketing/groups/count": {
    get: operations["getMarketingGroupsCount"];
  };
  "/procurement/adjustments": {
    get: operations["getProcurementAdjustments"];
    post: operations["postProcurementAdjustments"];
  };
  "/procurement/adjustments/{id}": {
    get: operations["getProcurementAdjustmentsById"];
    put: operations["putProcurementAdjustmentsById"];
    delete: operations["deleteProcurementAdjustmentsById"];
    patch: operations["patchProcurementAdjustmentsById"];
  };
  "/procurement/adjustments/{parentId}/details": {
    get: operations["getProcurementAdjustmentsByParentIdDetails"];
    post: operations["postProcurementAdjustmentsByParentIdDetails"];
  };
  "/procurement/adjustments/{parentId}/details/{id}": {
    get: operations["getProcurementAdjustmentsByParentIdDetailsById"];
    delete: operations["deleteProcurementAdjustmentsByParentIdDetailsById"];
  };
  "/procurement/adjustments/{parentId}/details/count": {
    get: operations["getProcurementAdjustmentsByParentIdDetailsCount"];
  };
  "/procurement/adjustments/count": {
    get: operations["getProcurementAdjustmentsCount"];
  };
  "/procurement/adjustments/types": {
    get: operations["getProcurementAdjustmentsTypes"];
    post: operations["postProcurementAdjustmentsTypes"];
  };
  "/procurement/adjustments/types/{id}": {
    get: operations["getProcurementAdjustmentsTypesById"];
    put: operations["putProcurementAdjustmentsTypesById"];
    delete: operations["deleteProcurementAdjustmentsTypesById"];
    patch: operations["patchProcurementAdjustmentsTypesById"];
  };
  "/procurement/adjustments/types/{id}/info": {
    get: operations["getProcurementAdjustmentsTypesByIdInfo"];
  };
  "/procurement/adjustments/types/{id}/usages": {
    get: operations["getProcurementAdjustmentsTypesByIdUsages"];
  };
  "/procurement/adjustments/types/{id}/usages/list": {
    get: operations["getProcurementAdjustmentsTypesByIdUsagesList"];
  };
  "/procurement/adjustments/types/count": {
    get: operations["getProcurementAdjustmentsTypesCount"];
  };
  "/procurement/adjustments/types/info": {
    get: operations["getProcurementAdjustmentsTypesInfo"];
  };
  "/procurement/adjustments/types/info/count": {
    get: operations["getProcurementAdjustmentsTypesInfoCount"];
  };
  "/procurement/catalog": {
    get: operations["getProcurementCatalog"];
    post: operations["postProcurementCatalog"];
  };
  "/procurement/catalog/{catalogItemIdentifier}/quantityOnHand": {
    get: operations["getProcurementCatalogByCatalogItemIdentifierQuantityOnHand"];
  };
  "/procurement/catalog/{id}": {
    get: operations["getProcurementCatalogById"];
    put: operations["putProcurementCatalogById"];
    delete: operations["deleteProcurementCatalogById"];
    patch: operations["patchProcurementCatalogById"];
  };
  "/procurement/catalog/{id}/info": {
    get: operations["getProcurementCatalogByIdInfo"];
  };
  "/procurement/catalog/{id}/pricing": {
    post: operations["postProcurementCatalogByIdPricing"];
  };
  "/procurement/catalog/{parentId}/components": {
    get: operations["getProcurementCatalogByParentIdComponents"];
    post: operations["postProcurementCatalogByParentIdComponents"];
  };
  "/procurement/catalog/{parentId}/components/{id}": {
    get: operations["getProcurementCatalogByParentIdComponentsById"];
    put: operations["putProcurementCatalogByParentIdComponentsById"];
    delete: operations["deleteProcurementCatalogByParentIdComponentsById"];
    patch: operations["patchProcurementCatalogByParentIdComponentsById"];
  };
  "/procurement/catalog/{parentId}/components/count": {
    get: operations["getProcurementCatalogByParentIdComponentsCount"];
  };
  "/procurement/catalog/{parentId}/inventory": {
    get: operations["getProcurementCatalogByParentIdInventory"];
  };
  "/procurement/catalog/{parentId}/inventory/{id}": {
    get: operations["getProcurementCatalogByParentIdInventoryById"];
  };
  "/procurement/catalog/{parentId}/inventory/count": {
    get: operations["getProcurementCatalogByParentIdInventoryCount"];
  };
  "/procurement/catalog/{parentId}/minimumStockByWarehouse": {
    get: operations["getProcurementCatalogByParentIdMinimumStockByWarehouse"];
    post: operations["postProcurementCatalogByParentIdMinimumStockByWarehouse"];
  };
  "/procurement/catalog/{parentId}/minimumStockByWarehouse/{id}": {
    get: operations["getProcurementCatalogByParentIdMinimumStockByWarehouseById"];
    put: operations["putProcurementCatalogByParentIdMinimumStockByWarehouseById"];
    delete: operations["deleteProcurementCatalogByParentIdMinimumStockByWarehouseById"];
    patch: operations["patchProcurementCatalogByParentIdMinimumStockByWarehouseById"];
  };
  "/procurement/catalog/{parentId}/minimumStockByWarehouse/count": {
    get: operations["getProcurementCatalogByParentIdMinimumStockByWarehouseCount"];
  };
  "/procurement/catalog/count": {
    get: operations["getProcurementCatalogCount"];
  };
  "/procurement/catalog/info": {
    get: operations["getProcurementCatalogInfo"];
  };
  "/procurement/catalog/info/count": {
    get: operations["getProcurementCatalogInfoCount"];
  };
  "/procurement/categories": {
    get: operations["getProcurementCategories"];
    post: operations["postProcurementCategories"];
  };
  "/procurement/categories/{id}": {
    get: operations["getProcurementCategoriesById"];
    put: operations["putProcurementCategoriesById"];
    delete: operations["deleteProcurementCategoriesById"];
    patch: operations["patchProcurementCategoriesById"];
  };
  "/procurement/categories/{id}/info": {
    get: operations["getProcurementCategoriesByIdInfo"];
  };
  "/procurement/categories/{parentId}/subcategories/": {
    get: operations["getProcurementCategoriesByParentIdSubcategories"];
    post: operations["postProcurementCategoriesByParentIdSubcategories"];
  };
  "/procurement/categories/{parentId}/subcategories/{id}": {
    get: operations["getProcurementCategoriesByParentIdSubcategoriesById"];
    put: operations["putProcurementCategoriesByParentIdSubcategoriesById"];
    delete: operations["deleteProcurementCategoriesByParentIdSubcategoriesById"];
    patch: operations["patchProcurementCategoriesByParentIdSubcategoriesById"];
  };
  "/procurement/categories/{parentId}/subcategories/{id}/info": {
    get: operations["getProcurementCategoriesByParentIdSubcategoriesByIdInfo"];
  };
  "/procurement/categories/{parentId}/subcategories/count": {
    get: operations["getProcurementCategoriesByParentIdSubcategoriesCount"];
  };
  "/procurement/categories/{parentId}/subcategories/info": {
    get: operations["getProcurementCategoriesByParentIdSubcategoriesInfo"];
  };
  "/procurement/categories/{parentId}/subcategories/info/count": {
    get: operations["getProcurementCategoriesByParentIdSubcategoriesInfoCount"];
  };
  "/procurement/categories/count": {
    get: operations["getProcurementCategoriesCount"];
  };
  "/procurement/categories/info": {
    get: operations["getProcurementCategoriesInfo"];
  };
  "/procurement/categories/info/count": {
    get: operations["getProcurementCategoriesInfoCount"];
  };
  "/procurement/manufacturers": {
    get: operations["getProcurementManufacturers"];
    post: operations["postProcurementManufacturers"];
  };
  "/procurement/manufacturers/{id}": {
    get: operations["getProcurementManufacturersById"];
    put: operations["putProcurementManufacturersById"];
    delete: operations["deleteProcurementManufacturersById"];
    patch: operations["patchProcurementManufacturersById"];
  };
  "/procurement/manufacturers/{id}/info": {
    get: operations["getProcurementManufacturersByIdInfo"];
  };
  "/procurement/manufacturers/count": {
    get: operations["getProcurementManufacturersCount"];
  };
  "/procurement/manufacturers/count/info": {
    get: operations["getProcurementManufacturersCountInfo"];
  };
  "/procurement/manufacturers/info": {
    get: operations["getProcurementManufacturersInfo"];
  };
  "/procurement/onhandserialnumbers": {
    get: operations["getProcurementOnhandserialnumbers"];
  };
  "/procurement/onhandserialnumbers/{id}": {
    get: operations["getProcurementOnhandserialnumbersById"];
  };
  "/procurement/onhandserialnumbers/count": {
    get: operations["getProcurementOnhandserialnumbersCount"];
  };
  "/procurement/pricingschedules": {
    get: operations["getProcurementPricingschedules"];
    post: operations["postProcurementPricingschedules"];
  };
  "/procurement/pricingschedules/{grandparentId}/details/{parentId}/breaks": {
    get: operations["getProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaks"];
    post: operations["postProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaks"];
  };
  "/procurement/pricingschedules/{grandparentId}/details/{parentId}/breaks/{id}": {
    get: operations["getProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById"];
    put: operations["putProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById"];
    delete: operations["deleteProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById"];
    patch: operations["patchProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById"];
  };
  "/procurement/pricingschedules/{grandparentId}/details/{parentId}/breaks/count": {
    get: operations["getProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksCount"];
  };
  "/procurement/pricingschedules/{id}": {
    get: operations["getProcurementPricingschedulesById"];
    put: operations["putProcurementPricingschedulesById"];
    delete: operations["deleteProcurementPricingschedulesById"];
    patch: operations["patchProcurementPricingschedulesById"];
  };
  "/procurement/pricingschedules/{parentId}/details": {
    get: operations["getProcurementPricingschedulesByParentIdDetails"];
    post: operations["postProcurementPricingschedulesByParentIdDetails"];
  };
  "/procurement/pricingschedules/{parentId}/details/{id}": {
    get: operations["getProcurementPricingschedulesByParentIdDetailsById"];
    put: operations["putProcurementPricingschedulesByParentIdDetailsById"];
    delete: operations["deleteProcurementPricingschedulesByParentIdDetailsById"];
    patch: operations["patchProcurementPricingschedulesByParentIdDetailsById"];
  };
  "/procurement/pricingschedules/{parentId}/details/count": {
    get: operations["getProcurementPricingschedulesByParentIdDetailsCount"];
  };
  "/procurement/pricingschedules/count": {
    get: operations["getProcurementPricingschedulesCount"];
  };
  "/procurement/products": {
    get: operations["getProcurementProducts"];
    post: operations["postProcurementProducts"];
  };
  "/procurement/products/{id}": {
    get: operations["getProcurementProductsById"];
    put: operations["putProcurementProductsById"];
    delete: operations["deleteProcurementProductsById"];
    patch: operations["patchProcurementProductsById"];
  };
  "/procurement/products/{id}/detach": {
    post: operations["postProcurementProductsByIdDetach"];
  };
  "/procurement/products/{parentId}/components": {
    get: operations["getProcurementProductsByParentIdComponents"];
    post: operations["postProcurementProductsByParentIdComponents"];
  };
  "/procurement/products/{parentId}/components/{id}": {
    get: operations["getProcurementProductsByParentIdComponentsById"];
    put: operations["putProcurementProductsByParentIdComponentsById"];
    delete: operations["deleteProcurementProductsByParentIdComponentsById"];
    patch: operations["patchProcurementProductsByParentIdComponentsById"];
  };
  "/procurement/products/{parentId}/components/count": {
    get: operations["getProcurementProductsByParentIdComponentsCount"];
  };
  "/procurement/products/{parentId}/pickingShippingDetails": {
    get: operations["getProcurementProductsByParentIdPickingShippingDetails"];
    post: operations["postProcurementProductsByParentIdPickingShippingDetails"];
  };
  "/procurement/products/{parentId}/pickingShippingDetails/{id}": {
    get: operations["getProcurementProductsByParentIdPickingShippingDetailsById"];
    put: operations["putProcurementProductsByParentIdPickingShippingDetailsById"];
    delete: operations["deleteProcurementProductsByParentIdPickingShippingDetailsById"];
    patch: operations["patchProcurementProductsByParentIdPickingShippingDetailsById"];
  };
  "/procurement/products/{parentId}/pickingShippingDetails/count": {
    get: operations["getProcurementProductsByParentIdPickingShippingDetailsCount"];
  };
  "/procurement/products/count": {
    get: operations["getProcurementProductsCount"];
  };
  "/procurement/purchaseorders": {
    get: operations["getProcurementPurchaseorders"];
    post: operations["postProcurementPurchaseorders"];
  };
  "/procurement/purchaseorders/{id}": {
    get: operations["getProcurementPurchaseordersById"];
    put: operations["putProcurementPurchaseordersById"];
    delete: operations["deleteProcurementPurchaseordersById"];
    patch: operations["patchProcurementPurchaseordersById"];
  };
  "/procurement/purchaseorders/{parentId}/lineitems": {
    get: operations["getProcurementPurchaseordersByParentIdLineitems"];
    post: operations["postProcurementPurchaseordersByParentIdLineitems"];
  };
  "/procurement/purchaseorders/{parentId}/lineitems/{id}": {
    get: operations["getProcurementPurchaseordersByParentIdLineitemsById"];
    put: operations["putProcurementPurchaseordersByParentIdLineitemsById"];
    delete: operations["deleteProcurementPurchaseordersByParentIdLineitemsById"];
    patch: operations["patchProcurementPurchaseordersByParentIdLineitemsById"];
  };
  "/procurement/purchaseorders/{parentId}/lineitems/bulk": {
    put: operations["putProcurementPurchaseordersByParentIdLineitemsBulk"];
    post: operations["postProcurementPurchaseordersByParentIdLineitemsBulk"];
    delete: operations["deleteProcurementPurchaseordersByParentIdLineitemsBulk"];
  };
  "/procurement/purchaseorders/{parentId}/lineitems/count": {
    get: operations["getProcurementPurchaseordersByParentIdLineitemsCount"];
  };
  "/procurement/purchaseorders/count": {
    get: operations["getProcurementPurchaseordersCount"];
  };
  "/procurement/purchaseorderstatuses": {
    get: operations["getProcurementPurchaseorderstatuses"];
    post: operations["postProcurementPurchaseorderstatuses"];
  };
  "/procurement/purchaseorderstatuses/{id}": {
    get: operations["getProcurementPurchaseorderstatusesById"];
    put: operations["putProcurementPurchaseorderstatusesById"];
    delete: operations["deleteProcurementPurchaseorderstatusesById"];
    patch: operations["patchProcurementPurchaseorderstatusesById"];
  };
  "/procurement/purchaseorderstatuses/{id}/usages": {
    get: operations["getProcurementPurchaseorderstatusesByIdUsages"];
  };
  "/procurement/purchaseorderstatuses/{id}/usages/list": {
    get: operations["getProcurementPurchaseorderstatusesByIdUsagesList"];
  };
  "/procurement/purchaseorderstatuses/{parentId}/emailtemplates/": {
    get: operations["getProcurementPurchaseorderstatusesByParentIdEmailtemplates"];
    post: operations["postProcurementPurchaseorderstatusesByParentIdEmailtemplates"];
  };
  "/procurement/purchaseorderstatuses/{parentId}/emailtemplates/{id}": {
    get: operations["getProcurementPurchaseorderstatusesByParentIdEmailtemplatesById"];
    put: operations["putProcurementPurchaseorderstatusesByParentIdEmailtemplatesById"];
    delete: operations["deleteProcurementPurchaseorderstatusesByParentIdEmailtemplatesById"];
    patch: operations["patchProcurementPurchaseorderstatusesByParentIdEmailtemplatesById"];
  };
  "/procurement/purchaseorderstatuses/{parentId}/emailtemplates/count": {
    get: operations["getProcurementPurchaseorderstatusesByParentIdEmailtemplatesCount"];
  };
  "/procurement/purchaseorderstatuses/{parentId}/notifications": {
    get: operations["getProcurementPurchaseorderstatusesByParentIdNotifications"];
    post: operations["postProcurementPurchaseorderstatusesByParentIdNotifications"];
  };
  "/procurement/purchaseorderstatuses/{parentId}/notifications/{id}": {
    get: operations["getProcurementPurchaseorderstatusesByParentIdNotificationsById"];
    put: operations["putProcurementPurchaseorderstatusesByParentIdNotificationsById"];
    delete: operations["deleteProcurementPurchaseorderstatusesByParentIdNotificationsById"];
    patch: operations["patchProcurementPurchaseorderstatusesByParentIdNotificationsById"];
  };
  "/procurement/purchaseorderstatuses/{parentId}/notifications/count": {
    get: operations["getProcurementPurchaseorderstatusesByParentIdNotificationsCount"];
  };
  "/procurement/purchaseorderstatuses/count": {
    get: operations["getProcurementPurchaseorderstatusesCount"];
  };
  "/procurement/purchasingDemands": {
    post: operations["postProcurementPurchasingDemands"];
  };
  "/procurement/rmaActions": {
    get: operations["getProcurementRmaActions"];
    post: operations["postProcurementRmaActions"];
  };
  "/procurement/rmaActions/{id}": {
    get: operations["getProcurementRmaActionsById"];
    put: operations["putProcurementRmaActionsById"];
    delete: operations["deleteProcurementRmaActionsById"];
    patch: operations["patchProcurementRmaActionsById"];
  };
  "/procurement/rmaActions/{id}/info": {
    get: operations["getProcurementRmaActionsByIdInfo"];
  };
  "/procurement/rmaActions/count": {
    get: operations["getProcurementRmaActionsCount"];
  };
  "/procurement/rmaActions/info": {
    get: operations["getProcurementRmaActionsInfo"];
  };
  "/procurement/rmaActions/info/count": {
    get: operations["getProcurementRmaActionsInfoCount"];
  };
  "/procurement/RMADispositions": {
    get: operations["getProcurementRMADispositions"];
    post: operations["postProcurementRMADispositions"];
  };
  "/procurement/RMADispositions/{id}": {
    get: operations["getProcurementRMADispositionsById"];
    put: operations["putProcurementRMADispositionsById"];
    delete: operations["deleteProcurementRMADispositionsById"];
    patch: operations["patchProcurementRMADispositionsById"];
  };
  "/procurement/RMADispositions/{id}/info": {
    get: operations["getProcurementRMADispositionsByIdInfo"];
  };
  "/procurement/RMADispositions/count": {
    get: operations["getProcurementRMADispositionsCount"];
  };
  "/procurement/RMADispositions/info": {
    get: operations["getProcurementRMADispositionsInfo"];
  };
  "/procurement/RMADispositions/info/count": {
    get: operations["getProcurementRMADispositionsInfoCount"];
  };
  "/procurement/rmaStatuses": {
    get: operations["getProcurementRmaStatuses"];
    post: operations["postProcurementRmaStatuses"];
  };
  "/procurement/rmaStatuses/{id}": {
    get: operations["getProcurementRmaStatusesById"];
    put: operations["putProcurementRmaStatusesById"];
    delete: operations["deleteProcurementRmaStatusesById"];
    patch: operations["patchProcurementRmaStatusesById"];
  };
  "/procurement/rmaStatuses/{id}/info": {
    get: operations["getProcurementRmaStatusesByIdInfo"];
  };
  "/procurement/rmaStatuses/{id}/usages": {
    get: operations["getProcurementRmaStatusesByIdUsages"];
  };
  "/procurement/rmaStatuses/{id}/usages/list": {
    get: operations["getProcurementRmaStatusesByIdUsagesList"];
  };
  "/procurement/rmaStatuses/{parentId}/emailtemplates/": {
    post: operations["postProcurementRmaStatusesByParentIdEmailtemplates"];
  };
  "/procurement/rmaStatuses/{parentId}/emailTemplates/": {
    get: operations["getProcurementRmaStatusesByParentIdEmailTemplates"];
  };
  "/procurement/rmaStatuses/{parentId}/emailtemplates/{id}": {
    get: operations["getProcurementRmaStatusesByParentIdEmailtemplatesById"];
    put: operations["putProcurementRmaStatusesByParentIdEmailtemplatesById"];
    delete: operations["deleteProcurementRmaStatusesByParentIdEmailtemplatesById"];
    patch: operations["patchProcurementRmaStatusesByParentIdEmailtemplatesById"];
  };
  "/procurement/rmaStatuses/{parentId}/emailtemplates/count": {
    get: operations["getProcurementRmaStatusesByParentIdEmailtemplatesCount"];
  };
  "/procurement/rmaStatuses/{parentId}/notifications": {
    get: operations["getProcurementRmaStatusesByParentIdNotifications"];
    post: operations["postProcurementRmaStatusesByParentIdNotifications"];
  };
  "/procurement/rmaStatuses/{parentId}/notifications/{id}": {
    get: operations["getProcurementRmaStatusesByParentIdNotificationsById"];
    put: operations["putProcurementRmaStatusesByParentIdNotificationsById"];
    delete: operations["deleteProcurementRmaStatusesByParentIdNotificationsById"];
    patch: operations["patchProcurementRmaStatusesByParentIdNotificationsById"];
  };
  "/procurement/rmaStatuses/{parentId}/notifications/count": {
    get: operations["getProcurementRmaStatusesByParentIdNotificationsCount"];
  };
  "/procurement/rmaStatuses/count": {
    get: operations["getProcurementRmaStatusesCount"];
  };
  "/procurement/rmaStatuses/info": {
    get: operations["getProcurementRmaStatusesInfo"];
  };
  "/procurement/rmaStatuses/info/count": {
    get: operations["getProcurementRmaStatusesInfoCount"];
  };
  "/procurement/rmaTags": {
    get: operations["getProcurementRmaTags"];
    post: operations["postProcurementRmaTags"];
  };
  "/procurement/rmaTags/{id}": {
    get: operations["getProcurementRmaTagsById"];
    put: operations["putProcurementRmaTagsById"];
    delete: operations["deleteProcurementRmaTagsById"];
    patch: operations["patchProcurementRmaTagsById"];
  };
  "/procurement/rmaTags/count": {
    get: operations["getProcurementRmaTagsCount"];
  };
  "/procurement/rmaTags/default": {
    get: operations["getProcurementRmaTagsDefault"];
  };
  "/procurement/settings": {
    get: operations["getProcurementSettings"];
  };
  "/procurement/settings/{id}": {
    get: operations["getProcurementSettingsById"];
    put: operations["putProcurementSettingsById"];
    patch: operations["patchProcurementSettingsById"];
  };
  "/procurement/settings/count": {
    get: operations["getProcurementSettingsCount"];
  };
  "/procurement/shipmentmethods": {
    get: operations["getProcurementShipmentmethods"];
    post: operations["postProcurementShipmentmethods"];
  };
  "/procurement/shipmentmethods/{id}": {
    get: operations["getProcurementShipmentmethodsById"];
    put: operations["putProcurementShipmentmethodsById"];
    delete: operations["deleteProcurementShipmentmethodsById"];
    patch: operations["patchProcurementShipmentmethodsById"];
  };
  "/procurement/shipmentmethods/{id}/info": {
    get: operations["getProcurementShipmentmethodsByIdInfo"];
  };
  "/procurement/shipmentmethods/{id}/usages": {
    get: operations["getProcurementShipmentmethodsByIdUsages"];
  };
  "/procurement/shipmentmethods/{id}/usages/list": {
    get: operations["getProcurementShipmentmethodsByIdUsagesList"];
  };
  "/procurement/shipmentmethods/count": {
    get: operations["getProcurementShipmentmethodsCount"];
  };
  "/procurement/shipmentmethods/info": {
    get: operations["getProcurementShipmentmethodsInfo"];
  };
  "/procurement/shipmentmethods/info/count": {
    get: operations["getProcurementShipmentmethodsInfoCount"];
  };
  "/procurement/subcategories/": {
    get: operations["getProcurementSubcategories"];
    post: operations["postProcurementSubcategories"];
  };
  "/procurement/subcategories/{id}": {
    get: operations["getProcurementSubcategoriesById"];
    put: operations["putProcurementSubcategoriesById"];
    delete: operations["deleteProcurementSubcategoriesById"];
    patch: operations["patchProcurementSubcategoriesById"];
  };
  "/procurement/subcategories/{id}/info": {
    get: operations["getProcurementSubcategoriesByIdInfo"];
  };
  "/procurement/subcategories/{id}/usages": {
    get: operations["getProcurementSubcategoriesByIdUsages"];
  };
  "/procurement/subcategories/{id}/usages/list": {
    get: operations["getProcurementSubcategoriesByIdUsagesList"];
  };
  "/procurement/subcategories/count": {
    get: operations["getProcurementSubcategoriesCount"];
  };
  "/procurement/subcategories/info/": {
    get: operations["getProcurementSubcategoriesInfo"];
  };
  "/procurement/subcategories/info/count": {
    get: operations["getProcurementSubcategoriesInfoCount"];
  };
  "/procurement/types": {
    get: operations["getProcurementTypes"];
    post: operations["postProcurementTypes"];
  };
  "/procurement/types/{id}": {
    get: operations["getProcurementTypesById"];
    put: operations["putProcurementTypesById"];
    delete: operations["deleteProcurementTypesById"];
    patch: operations["patchProcurementTypesById"];
  };
  "/procurement/types/{id}/info": {
    get: operations["getProcurementTypesByIdInfo"];
  };
  "/procurement/types/{id}/usages": {
    get: operations["getProcurementTypesByIdUsages"];
  };
  "/procurement/types/{id}/usages/list": {
    get: operations["getProcurementTypesByIdUsagesList"];
  };
  "/procurement/types/count": {
    get: operations["getProcurementTypesCount"];
  };
  "/procurement/types/info": {
    get: operations["getProcurementTypesInfo"];
  };
  "/procurement/types/info/count": {
    get: operations["getProcurementTypesInfoCount"];
  };
  "/procurement/unitOfMeasures": {
    get: operations["getProcurementUnitOfMeasures"];
    post: operations["postProcurementUnitOfMeasures"];
  };
  "/procurement/unitOfMeasures/{id}": {
    get: operations["getProcurementUnitOfMeasuresById"];
    put: operations["putProcurementUnitOfMeasuresById"];
    delete: operations["deleteProcurementUnitOfMeasuresById"];
    patch: operations["patchProcurementUnitOfMeasuresById"];
  };
  "/procurement/unitOfMeasures/{parentId}/conversions": {
    get: operations["getProcurementUnitOfMeasuresByParentIdConversions"];
    post: operations["postProcurementUnitOfMeasuresByParentIdConversions"];
  };
  "/procurement/unitOfMeasures/{parentId}/conversions/{id}": {
    get: operations["getProcurementUnitOfMeasuresByParentIdConversionsById"];
    put: operations["putProcurementUnitOfMeasuresByParentIdConversionsById"];
    delete: operations["deleteProcurementUnitOfMeasuresByParentIdConversionsById"];
    patch: operations["patchProcurementUnitOfMeasuresByParentIdConversionsById"];
  };
  "/procurement/unitOfMeasures/{parentId}/conversions/count": {
    get: operations["getProcurementUnitOfMeasuresByParentIdConversionsCount"];
  };
  "/procurement/unitOfMeasures/count": {
    get: operations["getProcurementUnitOfMeasuresCount"];
  };
  "/procurement/warehouseBins": {
    get: operations["getProcurementWarehouseBins"];
    post: operations["postProcurementWarehouseBins"];
  };
  "/procurement/warehouseBins/{id}": {
    get: operations["getProcurementWarehouseBinsById"];
    put: operations["putProcurementWarehouseBinsById"];
    delete: operations["deleteProcurementWarehouseBinsById"];
    patch: operations["patchProcurementWarehouseBinsById"];
  };
  "/procurement/warehouseBins/{id}/info": {
    get: operations["getProcurementWarehouseBinsByIdInfo"];
  };
  "/procurement/warehouseBins/{parentId}/inventoryOnHand": {
    get: operations["getProcurementWarehouseBinsByParentIdInventoryOnHand"];
  };
  "/procurement/warehouseBins/{parentId}/inventoryOnHand/{id}": {
    get: operations["getProcurementWarehouseBinsByParentIdInventoryOnHandById"];
  };
  "/procurement/warehouseBins/{parentId}/inventoryOnHand/count": {
    get: operations["getProcurementWarehouseBinsByParentIdInventoryOnHandCount"];
  };
  "/procurement/warehouseBins/count": {
    get: operations["getProcurementWarehouseBinsCount"];
  };
  "/procurement/warehouseBins/info": {
    get: operations["getProcurementWarehouseBinsInfo"];
  };
  "/procurement/warehouseBins/info/count": {
    get: operations["getProcurementWarehouseBinsInfoCount"];
  };
  "/procurement/warehouses": {
    get: operations["getProcurementWarehouses"];
    post: operations["postProcurementWarehouses"];
  };
  "/procurement/warehouses/{id}": {
    get: operations["getProcurementWarehousesById"];
    put: operations["putProcurementWarehousesById"];
    delete: operations["deleteProcurementWarehousesById"];
    patch: operations["patchProcurementWarehousesById"];
  };
  "/procurement/warehouses/{id}/info": {
    get: operations["getProcurementWarehousesByIdInfo"];
  };
  "/procurement/warehouses/count": {
    get: operations["getProcurementWarehousesCount"];
  };
  "/procurement/warehouses/info": {
    get: operations["getProcurementWarehousesInfo"];
  };
  "/procurement/warehouses/info/count": {
    get: operations["getProcurementWarehousesInfoCount"];
  };
  "/project/boards/{grandparentId}/teams/{parentId}/members": {
    get: operations["getProjectBoardsByGrandparentIdTeamsByParentIdMembers"];
    post: operations["postProjectBoardsByGrandparentIdTeamsByParentIdMembers"];
  };
  "/project/boards/{grandparentId}/teams/{parentId}/members/{id}": {
    get: operations["getProjectBoardsByGrandparentIdTeamsByParentIdMembersById"];
    put: operations["putProjectBoardsByGrandparentIdTeamsByParentIdMembersById"];
    delete: operations["deleteProjectBoardsByGrandparentIdTeamsByParentIdMembersById"];
    patch: operations["patchProjectBoardsByGrandparentIdTeamsByParentIdMembersById"];
  };
  "/project/boards/{parentId}/teams": {
    get: operations["getProjectBoardsByParentIdTeams"];
    post: operations["postProjectBoardsByParentIdTeams"];
  };
  "/project/boards/{parentId}/teams/{id}": {
    get: operations["getProjectBoardsByParentIdTeamsById"];
    put: operations["putProjectBoardsByParentIdTeamsById"];
    delete: operations["deleteProjectBoardsByParentIdTeamsById"];
    patch: operations["patchProjectBoardsByParentIdTeamsById"];
  };
  "/project/boards/{parentId}/teams/{id}/info": {
    get: operations["getProjectBoardsByParentIdTeamsByIdInfo"];
  };
  "/project/boards/{parentId}/teams/{id}/info/count": {
    get: operations["getProjectBoardsByParentIdTeamsByIdInfoCount"];
  };
  "/project/boards/{parentId}/teams/count": {
    get: operations["getProjectBoardsByParentIdTeamsCount"];
  };
  "/project/boards/{parentId}/teams/info": {
    get: operations["getProjectBoardsByParentIdTeamsInfo"];
  };
  "/project/phaseStatuses": {
    get: operations["getProjectPhaseStatuses"];
    post: operations["postProjectPhaseStatuses"];
  };
  "/project/phaseStatuses/{id}": {
    get: operations["getProjectPhaseStatusesById"];
    put: operations["putProjectPhaseStatusesById"];
    delete: operations["deleteProjectPhaseStatusesById"];
    patch: operations["patchProjectPhaseStatusesById"];
  };
  "/project/phaseStatuses/{id}/usages": {
    get: operations["getProjectPhaseStatusesByIdUsages"];
  };
  "/project/phaseStatuses/{id}/usages/list": {
    get: operations["getProjectPhaseStatusesByIdUsagesList"];
  };
  "/project/phaseStatuses/count": {
    get: operations["getProjectPhaseStatusesCount"];
  };
  "/project/projects": {
    get: operations["getProjectProjects"];
    post: operations["postProjectProjects"];
  };
  "/project/projects/{id}": {
    get: operations["getProjectProjectsById"];
    put: operations["putProjectProjectsById"];
    delete: operations["deleteProjectProjectsById"];
    patch: operations["patchProjectProjectsById"];
  };
  "/project/projects/{parentId}/contacts": {
    get: operations["getProjectProjectsByParentIdContacts"];
    post: operations["postProjectProjectsByParentIdContacts"];
  };
  "/project/projects/{parentId}/contacts/{id}": {
    get: operations["getProjectProjectsByParentIdContactsById"];
    delete: operations["deleteProjectProjectsByParentIdContactsById"];
  };
  "/project/projects/{parentId}/notes": {
    get: operations["getProjectProjectsByParentIdNotes"];
    post: operations["postProjectProjectsByParentIdNotes"];
  };
  "/project/projects/{parentId}/notes/{id}": {
    get: operations["getProjectProjectsByParentIdNotesById"];
    put: operations["putProjectProjectsByParentIdNotesById"];
    delete: operations["deleteProjectProjectsByParentIdNotesById"];
    patch: operations["patchProjectProjectsByParentIdNotesById"];
  };
  "/project/projects/{parentId}/notes/count": {
    get: operations["getProjectProjectsByParentIdNotesCount"];
  };
  "/project/projects/{parentId}/phases": {
    get: operations["getProjectProjectsByParentIdPhases"];
    post: operations["postProjectProjectsByParentIdPhases"];
  };
  "/project/projects/{parentId}/phases/{id}": {
    get: operations["getProjectProjectsByParentIdPhasesById"];
    put: operations["putProjectProjectsByParentIdPhasesById"];
    delete: operations["deleteProjectProjectsByParentIdPhasesById"];
    patch: operations["patchProjectProjectsByParentIdPhasesById"];
  };
  "/project/projects/{parentId}/phases/count": {
    get: operations["getProjectProjectsByParentIdPhasesCount"];
  };
  "/project/projects/{parentId}/teamMembers": {
    get: operations["getProjectProjectsByParentIdTeamMembers"];
    post: operations["postProjectProjectsByParentIdTeamMembers"];
  };
  "/project/projects/{parentId}/teamMembers/{id}": {
    get: operations["getProjectProjectsByParentIdTeamMembersById"];
    put: operations["putProjectProjectsByParentIdTeamMembersById"];
    delete: operations["deleteProjectProjectsByParentIdTeamMembersById"];
    patch: operations["patchProjectProjectsByParentIdTeamMembersById"];
  };
  "/project/projects/{parentId}/teamMembers/count": {
    get: operations["getProjectProjectsByParentIdTeamMembersCount"];
  };
  "/project/projects/count": {
    get: operations["getProjectProjectsCount"];
  };
  "/project/projectTypes": {
    get: operations["getProjectProjectTypes"];
    post: operations["postProjectProjectTypes"];
  };
  "/project/projectTypes/{id}": {
    get: operations["getProjectProjectTypesById"];
    put: operations["putProjectProjectTypesById"];
    delete: operations["deleteProjectProjectTypesById"];
    patch: operations["patchProjectProjectTypesById"];
  };
  "/project/projectTypes/{id}/info": {
    get: operations["getProjectProjectTypesByIdInfo"];
  };
  "/project/projectTypes/{id}/usages": {
    get: operations["getProjectProjectTypesByIdUsages"];
  };
  "/project/projectTypes/{id}/usages/list": {
    get: operations["getProjectProjectTypesByIdUsagesList"];
  };
  "/project/projectTypes/count": {
    get: operations["getProjectProjectTypesCount"];
  };
  "/project/projectTypes/info": {
    get: operations["getProjectProjectTypesInfo"];
  };
  "/project/projectTypes/info/count": {
    get: operations["getProjectProjectTypesInfoCount"];
  };
  "/project/securityRoles": {
    get: operations["getProjectSecurityRoles"];
    post: operations["postProjectSecurityRoles"];
  };
  "/project/securityRoles/{id}": {
    get: operations["getProjectSecurityRolesById"];
    put: operations["putProjectSecurityRolesById"];
    delete: operations["deleteProjectSecurityRolesById"];
    patch: operations["patchProjectSecurityRolesById"];
  };
  "/project/securityRoles/{parentId}/settings": {
    get: operations["getProjectSecurityRolesByParentIdSettings"];
  };
  "/project/securityRoles/{parentId}/settings/{id}": {
    get: operations["getProjectSecurityRolesByParentIdSettingsById"];
    put: operations["putProjectSecurityRolesByParentIdSettingsById"];
    patch: operations["patchProjectSecurityRolesByParentIdSettingsById"];
  };
  "/project/securityRoles/{parentId}/settings/count": {
    get: operations["getProjectSecurityRolesByParentIdSettingsCount"];
  };
  "/project/securityRoles/count": {
    get: operations["getProjectSecurityRolesCount"];
  };
  "/project/statuses": {
    get: operations["getProjectStatuses"];
    post: operations["postProjectStatuses"];
  };
  "/project/statuses/{id}": {
    get: operations["getProjectStatusesById"];
    put: operations["putProjectStatusesById"];
    delete: operations["deleteProjectStatusesById"];
    patch: operations["patchProjectStatusesById"];
  };
  "/project/statuses/{id}/info": {
    get: operations["getProjectStatusesByIdInfo"];
  };
  "/project/statuses/count": {
    get: operations["getProjectStatusesCount"];
  };
  "/project/statuses/info": {
    get: operations["getProjectStatusesInfo"];
  };
  "/project/statuses/info/count": {
    get: operations["getProjectStatusesInfoCount"];
  };
  "/project/statusIndicators": {
    get: operations["getProjectStatusIndicators"];
  };
  "/project/statusIndicators/{id}": {
    get: operations["getProjectStatusIndicatorsById"];
  };
  "/project/statusIndicators/count": {
    get: operations["getProjectStatusIndicatorsCount"];
  };
  "/project/ticketNote/{id}/markAs/": {
    post: operations["postProjectTicketNoteByIdMarkAs"];
  };
  "/project/tickets": {
    get: operations["getProjectTickets"];
    post: operations["postProjectTickets"];
  };
  "/project/tickets/{id}": {
    get: operations["getProjectTicketsById"];
    put: operations["putProjectTicketsById"];
    delete: operations["deleteProjectTicketsById"];
    patch: operations["patchProjectTicketsById"];
  };
  "/project/tickets/{parentId}/activities": {
    get: operations["getProjectTicketsByParentIdActivities"];
  };
  "/project/tickets/{parentId}/activities/count": {
    get: operations["getProjectTicketsByParentIdActivitiesCount"];
  };
  "/project/tickets/{parentId}/allNotes": {
    get: operations["getProjectTicketsByParentIdAllNotes"];
  };
  "/project/tickets/{parentId}/configurations": {
    get: operations["getProjectTicketsByParentIdConfigurations"];
    post: operations["postProjectTicketsByParentIdConfigurations"];
  };
  "/project/tickets/{parentId}/configurations/{id}": {
    get: operations["getProjectTicketsByParentIdConfigurationsById"];
    delete: operations["deleteProjectTicketsByParentIdConfigurationsById"];
  };
  "/project/tickets/{parentId}/configurations/count": {
    get: operations["getProjectTicketsByParentIdConfigurationsCount"];
  };
  "/project/tickets/{parentId}/convert": {
    post: operations["postProjectTicketsByParentIdConvert"];
  };
  "/project/tickets/{parentId}/documents": {
    get: operations["getProjectTicketsByParentIdDocuments"];
  };
  "/project/tickets/{parentId}/documents/count": {
    get: operations["getProjectTicketsByParentIdDocumentsCount"];
  };
  "/project/tickets/{parentId}/notes": {
    get: operations["getProjectTicketsByParentIdNotes"];
    post: operations["postProjectTicketsByParentIdNotes"];
  };
  "/project/tickets/{parentId}/notes/{id}": {
    get: operations["getProjectTicketsByParentIdNotesById"];
    put: operations["putProjectTicketsByParentIdNotesById"];
    delete: operations["deleteProjectTicketsByParentIdNotesById"];
    patch: operations["patchProjectTicketsByParentIdNotesById"];
  };
  "/project/tickets/{parentId}/notes/count": {
    get: operations["getProjectTicketsByParentIdNotesCount"];
  };
  "/project/tickets/{parentId}/products": {
    get: operations["getProjectTicketsByParentIdProducts"];
  };
  "/project/tickets/{parentId}/products/count": {
    get: operations["getProjectTicketsByParentIdProductsCount"];
  };
  "/project/tickets/{parentId}/scheduleentries": {
    get: operations["getProjectTicketsByParentIdScheduleentries"];
  };
  "/project/tickets/{parentId}/scheduleentries/count": {
    get: operations["getProjectTicketsByParentIdScheduleentriesCount"];
  };
  "/project/tickets/{parentId}/tasks": {
    get: operations["getProjectTicketsByParentIdTasks"];
    post: operations["postProjectTicketsByParentIdTasks"];
  };
  "/project/tickets/{parentId}/tasks/{id}": {
    get: operations["getProjectTicketsByParentIdTasksById"];
    put: operations["putProjectTicketsByParentIdTasksById"];
    delete: operations["deleteProjectTicketsByParentIdTasksById"];
    patch: operations["patchProjectTicketsByParentIdTasksById"];
  };
  "/project/tickets/{parentId}/tasks/count": {
    get: operations["getProjectTicketsByParentIdTasksCount"];
  };
  "/project/tickets/{parentId}/timeentries": {
    get: operations["getProjectTicketsByParentIdTimeentries"];
  };
  "/project/tickets/{parentId}/timeentries/count": {
    get: operations["getProjectTicketsByParentIdTimeentriesCount"];
  };
  "/project/tickets/count": {
    get: operations["getProjectTicketsCount"];
  };
  "/project/tickets/search": {
    post: operations["postProjectTicketsSearch"];
  };
  "/sales/activities": {
    get: operations["getSalesActivities"];
    post: operations["postSalesActivities"];
  };
  "/sales/activities/{id}": {
    get: operations["getSalesActivitiesById"];
    put: operations["putSalesActivitiesById"];
    delete: operations["deleteSalesActivitiesById"];
    patch: operations["patchSalesActivitiesById"];
  };
  "/sales/activities/count": {
    get: operations["getSalesActivitiesCount"];
  };
  "/sales/activities/statuses": {
    get: operations["getSalesActivitiesStatuses"];
    post: operations["postSalesActivitiesStatuses"];
  };
  "/sales/activities/statuses/{id}": {
    get: operations["getSalesActivitiesStatusesById"];
    put: operations["putSalesActivitiesStatusesById"];
    delete: operations["deleteSalesActivitiesStatusesById"];
    patch: operations["patchSalesActivitiesStatusesById"];
  };
  "/sales/activities/statuses/{id}/info": {
    get: operations["getSalesActivitiesStatusesByIdInfo"];
  };
  "/sales/activities/statuses/count": {
    get: operations["getSalesActivitiesStatusesCount"];
  };
  "/sales/activities/statuses/info": {
    get: operations["getSalesActivitiesStatusesInfo"];
  };
  "/sales/activities/statuses/info/count": {
    get: operations["getSalesActivitiesStatusesInfoCount"];
  };
  "/sales/activities/types": {
    get: operations["getSalesActivitiesTypes"];
    post: operations["postSalesActivitiesTypes"];
  };
  "/sales/activities/types/{id}": {
    get: operations["getSalesActivitiesTypesById"];
    put: operations["putSalesActivitiesTypesById"];
    delete: operations["deleteSalesActivitiesTypesById"];
    patch: operations["patchSalesActivitiesTypesById"];
  };
  "/sales/activities/types/{id}/usages": {
    get: operations["getSalesActivitiesTypesByIdUsages"];
  };
  "/sales/activities/types/{id}/usages/list": {
    get: operations["getSalesActivitiesTypesByIdUsagesList"];
  };
  "/sales/activities/types/count": {
    get: operations["getSalesActivitiesTypesCount"];
  };
  "/sales/commissions": {
    get: operations["getSalesCommissions"];
    post: operations["postSalesCommissions"];
  };
  "/sales/commissions/{id}": {
    get: operations["getSalesCommissionsById"];
    put: operations["putSalesCommissionsById"];
    delete: operations["deleteSalesCommissionsById"];
    patch: operations["patchSalesCommissionsById"];
  };
  "/sales/commissions/{id}/usages": {
    get: operations["getSalesCommissionsByIdUsages"];
  };
  "/sales/commissions/{id}/usages/list": {
    get: operations["getSalesCommissionsByIdUsagesList"];
  };
  "/sales/commissions/count": {
    get: operations["getSalesCommissionsCount"];
  };
  "/sales/opportunities": {
    get: operations["getSalesOpportunities"];
    post: operations["postSalesOpportunities"];
  };
  "/sales/opportunities/{id}": {
    get: operations["getSalesOpportunitiesById"];
    put: operations["putSalesOpportunitiesById"];
    delete: operations["deleteSalesOpportunitiesById"];
    patch: operations["patchSalesOpportunitiesById"];
  };
  "/sales/opportunities/{id}/convertToAgreement": {
    post: operations["postSalesOpportunitiesByIdConvertToAgreement"];
  };
  "/sales/opportunities/{id}/convertToProject": {
    post: operations["postSalesOpportunitiesByIdConvertToProject"];
  };
  "/sales/opportunities/{id}/convertToSalesOrder": {
    post: operations["postSalesOpportunitiesByIdConvertToSalesOrder"];
  };
  "/sales/opportunities/{id}/convertToServiceTicket": {
    post: operations["postSalesOpportunitiesByIdConvertToServiceTicket"];
  };
  "/sales/opportunities/{parentId}/contacts": {
    get: operations["getSalesOpportunitiesByParentIdContacts"];
    post: operations["postSalesOpportunitiesByParentIdContacts"];
  };
  "/sales/opportunities/{parentId}/contacts/{id}": {
    get: operations["getSalesOpportunitiesByParentIdContactsById"];
    put: operations["putSalesOpportunitiesByParentIdContactsById"];
    delete: operations["deleteSalesOpportunitiesByParentIdContactsById"];
    patch: operations["patchSalesOpportunitiesByParentIdContactsById"];
  };
  "/sales/opportunities/{parentId}/contacts/count": {
    get: operations["getSalesOpportunitiesByParentIdContactsCount"];
  };
  "/sales/opportunities/{parentId}/forecast": {
    get: operations["getSalesOpportunitiesByParentIdForecast"];
    post: operations["postSalesOpportunitiesByParentIdForecast"];
  };
  "/sales/opportunities/{parentId}/forecast/": {
    put: operations["putSalesOpportunitiesByParentIdForecast"];
    delete: operations["deleteSalesOpportunitiesByParentIdForecast"];
    patch: operations["patchSalesOpportunitiesByParentIdForecast"];
  };
  "/sales/opportunities/{parentId}/forecast/{id}": {
    get: operations["getSalesOpportunitiesByParentIdForecastById"];
    put: operations["putSalesOpportunitiesByParentIdForecastById"];
    post: operations["postSalesOpportunitiesByParentIdForecastById"];
    delete: operations["deleteSalesOpportunitiesByParentIdForecastById"];
    patch: operations["patchSalesOpportunitiesByParentIdForecastById"];
  };
  "/sales/opportunities/{parentId}/forecast/copy/{id}": {
    post: operations["postSalesOpportunitiesByParentIdForecastCopyById"];
  };
  "/sales/opportunities/{parentId}/forecast/count": {
    get: operations["getSalesOpportunitiesByParentIdForecastCount"];
  };
  "/sales/opportunities/{parentId}/notes": {
    get: operations["getSalesOpportunitiesByParentIdNotes"];
    post: operations["postSalesOpportunitiesByParentIdNotes"];
  };
  "/sales/opportunities/{parentId}/notes/{id}": {
    get: operations["getSalesOpportunitiesByParentIdNotesById"];
    put: operations["putSalesOpportunitiesByParentIdNotesById"];
    delete: operations["deleteSalesOpportunitiesByParentIdNotesById"];
    patch: operations["patchSalesOpportunitiesByParentIdNotesById"];
  };
  "/sales/opportunities/{parentId}/notes/count": {
    get: operations["getSalesOpportunitiesByParentIdNotesCount"];
  };
  "/sales/opportunities/{parentId}/team": {
    get: operations["getSalesOpportunitiesByParentIdTeam"];
    post: operations["postSalesOpportunitiesByParentIdTeam"];
  };
  "/sales/opportunities/{parentId}/team/{id}": {
    get: operations["getSalesOpportunitiesByParentIdTeamById"];
    put: operations["putSalesOpportunitiesByParentIdTeamById"];
    delete: operations["deleteSalesOpportunitiesByParentIdTeamById"];
    patch: operations["patchSalesOpportunitiesByParentIdTeamById"];
  };
  "/sales/opportunities/{parentId}/team/count": {
    get: operations["getSalesOpportunitiesByParentIdTeamCount"];
  };
  "/sales/opportunities/count": {
    get: operations["getSalesOpportunitiesCount"];
  };
  "/sales/opportunities/default": {
    get: operations["getSalesOpportunitiesDefault"];
  };
  "/sales/opportunities/ratings": {
    get: operations["getSalesOpportunitiesRatings"];
    post: operations["postSalesOpportunitiesRatings"];
  };
  "/sales/opportunities/ratings/{id}": {
    get: operations["getSalesOpportunitiesRatingsById"];
    put: operations["putSalesOpportunitiesRatingsById"];
    delete: operations["deleteSalesOpportunitiesRatingsById"];
    patch: operations["patchSalesOpportunitiesRatingsById"];
  };
  "/sales/opportunities/ratings/{id}/info": {
    get: operations["getSalesOpportunitiesRatingsByIdInfo"];
  };
  "/sales/opportunities/ratings/count": {
    get: operations["getSalesOpportunitiesRatingsCount"];
  };
  "/sales/opportunities/ratings/info": {
    get: operations["getSalesOpportunitiesRatingsInfo"];
  };
  "/sales/opportunities/ratings/info/count": {
    get: operations["getSalesOpportunitiesRatingsInfoCount"];
  };
  "/sales/opportunities/statuses": {
    get: operations["getSalesOpportunitiesStatuses"];
    post: operations["postSalesOpportunitiesStatuses"];
  };
  "/sales/opportunities/statuses/{id}": {
    get: operations["getSalesOpportunitiesStatusesById"];
    put: operations["putSalesOpportunitiesStatusesById"];
    delete: operations["deleteSalesOpportunitiesStatusesById"];
    patch: operations["patchSalesOpportunitiesStatusesById"];
  };
  "/sales/opportunities/statuses/{id}/info": {
    get: operations["getSalesOpportunitiesStatusesByIdInfo"];
  };
  "/sales/opportunities/statuses/{id}/usages": {
    get: operations["getSalesOpportunitiesStatusesByIdUsages"];
  };
  "/sales/opportunities/statuses/{id}/usages/list": {
    get: operations["getSalesOpportunitiesStatusesByIdUsagesList"];
  };
  "/sales/opportunities/statuses/count": {
    get: operations["getSalesOpportunitiesStatusesCount"];
  };
  "/sales/opportunities/statuses/info": {
    get: operations["getSalesOpportunitiesStatusesInfo"];
  };
  "/sales/opportunities/statuses/info/count": {
    get: operations["getSalesOpportunitiesStatusesInfoCount"];
  };
  "/sales/opportunities/types": {
    get: operations["getSalesOpportunitiesTypes"];
    post: operations["postSalesOpportunitiesTypes"];
  };
  "/sales/opportunities/types/{id}": {
    get: operations["getSalesOpportunitiesTypesById"];
    put: operations["putSalesOpportunitiesTypesById"];
    delete: operations["deleteSalesOpportunitiesTypesById"];
    patch: operations["patchSalesOpportunitiesTypesById"];
  };
  "/sales/opportunities/types/{id}/info": {
    get: operations["getSalesOpportunitiesTypesByIdInfo"];
  };
  "/sales/opportunities/types/{id}/usages": {
    get: operations["getSalesOpportunitiesTypesByIdUsages"];
  };
  "/sales/opportunities/types/{id}/usages/list": {
    get: operations["getSalesOpportunitiesTypesByIdUsagesList"];
  };
  "/sales/opportunities/types/count": {
    get: operations["getSalesOpportunitiesTypesCount"];
  };
  "/sales/opportunities/types/info": {
    get: operations["getSalesOpportunitiesTypesInfo"];
  };
  "/sales/opportunities/types/info/count": {
    get: operations["getSalesOpportunitiesTypesInfoCount"];
  };
  "/sales/orders": {
    get: operations["getSalesOrders"];
    post: operations["postSalesOrders"];
  };
  "/sales/orders/{id}": {
    get: operations["getSalesOrdersById"];
    put: operations["putSalesOrdersById"];
    delete: operations["deleteSalesOrdersById"];
    patch: operations["patchSalesOrdersById"];
  };
  "/sales/orders/{id}/convertToServiceTicket": {
    post: operations["postSalesOrdersByIdConvertToServiceTicket"];
  };
  "/sales/orders/count": {
    get: operations["getSalesOrdersCount"];
  };
  "/sales/orders/statuses": {
    get: operations["getSalesOrdersStatuses"];
    post: operations["postSalesOrdersStatuses"];
  };
  "/sales/orders/statuses/{id}": {
    get: operations["getSalesOrdersStatusesById"];
    put: operations["putSalesOrdersStatusesById"];
    delete: operations["deleteSalesOrdersStatusesById"];
    patch: operations["patchSalesOrdersStatusesById"];
  };
  "/sales/orders/statuses/{id}/info": {
    get: operations["getSalesOrdersStatusesByIdInfo"];
  };
  "/sales/orders/statuses/{id}/usages": {
    get: operations["getSalesOrdersStatusesByIdUsages"];
  };
  "/sales/orders/statuses/{id}/usages/list": {
    get: operations["getSalesOrdersStatusesByIdUsagesList"];
  };
  "/sales/orders/statuses/{parentId}/emailtemplates/": {
    get: operations["getSalesOrdersStatusesByParentIdEmailtemplates"];
    post: operations["postSalesOrdersStatusesByParentIdEmailtemplates"];
  };
  "/sales/orders/statuses/{parentId}/emailtemplates/{id}": {
    get: operations["getSalesOrdersStatusesByParentIdEmailtemplatesById"];
    put: operations["putSalesOrdersStatusesByParentIdEmailtemplatesById"];
    delete: operations["deleteSalesOrdersStatusesByParentIdEmailtemplatesById"];
    patch: operations["patchSalesOrdersStatusesByParentIdEmailtemplatesById"];
  };
  "/sales/orders/statuses/{parentId}/emailtemplates/count": {
    get: operations["getSalesOrdersStatusesByParentIdEmailtemplatesCount"];
  };
  "/sales/orders/statuses/{parentId}/notifications": {
    get: operations["getSalesOrdersStatusesByParentIdNotifications"];
    post: operations["postSalesOrdersStatusesByParentIdNotifications"];
  };
  "/sales/orders/statuses/{parentId}/notifications/{id}": {
    get: operations["getSalesOrdersStatusesByParentIdNotificationsById"];
    put: operations["putSalesOrdersStatusesByParentIdNotificationsById"];
    delete: operations["deleteSalesOrdersStatusesByParentIdNotificationsById"];
    patch: operations["patchSalesOrdersStatusesByParentIdNotificationsById"];
  };
  "/sales/orders/statuses/{parentId}/notifications/count": {
    get: operations["getSalesOrdersStatusesByParentIdNotificationsCount"];
  };
  "/sales/orders/statuses/count": {
    get: operations["getSalesOrdersStatusesCount"];
  };
  "/sales/orders/statuses/info": {
    get: operations["getSalesOrdersStatusesInfo"];
  };
  "/sales/orders/statuses/info/count": {
    get: operations["getSalesOrdersStatusesInfoCount"];
  };
  "/sales/probabilities": {
    get: operations["getSalesProbabilities"];
    post: operations["postSalesProbabilities"];
  };
  "/sales/probabilities/{id}": {
    get: operations["getSalesProbabilitiesById"];
    put: operations["putSalesProbabilitiesById"];
    delete: operations["deleteSalesProbabilitiesById"];
    patch: operations["patchSalesProbabilitiesById"];
  };
  "/sales/probabilities/{id}/info": {
    get: operations["getSalesProbabilitiesByIdInfo"];
  };
  "/sales/probabilities/count": {
    get: operations["getSalesProbabilitiesCount"];
  };
  "/sales/probabilities/info": {
    get: operations["getSalesProbabilitiesInfo"];
  };
  "/sales/probabilities/info/count": {
    get: operations["getSalesProbabilitiesInfoCount"];
  };
  "/sales/quotas": {
    get: operations["getSalesQuotas"];
    post: operations["postSalesQuotas"];
  };
  "/sales/quotas/{id}": {
    get: operations["getSalesQuotasById"];
    put: operations["putSalesQuotasById"];
    delete: operations["deleteSalesQuotasById"];
    patch: operations["patchSalesQuotasById"];
  };
  "/sales/quotas/count": {
    get: operations["getSalesQuotasCount"];
  };
  "/sales/roles": {
    get: operations["getSalesRoles"];
    post: operations["postSalesRoles"];
  };
  "/sales/roles/{id}": {
    get: operations["getSalesRolesById"];
    put: operations["putSalesRolesById"];
    delete: operations["deleteSalesRolesById"];
    patch: operations["patchSalesRolesById"];
  };
  "/sales/roles/count": {
    get: operations["getSalesRolesCount"];
  };
  "/sales/salesTeams": {
    get: operations["getSalesSalesTeams"];
    post: operations["postSalesSalesTeams"];
  };
  "/sales/salesTeams/{id}": {
    get: operations["getSalesSalesTeamsById"];
    put: operations["putSalesSalesTeamsById"];
    delete: operations["deleteSalesSalesTeamsById"];
    patch: operations["patchSalesSalesTeamsById"];
  };
  "/sales/salesTeams/{parentId}/members": {
    get: operations["getSalesSalesTeamsByParentIdMembers"];
    post: operations["postSalesSalesTeamsByParentIdMembers"];
  };
  "/sales/salesTeams/{parentId}/members/{id}": {
    get: operations["getSalesSalesTeamsByParentIdMembersById"];
    put: operations["putSalesSalesTeamsByParentIdMembersById"];
    delete: operations["deleteSalesSalesTeamsByParentIdMembersById"];
    patch: operations["patchSalesSalesTeamsByParentIdMembersById"];
  };
  "/sales/salesTeams/{parentId}/members/count": {
    get: operations["getSalesSalesTeamsByParentIdMembersCount"];
  };
  "/sales/salesTeams/count": {
    get: operations["getSalesSalesTeamsCount"];
  };
  "/sales/schedule/holidaylists/info/count": {
    get: operations["getSalesScheduleHolidaylistsInfoCount"];
  };
  "/sales/service/priority/info/count": {
    get: operations["getSalesServicePriorityInfoCount"];
  };
  "/sales/stages": {
    get: operations["getSalesStages"];
    post: operations["postSalesStages"];
  };
  "/sales/stages/{id}": {
    get: operations["getSalesStagesById"];
    put: operations["putSalesStagesById"];
    delete: operations["deleteSalesStagesById"];
    patch: operations["patchSalesStagesById"];
  };
  "/sales/stages/{id}/info": {
    get: operations["getSalesStagesByIdInfo"];
  };
  "/sales/stages/{id}/usages": {
    get: operations["getSalesStagesByIdUsages"];
  };
  "/sales/stages/{id}/usages/list": {
    get: operations["getSalesStagesByIdUsagesList"];
  };
  "/sales/stages/count": {
    get: operations["getSalesStagesCount"];
  };
  "/sales/stages/info": {
    get: operations["getSalesStagesInfo"];
  };
  "/sales/stages/info/count": {
    get: operations["getSalesStagesInfoCount"];
  };
  "/schedule/calendars": {
    get: operations["getScheduleCalendars"];
    post: operations["postScheduleCalendars"];
  };
  "/schedule/calendars/{id}": {
    get: operations["getScheduleCalendarsById"];
    put: operations["putScheduleCalendarsById"];
    delete: operations["deleteScheduleCalendarsById"];
    patch: operations["patchScheduleCalendarsById"];
  };
  "/schedule/calendars/{id}/copy": {
    post: operations["postScheduleCalendarsByIdCopy"];
  };
  "/schedule/calendars/{id}/info": {
    get: operations["getScheduleCalendarsByIdInfo"];
  };
  "/schedule/calendars/{id}/usages": {
    get: operations["getScheduleCalendarsByIdUsages"];
  };
  "/schedule/calendars/{id}/usages/list": {
    get: operations["getScheduleCalendarsByIdUsagesList"];
  };
  "/schedule/calendars/count": {
    get: operations["getScheduleCalendarsCount"];
  };
  "/schedule/calendars/info": {
    get: operations["getScheduleCalendarsInfo"];
  };
  "/schedule/calendars/info/count": {
    get: operations["getScheduleCalendarsInfoCount"];
  };
  "/schedule/colors": {
    get: operations["getScheduleColors"];
  };
  "/schedule/colors/{id}": {
    get: operations["getScheduleColorsById"];
    put: operations["putScheduleColorsById"];
    patch: operations["patchScheduleColorsById"];
  };
  "/schedule/colors/{id}/clear": {
    post: operations["postScheduleColorsByIdClear"];
  };
  "/schedule/colors/count": {
    get: operations["getScheduleColorsCount"];
  };
  "/schedule/colors/reset": {
    post: operations["postScheduleColorsReset"];
  };
  "/schedule/details": {
    get: operations["getScheduleDetails"];
  };
  "/schedule/details/{id}": {
    get: operations["getScheduleDetailsById"];
  };
  "/schedule/details/count": {
    get: operations["getScheduleDetailsCount"];
  };
  "/schedule/entries": {
    get: operations["getScheduleEntries"];
    post: operations["postScheduleEntries"];
  };
  "/schedule/entries/{id}": {
    get: operations["getScheduleEntriesById"];
    put: operations["putScheduleEntriesById"];
    delete: operations["deleteScheduleEntriesById"];
    patch: operations["patchScheduleEntriesById"];
  };
  "/schedule/entries/{parentId}/details": {
    get: operations["getScheduleEntriesByParentIdDetails"];
  };
  "/schedule/entries/{parentId}/details/{id}": {
    get: operations["getScheduleEntriesByParentIdDetailsById"];
  };
  "/schedule/entries/{parentId}/details/count": {
    get: operations["getScheduleEntriesByParentIdDetailsCount"];
  };
  "/schedule/entries/count": {
    get: operations["getScheduleEntriesCount"];
  };
  "/schedule/holidayLists": {
    get: operations["getScheduleHolidayLists"];
    post: operations["postScheduleHolidayLists"];
  };
  "/schedule/holidayLists/{id}": {
    get: operations["getScheduleHolidayListsById"];
    put: operations["putScheduleHolidayListsById"];
    delete: operations["deleteScheduleHolidayListsById"];
    patch: operations["patchScheduleHolidayListsById"];
  };
  "/schedule/holidaylists/{id}/info": {
    get: operations["getScheduleHolidaylistsByIdInfo"];
  };
  "/schedule/holidayLists/{id}/usages": {
    get: operations["getScheduleHolidayListsByIdUsages"];
  };
  "/schedule/holidayLists/{id}/usages/list": {
    get: operations["getScheduleHolidayListsByIdUsagesList"];
  };
  "/schedule/holidayLists/{parentId}/holidays": {
    get: operations["getScheduleHolidayListsByParentIdHolidays"];
    post: operations["postScheduleHolidayListsByParentIdHolidays"];
  };
  "/schedule/holidayLists/{parentId}/holidays/{id}": {
    get: operations["getScheduleHolidayListsByParentIdHolidaysById"];
    put: operations["putScheduleHolidayListsByParentIdHolidaysById"];
    delete: operations["deleteScheduleHolidayListsByParentIdHolidaysById"];
    patch: operations["patchScheduleHolidayListsByParentIdHolidaysById"];
  };
  "/schedule/holidayLists/{parentId}/holidays/count": {
    get: operations["getScheduleHolidayListsByParentIdHolidaysCount"];
  };
  "/schedule/holidayLists/copy": {
    post: operations["postScheduleHolidayListsCopy"];
  };
  "/schedule/holidayLists/count": {
    get: operations["getScheduleHolidayListsCount"];
  };
  "/schedule/holidaylists/info": {
    get: operations["getScheduleHolidaylistsInfo"];
  };
  "/schedule/portalcalendars": {
    get: operations["getSchedulePortalcalendars"];
  };
  "/schedule/portalcalendars/{id}": {
    get: operations["getSchedulePortalcalendarsById"];
    put: operations["putSchedulePortalcalendarsById"];
    patch: operations["patchSchedulePortalcalendarsById"];
  };
  "/schedule/portalcalendars/count": {
    get: operations["getSchedulePortalcalendarsCount"];
  };
  "/schedule/reminderTimes": {
    get: operations["getScheduleReminderTimes"];
  };
  "/schedule/reminderTimes/{id}": {
    get: operations["getScheduleReminderTimesById"];
    put: operations["putScheduleReminderTimesById"];
    patch: operations["patchScheduleReminderTimesById"];
  };
  "/schedule/reminderTimes/count": {
    get: operations["getScheduleReminderTimesCount"];
  };
  "/schedule/statuses": {
    get: operations["getScheduleStatuses"];
    post: operations["postScheduleStatuses"];
  };
  "/schedule/statuses/{id}": {
    get: operations["getScheduleStatusesById"];
    put: operations["putScheduleStatusesById"];
    delete: operations["deleteScheduleStatusesById"];
    patch: operations["patchScheduleStatusesById"];
  };
  "/schedule/statuses/count": {
    get: operations["getScheduleStatusesCount"];
  };
  "/schedule/types": {
    get: operations["getScheduleTypes"];
    post: operations["postScheduleTypes"];
  };
  "/schedule/types/{id}": {
    get: operations["getScheduleTypesById"];
    put: operations["putScheduleTypesById"];
    delete: operations["deleteScheduleTypesById"];
    patch: operations["patchScheduleTypesById"];
  };
  "/schedule/types/{id}/info": {
    get: operations["getScheduleTypesByIdInfo"];
  };
  "/schedule/types/{id}/usages": {
    get: operations["getScheduleTypesByIdUsages"];
  };
  "/schedule/types/{id}/usages/list": {
    get: operations["getScheduleTypesByIdUsagesList"];
  };
  "/schedule/types/count": {
    get: operations["getScheduleTypesCount"];
  };
  "/schedule/types/info": {
    get: operations["getScheduleTypesInfo"];
  };
  "/schedule/types/info/count": {
    get: operations["getScheduleTypesInfoCount"];
  };
  "/service/boards": {
    get: operations["getServiceBoards"];
    post: operations["postServiceBoards"];
  };
  "/service/boards/{grandparentId}/items/{parentId}/associations": {
    get: operations["getServiceBoardsByGrandparentIdItemsByParentIdAssociations"];
  };
  "/service/boards/{grandparentId}/items/{parentId}/associations/{id}": {
    get: operations["getServiceBoardsByGrandparentIdItemsByParentIdAssociationsById"];
    put: operations["putServiceBoardsByGrandparentIdItemsByParentIdAssociationsById"];
    patch: operations["patchServiceBoardsByGrandparentIdItemsByParentIdAssociationsById"];
  };
  "/service/boards/{grandparentId}/items/{parentId}/associations/count": {
    get: operations["getServiceBoardsByGrandparentIdItemsByParentIdAssociationsCount"];
  };
  "/service/boards/{grandparentId}/statuses/{parentId}/notifications": {
    get: operations["getServiceBoardsByGrandparentIdStatusesByParentIdNotifications"];
    post: operations["postServiceBoardsByGrandparentIdStatusesByParentIdNotifications"];
  };
  "/service/boards/{grandparentId}/statuses/{parentId}/notifications/{id}": {
    get: operations["getServiceBoardsByGrandparentIdStatusesByParentIdNotificationsById"];
    put: operations["putServiceBoardsByGrandparentIdStatusesByParentIdNotificationsById"];
    delete: operations["deleteServiceBoardsByGrandparentIdStatusesByParentIdNotificationsById"];
    patch: operations["patchServiceBoardsByGrandparentIdStatusesByParentIdNotificationsById"];
  };
  "/service/boards/{grandparentId}/statuses/{parentId}/notifications/count": {
    get: operations["getServiceBoardsByGrandparentIdStatusesByParentIdNotificationsCount"];
  };
  "/service/boards/{id}": {
    get: operations["getServiceBoardsById"];
    put: operations["putServiceBoardsById"];
    delete: operations["deleteServiceBoardsById"];
    patch: operations["patchServiceBoardsById"];
  };
  "/service/boards/{id}/usages": {
    get: operations["getServiceBoardsByIdUsages"];
  };
  "/service/boards/{id}/usages/list": {
    get: operations["getServiceBoardsByIdUsagesList"];
  };
  "/service/boards/{parentId}/autoAssignResources": {
    get: operations["getServiceBoardsByParentIdAutoAssignResources"];
    post: operations["postServiceBoardsByParentIdAutoAssignResources"];
  };
  "/service/boards/{parentId}/autoAssignResources/{id}": {
    get: operations["getServiceBoardsByParentIdAutoAssignResourcesById"];
    put: operations["putServiceBoardsByParentIdAutoAssignResourcesById"];
    delete: operations["deleteServiceBoardsByParentIdAutoAssignResourcesById"];
    patch: operations["patchServiceBoardsByParentIdAutoAssignResourcesById"];
  };
  "/service/boards/{parentId}/autoAssignResources/count": {
    get: operations["getServiceBoardsByParentIdAutoAssignResourcesCount"];
  };
  "/service/boards/{parentId}/autoTemplates": {
    get: operations["getServiceBoardsByParentIdAutoTemplates"];
    post: operations["postServiceBoardsByParentIdAutoTemplates"];
  };
  "/service/boards/{parentId}/autoTemplates/{id}": {
    get: operations["getServiceBoardsByParentIdAutoTemplatesById"];
    put: operations["putServiceBoardsByParentIdAutoTemplatesById"];
    delete: operations["deleteServiceBoardsByParentIdAutoTemplatesById"];
    patch: operations["patchServiceBoardsByParentIdAutoTemplatesById"];
  };
  "/service/boards/{parentId}/autoTemplates/count": {
    get: operations["getServiceBoardsByParentIdAutoTemplatesCount"];
  };
  "/service/boards/{parentId}/excludedMembers": {
    get: operations["getServiceBoardsByParentIdExcludedMembers"];
    post: operations["postServiceBoardsByParentIdExcludedMembers"];
  };
  "/service/boards/{parentId}/excludedMembers/{id}": {
    get: operations["getServiceBoardsByParentIdExcludedMembersById"];
    delete: operations["deleteServiceBoardsByParentIdExcludedMembersById"];
  };
  "/service/boards/{parentId}/excludedMembers/count": {
    get: operations["getServiceBoardsByParentIdExcludedMembersCount"];
  };
  "/service/boards/{parentId}/items": {
    get: operations["getServiceBoardsByParentIdItems"];
    post: operations["postServiceBoardsByParentIdItems"];
  };
  "/service/boards/{parentId}/items/{id}": {
    get: operations["getServiceBoardsByParentIdItemsById"];
    put: operations["putServiceBoardsByParentIdItemsById"];
    delete: operations["deleteServiceBoardsByParentIdItemsById"];
    patch: operations["patchServiceBoardsByParentIdItemsById"];
  };
  "/service/boards/{parentId}/items/{id}/usages": {
    get: operations["getServiceBoardsByParentIdItemsByIdUsages"];
  };
  "/service/boards/{parentId}/items/{id}/usages/list": {
    get: operations["getServiceBoardsByParentIdItemsByIdUsagesList"];
  };
  "/service/boards/{parentId}/items/count": {
    get: operations["getServiceBoardsByParentIdItemsCount"];
  };
  "/service/boards/{parentId}/notifications": {
    get: operations["getServiceBoardsByParentIdNotifications"];
    post: operations["postServiceBoardsByParentIdNotifications"];
  };
  "/service/boards/{parentId}/notifications/{id}": {
    get: operations["getServiceBoardsByParentIdNotificationsById"];
    put: operations["putServiceBoardsByParentIdNotificationsById"];
    delete: operations["deleteServiceBoardsByParentIdNotificationsById"];
    patch: operations["patchServiceBoardsByParentIdNotificationsById"];
  };
  "/service/boards/{parentId}/notifications/count": {
    get: operations["getServiceBoardsByParentIdNotificationsCount"];
  };
  "/service/boards/{parentId}/statuses": {
    get: operations["getServiceBoardsByParentIdStatuses"];
    post: operations["postServiceBoardsByParentIdStatuses"];
  };
  "/service/boards/{parentId}/statuses/{id}": {
    get: operations["getServiceBoardsByParentIdStatusesById"];
    put: operations["putServiceBoardsByParentIdStatusesById"];
    delete: operations["deleteServiceBoardsByParentIdStatusesById"];
    patch: operations["patchServiceBoardsByParentIdStatusesById"];
  };
  "/service/boards/{parentId}/statuses/{id}/info": {
    get: operations["getServiceBoardsByParentIdStatusesByIdInfo"];
  };
  "/service/boards/{parentId}/statuses/{id}/usages": {
    get: operations["getServiceBoardsByParentIdStatusesByIdUsages"];
  };
  "/service/boards/{parentId}/statuses/{id}/usages/list": {
    get: operations["getServiceBoardsByParentIdStatusesByIdUsagesList"];
  };
  "/service/boards/{parentId}/statuses/count": {
    get: operations["getServiceBoardsByParentIdStatusesCount"];
  };
  "/service/boards/{parentId}/statuses/info": {
    get: operations["getServiceBoardsByParentIdStatusesInfo"];
  };
  "/service/boards/{parentId}/statuses/info/count": {
    get: operations["getServiceBoardsByParentIdStatusesInfoCount"];
  };
  "/service/boards/{parentId}/subtypes": {
    get: operations["getServiceBoardsByParentIdSubtypes"];
    post: operations["postServiceBoardsByParentIdSubtypes"];
  };
  "/service/boards/{parentId}/subtypes/{id}": {
    get: operations["getServiceBoardsByParentIdSubtypesById"];
    put: operations["putServiceBoardsByParentIdSubtypesById"];
    delete: operations["deleteServiceBoardsByParentIdSubtypesById"];
    patch: operations["patchServiceBoardsByParentIdSubtypesById"];
  };
  "/service/boards/{parentId}/subtypes/{id}/info": {
    get: operations["getServiceBoardsByParentIdSubtypesByIdInfo"];
  };
  "/service/boards/{parentId}/subtypes/{id}/usages": {
    get: operations["getServiceBoardsByParentIdSubtypesByIdUsages"];
  };
  "/service/boards/{parentId}/subtypes/{id}/usages/list": {
    get: operations["getServiceBoardsByParentIdSubtypesByIdUsagesList"];
  };
  "/service/boards/{parentId}/subtypes/count": {
    get: operations["getServiceBoardsByParentIdSubtypesCount"];
  };
  "/service/boards/{parentId}/subtypes/info": {
    get: operations["getServiceBoardsByParentIdSubtypesInfo"];
  };
  "/service/boards/{parentId}/subtypes/info/count": {
    get: operations["getServiceBoardsByParentIdSubtypesInfoCount"];
  };
  "/service/boards/{parentId}/teams": {
    get: operations["getServiceBoardsByParentIdTeams"];
    post: operations["postServiceBoardsByParentIdTeams"];
  };
  "/service/boards/{parentId}/teams/{id}": {
    get: operations["getServiceBoardsByParentIdTeamsById"];
    put: operations["putServiceBoardsByParentIdTeamsById"];
    delete: operations["deleteServiceBoardsByParentIdTeamsById"];
    patch: operations["patchServiceBoardsByParentIdTeamsById"];
  };
  "/service/boards/{parentId}/teams/{id}/info": {
    get: operations["getServiceBoardsByParentIdTeamsByIdInfo"];
  };
  "/service/boards/{parentId}/teams/{id}/usages/list": {
    get: operations["getServiceBoardsByParentIdTeamsByIdUsagesList"];
  };
  "/service/boards/{parentId}/teams/count": {
    get: operations["getServiceBoardsByParentIdTeamsCount"];
  };
  "/service/boards/{parentId}/teams/info": {
    get: operations["getServiceBoardsByParentIdTeamsInfo"];
  };
  "/service/boards/{parentId}/teams/info/count": {
    get: operations["getServiceBoardsByParentIdTeamsInfoCount"];
  };
  "/service/boards/{parentId}/types": {
    get: operations["getServiceBoardsByParentIdTypes"];
    post: operations["postServiceBoardsByParentIdTypes"];
  };
  "/service/boards/{parentId}/types/{id}": {
    get: operations["getServiceBoardsByParentIdTypesById"];
    put: operations["putServiceBoardsByParentIdTypesById"];
    delete: operations["deleteServiceBoardsByParentIdTypesById"];
    patch: operations["patchServiceBoardsByParentIdTypesById"];
  };
  "/service/boards/{parentId}/types/{id}/usages": {
    get: operations["getServiceBoardsByParentIdTypesByIdUsages"];
  };
  "/service/boards/{parentId}/types/{id}/usages/list": {
    get: operations["getServiceBoardsByParentIdTypesByIdUsagesList"];
  };
  "/service/boards/{parentId}/types/count": {
    get: operations["getServiceBoardsByParentIdTypesCount"];
  };
  "/service/boards/{parentId}/typeSubTypeItemAssociations": {
    get: operations["getServiceBoardsByParentIdTypeSubTypeItemAssociations"];
  };
  "/service/boards/{parentId}/typeSubTypeItemAssociations/{id}": {
    get: operations["getServiceBoardsByParentIdTypeSubTypeItemAssociationsById"];
  };
  "/service/boards/{parentId}/typeSubTypeItemAssociations/count": {
    get: operations["getServiceBoardsByParentIdTypeSubTypeItemAssociationsCount"];
  };
  "/service/boards/copy": {
    post: operations["postServiceBoardsCopy"];
  };
  "/service/boards/count": {
    get: operations["getServiceBoardsCount"];
  };
  "/service/codes": {
    get: operations["getServiceCodes"];
    post: operations["postServiceCodes"];
  };
  "/service/codes/{id}": {
    get: operations["getServiceCodesById"];
    put: operations["putServiceCodesById"];
    delete: operations["deleteServiceCodesById"];
    patch: operations["patchServiceCodesById"];
  };
  "/service/codes/count": {
    get: operations["getServiceCodesCount"];
  };
  "/service/emailTemplates": {
    get: operations["getServiceEmailTemplates"];
    post: operations["postServiceEmailTemplates"];
  };
  "/service/emailTemplates/{id}": {
    get: operations["getServiceEmailTemplatesById"];
    put: operations["putServiceEmailTemplatesById"];
    delete: operations["deleteServiceEmailTemplatesById"];
    patch: operations["patchServiceEmailTemplatesById"];
  };
  "/service/emailTemplates/{id}/usages": {
    get: operations["getServiceEmailTemplatesByIdUsages"];
  };
  "/service/emailTemplates/{id}/usages/list": {
    get: operations["getServiceEmailTemplatesByIdUsagesList"];
  };
  "/service/emailTemplates/count": {
    get: operations["getServiceEmailTemplatesCount"];
  };
  "/service/impacts": {
    get: operations["getServiceImpacts"];
  };
  "/service/impacts/{id}": {
    get: operations["getServiceImpactsById"];
    put: operations["putServiceImpactsById"];
    patch: operations["patchServiceImpactsById"];
  };
  "/service/impacts/count": {
    get: operations["getServiceImpactsCount"];
  };
  "/service/info/boards": {
    get: operations["getServiceInfoBoards"];
  };
  "/service/info/boards/{id}": {
    get: operations["getServiceInfoBoardsById"];
  };
  "/service/info/boards/count": {
    get: operations["getServiceInfoBoardsCount"];
  };
  "/service/info/boardtypes": {
    get: operations["getServiceInfoBoardtypes"];
  };
  "/service/info/boardtypes/{id}": {
    get: operations["getServiceInfoBoardtypesById"];
  };
  "/service/info/boardtypes/count": {
    get: operations["getServiceInfoBoardtypesCount"];
  };
  "/service/knowledgeBaseArticles": {
    get: operations["getServiceKnowledgeBaseArticles"];
    post: operations["postServiceKnowledgeBaseArticles"];
  };
  "/service/knowledgeBaseArticles/{id}": {
    get: operations["getServiceKnowledgeBaseArticlesById"];
    put: operations["putServiceKnowledgeBaseArticlesById"];
    delete: operations["deleteServiceKnowledgeBaseArticlesById"];
    patch: operations["patchServiceKnowledgeBaseArticlesById"];
  };
  "/service/knowledgeBaseArticles/count": {
    get: operations["getServiceKnowledgeBaseArticlesCount"];
  };
  "/service/knowledgeBaseCategories": {
    get: operations["getServiceKnowledgeBaseCategories"];
    post: operations["postServiceKnowledgeBaseCategories"];
  };
  "/service/knowledgeBaseCategories/{id}": {
    get: operations["getServiceKnowledgeBaseCategoriesById"];
    put: operations["putServiceKnowledgeBaseCategoriesById"];
    delete: operations["deleteServiceKnowledgeBaseCategoriesById"];
    patch: operations["patchServiceKnowledgeBaseCategoriesById"];
  };
  "/service/knowledgeBaseCategories/count": {
    get: operations["getServiceKnowledgeBaseCategoriesCount"];
  };
  "/service/knowledgebasesettings": {
    get: operations["getServiceKnowledgebasesettings"];
    post: operations["postServiceKnowledgebasesettings"];
  };
  "/service/knowledgebasesettings/{id}": {
    get: operations["getServiceKnowledgebasesettingsById"];
    put: operations["putServiceKnowledgebasesettingsById"];
    patch: operations["patchServiceKnowledgebasesettingsById"];
  };
  "/service/knowledgeBaseSubCategories": {
    get: operations["getServiceKnowledgeBaseSubCategories"];
    post: operations["postServiceKnowledgeBaseSubCategories"];
  };
  "/service/knowledgeBaseSubCategories/{id}": {
    get: operations["getServiceKnowledgeBaseSubCategoriesById"];
    put: operations["putServiceKnowledgeBaseSubCategoriesById"];
    delete: operations["deleteServiceKnowledgeBaseSubCategoriesById"];
    patch: operations["patchServiceKnowledgeBaseSubCategoriesById"];
  };
  "/service/knowledgeBaseSubCategories/{id}/usages": {
    get: operations["getServiceKnowledgeBaseSubCategoriesByIdUsages"];
  };
  "/service/knowledgeBaseSubCategories/{id}/usages/list": {
    get: operations["getServiceKnowledgeBaseSubCategoriesByIdUsagesList"];
  };
  "/service/knowledgeBaseSubCategories/count": {
    get: operations["getServiceKnowledgeBaseSubCategoriesCount"];
  };
  "/service/locations": {
    get: operations["getServiceLocations"];
    post: operations["postServiceLocations"];
  };
  "/service/locations/{id}": {
    get: operations["getServiceLocationsById"];
    put: operations["putServiceLocationsById"];
    delete: operations["deleteServiceLocationsById"];
    patch: operations["patchServiceLocationsById"];
  };
  "/service/locations/{id}/info": {
    get: operations["getServiceLocationsByIdInfo"];
  };
  "/service/locations/count": {
    get: operations["getServiceLocationsCount"];
  };
  "/service/locations/info": {
    get: operations["getServiceLocationsInfo"];
  };
  "/service/locations/info/count": {
    get: operations["getServiceLocationsInfoCount"];
  };
  "/service/priorities": {
    get: operations["getServicePriorities"];
    post: operations["postServicePriorities"];
  };
  "/service/priorities/{id}": {
    get: operations["getServicePrioritiesById"];
    put: operations["putServicePrioritiesById"];
    delete: operations["deleteServicePrioritiesById"];
    patch: operations["patchServicePrioritiesById"];
  };
  "/service/priorities/{id}/image": {
    get: operations["getServicePrioritiesByIdImage"];
  };
  "/service/priorities/{id}/usages": {
    get: operations["getServicePrioritiesByIdUsages"];
  };
  "/service/priorities/{id}/usages/list": {
    get: operations["getServicePrioritiesByIdUsagesList"];
  };
  "/service/priorities/count": {
    get: operations["getServicePrioritiesCount"];
  };
  "/service/priority/{id}/info": {
    get: operations["getServicePriorityByIdInfo"];
  };
  "/service/priority/info": {
    get: operations["getServicePriorityInfo"];
  };
  "/service/scheduling/members/{id}/info": {
    get: operations["getServiceSchedulingMembersByIdInfo"];
  };
  "/service/scheduling/members/info": {
    get: operations["getServiceSchedulingMembersInfo"];
  };
  "/service/scheduling/members/info/count": {
    get: operations["getServiceSchedulingMembersInfoCount"];
  };
  "/service/serviceSignoff": {
    get: operations["getServiceServiceSignoff"];
    post: operations["postServiceServiceSignoff"];
  };
  "/service/serviceSignoff/{id}": {
    get: operations["getServiceServiceSignoffById"];
    put: operations["putServiceServiceSignoffById"];
    delete: operations["deleteServiceServiceSignoffById"];
    patch: operations["patchServiceServiceSignoffById"];
  };
  "/service/serviceSignoff/{id}/info": {
    get: operations["getServiceServiceSignoffByIdInfo"];
  };
  "/service/serviceSignoff/{id}/usages": {
    get: operations["getServiceServiceSignoffByIdUsages"];
  };
  "/service/serviceSignoff/{id}/usages/list": {
    get: operations["getServiceServiceSignoffByIdUsagesList"];
  };
  "/service/serviceSignoff/count": {
    get: operations["getServiceServiceSignoffCount"];
  };
  "/service/serviceSignoff/info": {
    get: operations["getServiceServiceSignoffInfo"];
  };
  "/service/serviceSignoff/info/count": {
    get: operations["getServiceServiceSignoffInfoCount"];
  };
  "/service/severities": {
    get: operations["getServiceSeverities"];
  };
  "/service/severities/{id}": {
    get: operations["getServiceSeveritiesById"];
    put: operations["putServiceSeveritiesById"];
    patch: operations["patchServiceSeveritiesById"];
  };
  "/service/severities/count": {
    get: operations["getServiceSeveritiesCount"];
  };
  "/service/slainfo/{id}/info": {
    get: operations["getServiceSlainfoByIdInfo"];
  };
  "/service/slainfo/info": {
    get: operations["getServiceSlainfoInfo"];
  };
  "/service/SLAs": {
    get: operations["getServiceSLAs"];
    post: operations["postServiceSLAs"];
  };
  "/service/SLAs/{id}": {
    get: operations["getServiceSLAsById"];
    put: operations["putServiceSLAsById"];
    delete: operations["deleteServiceSLAsById"];
    patch: operations["patchServiceSLAsById"];
  };
  "/service/SLAs/{id}/usages": {
    get: operations["getServiceSLAsByIdUsages"];
  };
  "/service/SLAs/{id}/usages/list": {
    get: operations["getServiceSLAsByIdUsagesList"];
  };
  "/service/SLAs/{parentId}/priorities": {
    get: operations["getServiceSLAsByParentIdPriorities"];
    post: operations["postServiceSLAsByParentIdPriorities"];
  };
  "/service/SLAs/{parentId}/priorities/{id}": {
    get: operations["getServiceSLAsByParentIdPrioritiesById"];
    put: operations["putServiceSLAsByParentIdPrioritiesById"];
    delete: operations["deleteServiceSLAsByParentIdPrioritiesById"];
    patch: operations["patchServiceSLAsByParentIdPrioritiesById"];
  };
  "/service/SLAs/{parentId}/priorities/count": {
    get: operations["getServiceSLAsByParentIdPrioritiesCount"];
  };
  "/service/SLAs/count": {
    get: operations["getServiceSLAsCount"];
  };
  "/service/SLAs/info/count": {
    get: operations["getServiceSLAsInfoCount"];
  };
  "/service/sources": {
    get: operations["getServiceSources"];
    post: operations["postServiceSources"];
  };
  "/service/sources/{id}": {
    get: operations["getServiceSourcesById"];
    put: operations["putServiceSourcesById"];
    delete: operations["deleteServiceSourcesById"];
    patch: operations["patchServiceSourcesById"];
  };
  "/service/sources/{id}/info": {
    get: operations["getServiceSourcesByIdInfo"];
  };
  "/service/sources/{id}/usages": {
    get: operations["getServiceSourcesByIdUsages"];
  };
  "/service/sources/{id}/usages/list": {
    get: operations["getServiceSourcesByIdUsagesList"];
  };
  "/service/sources/count": {
    get: operations["getServiceSourcesCount"];
  };
  "/service/sources/info": {
    get: operations["getServiceSourcesInfo"];
  };
  "/service/sources/info/count": {
    get: operations["getServiceSourcesInfoCount"];
  };
  "/service/surveys": {
    get: operations["getServiceSurveys"];
    post: operations["postServiceSurveys"];
  };
  "/service/surveys/{grandparentId}/questions/{parentId}/options": {
    get: operations["getServiceSurveysByGrandparentIdQuestionsByParentIdOptions"];
    post: operations["postServiceSurveysByGrandparentIdQuestionsByParentIdOptions"];
  };
  "/service/surveys/{grandparentId}/questions/{parentId}/options/{id}": {
    get: operations["getServiceSurveysByGrandparentIdQuestionsByParentIdOptionsById"];
    put: operations["putServiceSurveysByGrandparentIdQuestionsByParentIdOptionsById"];
    delete: operations["deleteServiceSurveysByGrandparentIdQuestionsByParentIdOptionsById"];
    patch: operations["patchServiceSurveysByGrandparentIdQuestionsByParentIdOptionsById"];
  };
  "/service/surveys/{grandparentId}/questions/{parentId}/options/count": {
    get: operations["getServiceSurveysByGrandparentIdQuestionsByParentIdOptionsCount"];
  };
  "/service/surveys/{id}": {
    get: operations["getServiceSurveysById"];
    put: operations["putServiceSurveysById"];
    delete: operations["deleteServiceSurveysById"];
    patch: operations["patchServiceSurveysById"];
  };
  "/service/surveys/{id}/copy": {
    post: operations["postServiceSurveysByIdCopy"];
  };
  "/service/surveys/{id}/usages": {
    get: operations["getServiceSurveysByIdUsages"];
  };
  "/service/surveys/{id}/usages/list": {
    get: operations["getServiceSurveysByIdUsagesList"];
  };
  "/service/surveys/{parentId}/questions": {
    get: operations["getServiceSurveysByParentIdQuestions"];
    post: operations["postServiceSurveysByParentIdQuestions"];
  };
  "/service/surveys/{parentId}/questions/{id}": {
    get: operations["getServiceSurveysByParentIdQuestionsById"];
    put: operations["putServiceSurveysByParentIdQuestionsById"];
    delete: operations["deleteServiceSurveysByParentIdQuestionsById"];
    patch: operations["patchServiceSurveysByParentIdQuestionsById"];
  };
  "/service/surveys/{parentId}/questions/{id}/copy": {
    post: operations["postServiceSurveysByParentIdQuestionsByIdCopy"];
  };
  "/service/surveys/{parentId}/questions/count": {
    get: operations["getServiceSurveysByParentIdQuestionsCount"];
  };
  "/service/surveys/{parentId}/results": {
    get: operations["getServiceSurveysByParentIdResults"];
    post: operations["postServiceSurveysByParentIdResults"];
  };
  "/service/surveys/{parentId}/results/{id}": {
    get: operations["getServiceSurveysByParentIdResultsById"];
    put: operations["putServiceSurveysByParentIdResultsById"];
    delete: operations["deleteServiceSurveysByParentIdResultsById"];
    patch: operations["patchServiceSurveysByParentIdResultsById"];
  };
  "/service/surveys/{parentId}/results/count": {
    get: operations["getServiceSurveysByParentIdResultsCount"];
  };
  "/service/surveys/count": {
    get: operations["getServiceSurveysCount"];
  };
  "/service/teamMembers": {
    post: operations["postServiceTeamMembers"];
  };
  "/service/teams": {
    get: operations["getServiceTeams"];
  };
  "/service/teams/{id}": {
    get: operations["getServiceTeamsById"];
  };
  "/service/teams/count": {
    get: operations["getServiceTeamsCount"];
  };
  "/service/templates": {
    get: operations["getServiceTemplates"];
  };
  "/service/templates/{id}": {
    get: operations["getServiceTemplatesById"];
  };
  "/service/templates/{id}/generate": {
    post: operations["postServiceTemplatesByIdGenerate"];
  };
  "/service/templates/{id}/info": {
    get: operations["getServiceTemplatesByIdInfo"];
  };
  "/service/templates/count": {
    get: operations["getServiceTemplatesCount"];
  };
  "/service/templates/info": {
    get: operations["getServiceTemplatesInfo"];
  };
  "/service/templates/info/count": {
    get: operations["getServiceTemplatesInfoCount"];
  };
  "/service/ticketLinks": {
    get: operations["getServiceTicketLinks"];
    post: operations["postServiceTicketLinks"];
  };
  "/service/ticketLinks/{id}": {
    get: operations["getServiceTicketLinksById"];
    put: operations["putServiceTicketLinksById"];
    delete: operations["deleteServiceTicketLinksById"];
    patch: operations["patchServiceTicketLinksById"];
  };
  "/service/ticketLinks/{id}/info": {
    get: operations["getServiceTicketLinksByIdInfo"];
  };
  "/service/ticketLinks/count": {
    get: operations["getServiceTicketLinksCount"];
  };
  "/service/ticketLinks/info": {
    get: operations["getServiceTicketLinksInfo"];
  };
  "/service/ticketLinks/info/count": {
    get: operations["getServiceTicketLinksInfoCount"];
  };
  "/service/tickets": {
    get: operations["getServiceTickets"];
    post: operations["postServiceTickets"];
  };
  "/service/tickets/{id}": {
    get: operations["getServiceTicketsById"];
    put: operations["putServiceTicketsById"];
    delete: operations["deleteServiceTicketsById"];
    patch: operations["patchServiceTicketsById"];
  };
  "/service/tickets/{id}/info": {
    get: operations["getServiceTicketsByIdInfo"];
  };
  "/service/tickets/{parentId}/activities": {
    get: operations["getServiceTicketsByParentIdActivities"];
  };
  "/service/tickets/{parentId}/activities/count": {
    get: operations["getServiceTicketsByParentIdActivitiesCount"];
  };
  "/service/tickets/{parentId}/allNotes": {
    get: operations["getServiceTicketsByParentIdAllNotes"];
  };
  "/service/tickets/{parentId}/attachChildren": {
    post: operations["postServiceTicketsByParentIdAttachChildren"];
  };
  "/service/tickets/{parentId}/configurations": {
    get: operations["getServiceTicketsByParentIdConfigurations"];
    post: operations["postServiceTicketsByParentIdConfigurations"];
  };
  "/service/tickets/{parentId}/configurations/{id}": {
    get: operations["getServiceTicketsByParentIdConfigurationsById"];
    delete: operations["deleteServiceTicketsByParentIdConfigurationsById"];
  };
  "/service/tickets/{parentId}/configurations/count": {
    get: operations["getServiceTicketsByParentIdConfigurationsCount"];
  };
  "/service/tickets/{parentId}/convert": {
    post: operations["postServiceTicketsByParentIdConvert"];
  };
  "/service/tickets/{parentId}/documents": {
    get: operations["getServiceTicketsByParentIdDocuments"];
  };
  "/service/tickets/{parentId}/documents/count": {
    get: operations["getServiceTicketsByParentIdDocumentsCount"];
  };
  "/service/tickets/{parentId}/merge": {
    post: operations["postServiceTicketsByParentIdMerge"];
  };
  "/service/tickets/{parentId}/notes": {
    get: operations["getServiceTicketsByParentIdNotes"];
    post: operations["postServiceTicketsByParentIdNotes"];
  };
  "/service/tickets/{parentId}/notes/{id}": {
    get: operations["getServiceTicketsByParentIdNotesById"];
    put: operations["putServiceTicketsByParentIdNotesById"];
    delete: operations["deleteServiceTicketsByParentIdNotesById"];
    patch: operations["patchServiceTicketsByParentIdNotesById"];
  };
  "/service/tickets/{parentId}/notes/count": {
    get: operations["getServiceTicketsByParentIdNotesCount"];
  };
  "/service/tickets/{parentId}/products": {
    get: operations["getServiceTicketsByParentIdProducts"];
  };
  "/service/tickets/{parentId}/products/count": {
    get: operations["getServiceTicketsByParentIdProductsCount"];
  };
  "/service/tickets/{parentId}/scheduleentries": {
    get: operations["getServiceTicketsByParentIdScheduleentries"];
  };
  "/service/tickets/{parentId}/scheduleentries/count": {
    get: operations["getServiceTicketsByParentIdScheduleentriesCount"];
  };
  "/service/tickets/{parentId}/tasks": {
    get: operations["getServiceTicketsByParentIdTasks"];
    post: operations["postServiceTicketsByParentIdTasks"];
  };
  "/service/tickets/{parentId}/tasks/{id}": {
    get: operations["getServiceTicketsByParentIdTasksById"];
    put: operations["putServiceTicketsByParentIdTasksById"];
    delete: operations["deleteServiceTicketsByParentIdTasksById"];
    patch: operations["patchServiceTicketsByParentIdTasksById"];
  };
  "/service/tickets/{parentId}/tasks/count": {
    get: operations["getServiceTicketsByParentIdTasksCount"];
  };
  "/service/tickets/{parentId}/timeentries": {
    get: operations["getServiceTicketsByParentIdTimeentries"];
  };
  "/service/tickets/{parentId}/timeentries/count": {
    get: operations["getServiceTicketsByParentIdTimeentriesCount"];
  };
  "/service/tickets/count": {
    get: operations["getServiceTicketsCount"];
  };
  "/service/tickets/info": {
    get: operations["getServiceTicketsInfo"];
  };
  "/service/tickets/info/count": {
    get: operations["getServiceTicketsInfoCount"];
  };
  "/service/tickets/search": {
    post: operations["postServiceTicketsSearch"];
  };
  "/service/ticketSyncs": {
    get: operations["getServiceTicketSyncs"];
    post: operations["postServiceTicketSyncs"];
  };
  "/service/ticketSyncs/{id}": {
    get: operations["getServiceTicketSyncsById"];
    put: operations["putServiceTicketSyncsById"];
    delete: operations["deleteServiceTicketSyncsById"];
    patch: operations["patchServiceTicketSyncsById"];
  };
  "/service/ticketSyncs/count": {
    get: operations["getServiceTicketSyncsCount"];
  };
  "/system/allowedfiletypes/": {
    get: operations["getSystemAllowedfiletypes"];
  };
  "/system/AllowedFileTypes/": {
    post: operations["postSystemAllowedFileTypes"];
  };
  "/system/allowedfiletypes/{id}": {
    get: operations["getSystemAllowedfiletypesById"];
    put: operations["putSystemAllowedfiletypesById"];
    delete: operations["deleteSystemAllowedfiletypesById"];
    patch: operations["patchSystemAllowedfiletypesById"];
  };
  "/system/allowedfiletypes/count": {
    get: operations["getSystemAllowedfiletypesCount"];
  };
  "/system/allowedorigins": {
    get: operations["getSystemAllowedorigins"];
    post: operations["postSystemAllowedorigins"];
  };
  "/system/allowedorigins/{id}": {
    get: operations["getSystemAllowedoriginsById"];
    put: operations["putSystemAllowedoriginsById"];
    delete: operations["deleteSystemAllowedoriginsById"];
    patch: operations["patchSystemAllowedoriginsById"];
  };
  "/system/allowedorigins/count": {
    get: operations["getSystemAllowedoriginsCount"];
  };
  "/system/apiMembers": {
    get: operations["getSystemApiMembers"];
    post: operations["postSystemApiMembers"];
  };
  "/system/apiMembers/{id}": {
    get: operations["getSystemApiMembersById"];
    put: operations["putSystemApiMembersById"];
    patch: operations["patchSystemApiMembersById"];
  };
  "/system/apiMembers/count": {
    get: operations["getSystemApiMembersCount"];
  };
  "/system/apiMembers/default": {
    get: operations["getSystemApiMembersDefault"];
  };
  "/system/audittrail": {
    get: operations["getSystemAudittrail"];
  };
  "/system/audittrail/count": {
    get: operations["getSystemAudittrailCount"];
  };
  "/system/authAnvils": {
    get: operations["getSystemAuthAnvils"];
  };
  "/system/authAnvils/{id}": {
    get: operations["getSystemAuthAnvilsById"];
    put: operations["putSystemAuthAnvilsById"];
    patch: operations["patchSystemAuthAnvilsById"];
  };
  "/system/authAnvils/count": {
    get: operations["getSystemAuthAnvilsCount"];
  };
  "/system/authAnvils/testConnection": {
    get: operations["getSystemAuthAnvilsTestConnection"];
  };
  "/system/autoSyncTime": {
    get: operations["getSystemAutoSyncTime"];
    post: operations["postSystemAutoSyncTime"];
  };
  "/system/autoSyncTime/{id}": {
    get: operations["getSystemAutoSyncTimeById"];
    put: operations["putSystemAutoSyncTimeById"];
    delete: operations["deleteSystemAutoSyncTimeById"];
    patch: operations["patchSystemAutoSyncTimeById"];
  };
  "/system/autoSyncTime/count": {
    get: operations["getSystemAutoSyncTimeCount"];
  };
  "/system/bundles": {
    post: operations["postSystemBundles"];
  };
  "/system/bundles/count": {
    post: operations["postSystemBundlesCount"];
  };
  "/system/callbacks": {
    get: operations["getSystemCallbacks"];
    post: operations["postSystemCallbacks"];
  };
  "/system/callbacks/{id}": {
    get: operations["getSystemCallbacksById"];
    put: operations["putSystemCallbacksById"];
    delete: operations["deleteSystemCallbacksById"];
    patch: operations["patchSystemCallbacksById"];
  };
  "/system/callbacks/count": {
    get: operations["getSystemCallbacksCount"];
  };
  "/system/certifications": {
    get: operations["getSystemCertifications"];
    post: operations["postSystemCertifications"];
  };
  "/system/certifications/{id}": {
    get: operations["getSystemCertificationsById"];
    put: operations["putSystemCertificationsById"];
    delete: operations["deleteSystemCertificationsById"];
    patch: operations["patchSystemCertificationsById"];
  };
  "/system/certifications/{id}/usages": {
    get: operations["getSystemCertificationsByIdUsages"];
  };
  "/system/certifications/{id}/usages/list": {
    get: operations["getSystemCertificationsByIdUsagesList"];
  };
  "/system/certifications/count": {
    get: operations["getSystemCertificationsCount"];
  };
  "/system/connectWiseHostedScreens": {
    get: operations["getSystemConnectWiseHostedScreens"];
  };
  "/system/connectWiseHostedScreens/{id}": {
    get: operations["getSystemConnectWiseHostedScreensById"];
  };
  "/system/connectWiseHostedScreens/count": {
    get: operations["getSystemConnectWiseHostedScreensCount"];
  };
  "/system/connectwisehostedsetups": {
    get: operations["getSystemConnectwisehostedsetups"];
    post: operations["postSystemConnectwisehostedsetups"];
  };
  "/system/connectwisehostedsetups/{id}": {
    get: operations["getSystemConnectwisehostedsetupsById"];
    put: operations["putSystemConnectwisehostedsetupsById"];
    delete: operations["deleteSystemConnectwisehostedsetupsById"];
    patch: operations["patchSystemConnectwisehostedsetupsById"];
  };
  "/system/connectwisehostedsetups/count": {
    get: operations["getSystemConnectwisehostedsetupsCount"];
  };
  "/system/customReports": {
    get: operations["getSystemCustomReports"];
    post: operations["postSystemCustomReports"];
  };
  "/system/customReports/{id}": {
    get: operations["getSystemCustomReportsById"];
    put: operations["putSystemCustomReportsById"];
    delete: operations["deleteSystemCustomReportsById"];
    patch: operations["patchSystemCustomReportsById"];
  };
  "/system/customReports/{parentId}/parameters": {
    get: operations["getSystemCustomReportsByParentIdParameters"];
    post: operations["postSystemCustomReportsByParentIdParameters"];
  };
  "/system/customReports/{parentId}/parameters/{id}": {
    get: operations["getSystemCustomReportsByParentIdParametersById"];
    put: operations["putSystemCustomReportsByParentIdParametersById"];
    delete: operations["deleteSystemCustomReportsByParentIdParametersById"];
    patch: operations["patchSystemCustomReportsByParentIdParametersById"];
  };
  "/system/customReports/{parentId}/parameters/count": {
    get: operations["getSystemCustomReportsByParentIdParametersCount"];
  };
  "/system/customReports/count": {
    get: operations["getSystemCustomReportsCount"];
  };
  "/system/cwTimeZones": {
    get: operations["getSystemCwTimeZones"];
  };
  "/system/cwTimeZones/{id}": {
    get: operations["getSystemCwTimeZonesById"];
  };
  "/system/cwTimeZones/count": {
    get: operations["getSystemCwTimeZonesCount"];
  };
  "/system/departments": {
    get: operations["getSystemDepartments"];
    post: operations["postSystemDepartments"];
  };
  "/system/departments/{id}": {
    get: operations["getSystemDepartmentsById"];
    put: operations["putSystemDepartmentsById"];
    delete: operations["deleteSystemDepartmentsById"];
    patch: operations["patchSystemDepartmentsById"];
  };
  "/system/departments/{id}/usages": {
    get: operations["getSystemDepartmentsByIdUsages"];
  };
  "/system/departments/{id}/usages/list": {
    get: operations["getSystemDepartmentsByIdUsagesList"];
  };
  "/system/departments/{parentId}/locations": {
    get: operations["getSystemDepartmentsByParentIdLocations"];
    post: operations["postSystemDepartmentsByParentIdLocations"];
  };
  "/system/departments/{parentId}/locations/{id}": {
    get: operations["getSystemDepartmentsByParentIdLocationsById"];
    put: operations["putSystemDepartmentsByParentIdLocationsById"];
    delete: operations["deleteSystemDepartmentsByParentIdLocationsById"];
    patch: operations["patchSystemDepartmentsByParentIdLocationsById"];
  };
  "/system/departments/{parentId}/locations/count": {
    get: operations["getSystemDepartmentsByParentIdLocationsCount"];
  };
  "/system/departments/count": {
    get: operations["getSystemDepartmentsCount"];
  };
  "/system/documents": {
    get: operations["getSystemDocuments"];
    post: operations["postSystemDocuments"];
  };
  "/system/documents/{id}": {
    get: operations["getSystemDocumentsById"];
    post: operations["postSystemDocumentsById"];
    delete: operations["deleteSystemDocumentsById"];
  };
  "/system/documents/{id}/download": {
    get: operations["getSystemDocumentsByIdDownload"];
  };
  "/system/documents/{id}/thumbnail": {
    get: operations["getSystemDocumentsByIdThumbnail"];
  };
  "/system/documents/count": {
    get: operations["getSystemDocumentsCount"];
  };
  "/system/documents/uploadsample": {
    get: operations["getSystemDocumentsUploadsample"];
  };
  "/system/emailConnectors": {
    get: operations["getSystemEmailConnectors"];
    post: operations["postSystemEmailConnectors"];
  };
  "/system/emailConnectors/{grandparentId}/parsingStyles/{parentId}/parsingRules": {
    get: operations["getSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRules"];
    post: operations["postSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRules"];
  };
  "/system/emailConnectors/{grandparentId}/parsingStyles/{parentId}/parsingRules/{id}": {
    get: operations["getSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById"];
    put: operations["putSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById"];
    delete: operations["deleteSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById"];
    patch: operations["patchSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById"];
  };
  "/system/emailConnectors/{grandparentId}/parsingStyles/{parentId}/parsingRules/count": {
    get: operations["getSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesCount"];
  };
  "/system/emailConnectors/{id}": {
    get: operations["getSystemEmailConnectorsById"];
    put: operations["putSystemEmailConnectorsById"];
    delete: operations["deleteSystemEmailConnectorsById"];
    patch: operations["patchSystemEmailConnectorsById"];
  };
  "/system/emailConnectors/{id}/info": {
    get: operations["getSystemEmailConnectorsByIdInfo"];
  };
  "/system/emailConnectors/{parentId}/parsingStyles": {
    get: operations["getSystemEmailConnectorsByParentIdParsingStyles"];
    post: operations["postSystemEmailConnectorsByParentIdParsingStyles"];
  };
  "/system/emailConnectors/{parentId}/parsingStyles/{id}": {
    get: operations["getSystemEmailConnectorsByParentIdParsingStylesById"];
    put: operations["putSystemEmailConnectorsByParentIdParsingStylesById"];
    delete: operations["deleteSystemEmailConnectorsByParentIdParsingStylesById"];
    patch: operations["patchSystemEmailConnectorsByParentIdParsingStylesById"];
  };
  "/system/emailConnectors/{parentId}/parsingStyles/count": {
    get: operations["getSystemEmailConnectorsByParentIdParsingStylesCount"];
  };
  "/system/emailConnectors/count": {
    get: operations["getSystemEmailConnectorsCount"];
  };
  "/system/emailConnectors/info": {
    get: operations["getSystemEmailConnectorsInfo"];
  };
  "/system/emailConnectors/info/count": {
    get: operations["getSystemEmailConnectorsInfoCount"];
  };
  "/system/emailExclusions": {
    get: operations["getSystemEmailExclusions"];
    post: operations["postSystemEmailExclusions"];
  };
  "/system/emailExclusions/{id}": {
    get: operations["getSystemEmailExclusionsById"];
    put: operations["putSystemEmailExclusionsById"];
    delete: operations["deleteSystemEmailExclusionsById"];
    patch: operations["patchSystemEmailExclusionsById"];
  };
  "/system/emailExclusions/count": {
    get: operations["getSystemEmailExclusionsCount"];
  };
  "/system/emailTokens": {
    get: operations["getSystemEmailTokens"];
  };
  "/system/emailTokens/{id}": {
    get: operations["getSystemEmailTokensById"];
  };
  "/system/emailTokens/count": {
    get: operations["getSystemEmailTokensCount"];
  };
  "/system/ePayConfigurations": {
    get: operations["getSystemEPayConfigurations"];
    post: operations["postSystemEPayConfigurations"];
  };
  "/system/ePayConfigurations/{id}": {
    get: operations["getSystemEPayConfigurationsById"];
    put: operations["putSystemEPayConfigurationsById"];
    delete: operations["deleteSystemEPayConfigurationsById"];
    patch: operations["patchSystemEPayConfigurationsById"];
  };
  "/system/ePayConfigurations/count": {
    get: operations["getSystemEPayConfigurationsCount"];
  };
  "/system/experiments": {
    get: operations["getSystemExperiments"];
  };
  "/system/experiments/{id}": {
    get: operations["getSystemExperimentsById"];
  };
  "/system/experiments/count": {
    get: operations["getSystemExperimentsCount"];
  };
  "/system/fileuploadsettings/": {
    get: operations["getSystemFileuploadsettings"];
  };
  "/system/fileuploadsettings/{id}": {
    get: operations["getSystemFileuploadsettingsById"];
    put: operations["putSystemFileuploadsettingsById"];
    patch: operations["patchSystemFileuploadsettingsById"];
  };
  "/system/fileuploadsettings/count": {
    get: operations["getSystemFileuploadsettingsCount"];
  };
  "/system/googleemailsetup/": {
    get: operations["getSystemGoogleemailsetup"];
    post: operations["postSystemGoogleemailsetup"];
  };
  "/system/googleemailsetup/{id}": {
    get: operations["getSystemGoogleemailsetupById"];
    put: operations["putSystemGoogleemailsetupById"];
    delete: operations["deleteSystemGoogleemailsetupById"];
    patch: operations["patchSystemGoogleemailsetupById"];
  };
  "/system/googleemailsetup/{id}/testConnection": {
    post: operations["postSystemGoogleemailsetupByIdTestConnection"];
  };
  "/system/googleemailsetup/count": {
    get: operations["getSystemGoogleemailsetupCount"];
  };
  "/system/imaps": {
    get: operations["getSystemImaps"];
    post: operations["postSystemImaps"];
  };
  "/system/imaps/{id}": {
    get: operations["getSystemImapsById"];
    put: operations["putSystemImapsById"];
    delete: operations["deleteSystemImapsById"];
    patch: operations["patchSystemImapsById"];
  };
  "/system/imaps/{id}/info": {
    get: operations["getSystemImapsByIdInfo"];
  };
  "/system/imaps/count": {
    get: operations["getSystemImapsCount"];
  };
  "/system/imaps/info": {
    get: operations["getSystemImapsInfo"];
  };
  "/system/imaps/info/count": {
    get: operations["getSystemImapsInfoCount"];
  };
  "/system/importMassMaintenance/{id}": {
    post: operations["postSystemImportMassMaintenanceById"];
  };
  "/system/info": {
    get: operations["getSystemInfo"];
  };
  "/system/info/departmentlocations": {
    get: operations["getSystemInfoDepartmentlocations"];
  };
  "/system/info/departmentlocations/{id}": {
    get: operations["getSystemInfoDepartmentlocationsById"];
  };
  "/system/info/departmentlocations/count": {
    get: operations["getSystemInfoDepartmentlocationsCount"];
  };
  "/system/info/departments": {
    get: operations["getSystemInfoDepartments"];
  };
  "/system/info/departments/{id}": {
    get: operations["getSystemInfoDepartmentsById"];
  };
  "/system/info/departments/count": {
    get: operations["getSystemInfoDepartmentsCount"];
  };
  "/system/info/links": {
    get: operations["getSystemInfoLinks"];
  };
  "/system/info/links/{id}": {
    get: operations["getSystemInfoLinksById"];
  };
  "/system/info/links/{id}/resolveurl": {
    post: operations["postSystemInfoLinksByIdResolveurl"];
  };
  "/system/info/links/count": {
    get: operations["getSystemInfoLinksCount"];
  };
  "/system/info/locales": {
    get: operations["getSystemInfoLocales"];
  };
  "/system/info/locales/{id}": {
    get: operations["getSystemInfoLocalesById"];
  };
  "/system/info/locales/count": {
    get: operations["getSystemInfoLocalesCount"];
  };
  "/system/info/locations": {
    get: operations["getSystemInfoLocations"];
  };
  "/system/info/locations/{id}": {
    get: operations["getSystemInfoLocationsById"];
  };
  "/system/info/locations/count": {
    get: operations["getSystemInfoLocationsCount"];
  };
  "/system/info/members": {
    get: operations["getSystemInfoMembers"];
  };
  "/system/info/members/{id}": {
    get: operations["getSystemInfoMembersById"];
  };
  "/system/info/members/{memberIdentifier:regex(^(types. |(": {
    get: operations["getSystemInfoMembersmemberIdentifierregextypes"];
  };
  "/system/info/members/count": {
    get: operations["getSystemInfoMembersCount"];
  };
  "/system/info/personas": {
    get: operations["getSystemInfoPersonas"];
  };
  "/system/info/personas/{id}": {
    get: operations["getSystemInfoPersonasById"];
  };
  "/system/info/personas/count": {
    get: operations["getSystemInfoPersonasCount"];
  };
  "/system/info/standardNotes": {
    get: operations["getSystemInfoStandardNotes"];
  };
  "/system/info/standardNotes/{id}": {
    get: operations["getSystemInfoStandardNotesById"];
  };
  "/system/info/standardNotes/count": {
    get: operations["getSystemInfoStandardNotesCount"];
  };
  "/system/inOutBoards": {
    get: operations["getSystemInOutBoards"];
    post: operations["postSystemInOutBoards"];
  };
  "/system/inOutBoards/{id}": {
    get: operations["getSystemInOutBoardsById"];
    put: operations["putSystemInOutBoardsById"];
    delete: operations["deleteSystemInOutBoardsById"];
    patch: operations["patchSystemInOutBoardsById"];
  };
  "/system/inOutBoards/count": {
    get: operations["getSystemInOutBoardsCount"];
  };
  "/system/inOutTypes": {
    get: operations["getSystemInOutTypes"];
    post: operations["postSystemInOutTypes"];
  };
  "/system/inOutTypes/{id}": {
    get: operations["getSystemInOutTypesById"];
    put: operations["putSystemInOutTypesById"];
    delete: operations["deleteSystemInOutTypesById"];
    patch: operations["patchSystemInOutTypesById"];
  };
  "/system/inOutTypes/{id}/info": {
    get: operations["getSystemInOutTypesByIdInfo"];
  };
  "/system/inOutTypes/count": {
    get: operations["getSystemInOutTypesCount"];
  };
  "/system/inOutTypes/count/info": {
    get: operations["getSystemInOutTypesCountInfo"];
  };
  "/system/inOutTypes/info": {
    get: operations["getSystemInOutTypesInfo"];
  };
  "/system/integratorlogins": {
    get: operations["getSystemIntegratorlogins"];
    post: operations["postSystemIntegratorlogins"];
  };
  "/system/integratorlogins/{id}": {
    get: operations["getSystemIntegratorloginsById"];
    put: operations["putSystemIntegratorloginsById"];
    delete: operations["deleteSystemIntegratorloginsById"];
    patch: operations["patchSystemIntegratorloginsById"];
  };
  "/system/integratorlogins/count": {
    get: operations["getSystemIntegratorloginsCount"];
  };
  "/system/integratorTags": {
    get: operations["getSystemIntegratorTags"];
    post: operations["postSystemIntegratorTags"];
  };
  "/system/integratorTags/{id}": {
    get: operations["getSystemIntegratorTagsById"];
    put: operations["putSystemIntegratorTagsById"];
    delete: operations["deleteSystemIntegratorTagsById"];
    patch: operations["patchSystemIntegratorTagsById"];
  };
  "/system/integratorTags/count": {
    get: operations["getSystemIntegratorTagsCount"];
  };
  "/system/kpiCategories": {
    get: operations["getSystemKpiCategories"];
  };
  "/system/kpiCategories/{id}": {
    get: operations["getSystemKpiCategoriesById"];
  };
  "/system/kpiCategories/count": {
    get: operations["getSystemKpiCategoriesCount"];
  };
  "/system/kpis": {
    get: operations["getSystemKpis"];
  };
  "/system/kpis/{id}": {
    get: operations["getSystemKpisById"];
  };
  "/system/kpis/count": {
    get: operations["getSystemKpisCount"];
  };
  "/system/ldapConfigurations": {
    get: operations["getSystemLdapConfigurations"];
    post: operations["postSystemLdapConfigurations"];
  };
  "/system/ldapConfigurations/{id}": {
    get: operations["getSystemLdapConfigurationsById"];
    put: operations["putSystemLdapConfigurationsById"];
    delete: operations["deleteSystemLdapConfigurationsById"];
    patch: operations["patchSystemLdapConfigurationsById"];
  };
  "/system/ldapConfigurations/{id}/info": {
    get: operations["getSystemLdapConfigurationsByIdInfo"];
  };
  "/system/ldapConfigurations/count": {
    get: operations["getSystemLdapConfigurationsCount"];
  };
  "/system/ldapConfigurations/info": {
    get: operations["getSystemLdapConfigurationsInfo"];
  };
  "/system/ldapConfigurations/info/count": {
    get: operations["getSystemLdapConfigurationsInfoCount"];
  };
  "/system/ldapConfigurations/testLink": {
    post: operations["postSystemLdapConfigurationsTestLink"];
  };
  "/system/links": {
    get: operations["getSystemLinks"];
    post: operations["postSystemLinks"];
  };
  "/system/links/{id}": {
    get: operations["getSystemLinksById"];
    put: operations["putSystemLinksById"];
    delete: operations["deleteSystemLinksById"];
    patch: operations["patchSystemLinksById"];
  };
  "/system/links/count": {
    get: operations["getSystemLinksCount"];
  };
  "/system/locations": {
    get: operations["getSystemLocations"];
    post: operations["postSystemLocations"];
  };
  "/system/locations/{id}": {
    get: operations["getSystemLocationsById"];
    put: operations["putSystemLocationsById"];
    delete: operations["deleteSystemLocationsById"];
    patch: operations["patchSystemLocationsById"];
  };
  "/system/locations/{id}/usages": {
    get: operations["getSystemLocationsByIdUsages"];
  };
  "/system/locations/{id}/usages/list": {
    get: operations["getSystemLocationsByIdUsagesList"];
  };
  "/system/locations/{parentId}/departments": {
    get: operations["getSystemLocationsByParentIdDepartments"];
  };
  "/system/locations/{parentId}/departments/{id}": {
    get: operations["getSystemLocationsByParentIdDepartmentsById"];
  };
  "/system/locations/{parentId}/departments/count": {
    get: operations["getSystemLocationsByParentIdDepartmentsCount"];
  };
  "/system/locations/{parentId}/workRoles": {
    get: operations["getSystemLocationsByParentIdWorkRoles"];
  };
  "/system/locations/{parentId}/workRoles/{id}": {
    get: operations["getSystemLocationsByParentIdWorkRolesById"];
  };
  "/system/locations/{parentId}/workRoles/count": {
    get: operations["getSystemLocationsByParentIdWorkRolesCount"];
  };
  "/system/locations/count": {
    get: operations["getSystemLocationsCount"];
  };
  "/system/managementNetworkSecurities": {
    get: operations["getSystemManagementNetworkSecurities"];
    post: operations["postSystemManagementNetworkSecurities"];
  };
  "/system/managementNetworkSecurities/{id}": {
    get: operations["getSystemManagementNetworkSecuritiesById"];
    put: operations["putSystemManagementNetworkSecuritiesById"];
    delete: operations["deleteSystemManagementNetworkSecuritiesById"];
    patch: operations["patchSystemManagementNetworkSecuritiesById"];
  };
  "/system/managementNetworkSecurities/{id}/testCredentials": {
    get: operations["getSystemManagementNetworkSecuritiesByIdTestCredentials"];
  };
  "/system/managementNetworkSecurities/count": {
    get: operations["getSystemManagementNetworkSecuritiesCount"];
  };
  "/system/marketplaceimport/getdefinition/{id}": {
    get: operations["getSystemMarketplaceimportGetdefinitionById"];
  };
  "/system/marketplaceimport/import": {
    post: operations["postSystemMarketplaceimportImport"];
  };
  "/system/members": {
    get: operations["getSystemMembers"];
    post: operations["postSystemMembers"];
  };
  "/system/members/{id}": {
    get: operations["getSystemMembersById"];
    put: operations["putSystemMembersById"];
    patch: operations["patchSystemMembersById"];
  };
  "/system/members/{id}/deactivate": {
    post: operations["postSystemMembersByIdDeactivate"];
  };
  "/system/members/{id}/image": {
    get: operations["getSystemMembersByIdImage"];
  };
  "/system/members/{id}/linkSsoUser": {
    post: operations["postSystemMembersByIdLinkSsoUser"];
  };
  "/system/members/{id}/submit": {
    post: operations["postSystemMembersByIdSubmit"];
  };
  "/system/members/{id}/unlinkSsoUser": {
    post: operations["postSystemMembersByIdUnlinkSsoUser"];
  };
  "/system/members/{id}/unusedTimeSheets": {
    delete: operations["deleteSystemMembersByIdUnusedTimeSheets"];
  };
  "/system/members/{id}/usages": {
    get: operations["getSystemMembersByIdUsages"];
  };
  "/system/members/{id}/usages/list": {
    get: operations["getSystemMembersByIdUsagesList"];
  };
  "/system/members/{memberIdentifier:regex(^(types. |(": {
    get: operations["getSystemMembersmemberIdentifierregextypes"];
  };
  "/system/members/{memberIdentifier}/tokens": {
    post: operations["postSystemMembersByMemberIdentifierTokens"];
  };
  "/system/members/{parentId}/accruals": {
    get: operations["getSystemMembersByParentIdAccruals"];
    post: operations["postSystemMembersByParentIdAccruals"];
  };
  "/system/members/{parentId}/accruals/{id}": {
    get: operations["getSystemMembersByParentIdAccrualsById"];
    put: operations["putSystemMembersByParentIdAccrualsById"];
    delete: operations["deleteSystemMembersByParentIdAccrualsById"];
    patch: operations["patchSystemMembersByParentIdAccrualsById"];
  };
  "/system/members/{parentId}/accruals/count": {
    get: operations["getSystemMembersByParentIdAccrualsCount"];
  };
  "/system/members/{parentId}/certifications": {
    get: operations["getSystemMembersByParentIdCertifications"];
    post: operations["postSystemMembersByParentIdCertifications"];
  };
  "/system/members/{parentId}/certifications/{id}": {
    get: operations["getSystemMembersByParentIdCertificationsById"];
    put: operations["putSystemMembersByParentIdCertificationsById"];
    delete: operations["deleteSystemMembersByParentIdCertificationsById"];
    patch: operations["patchSystemMembersByParentIdCertificationsById"];
  };
  "/system/members/{parentId}/certifications/count": {
    get: operations["getSystemMembersByParentIdCertificationsCount"];
  };
  "/system/members/{parentId}/delegations": {
    get: operations["getSystemMembersByParentIdDelegations"];
    post: operations["postSystemMembersByParentIdDelegations"];
  };
  "/system/members/{parentId}/delegations/{id}": {
    get: operations["getSystemMembersByParentIdDelegationsById"];
    put: operations["putSystemMembersByParentIdDelegationsById"];
    delete: operations["deleteSystemMembersByParentIdDelegationsById"];
    patch: operations["patchSystemMembersByParentIdDelegationsById"];
  };
  "/system/members/{parentId}/delegations/count": {
    get: operations["getSystemMembersByParentIdDelegationsCount"];
  };
  "/system/members/{parentId}/managedDeviceAccounts": {
    get: operations["getSystemMembersByParentIdManagedDeviceAccounts"];
  };
  "/system/members/{parentId}/managedDeviceAccounts/bulk": {
    put: operations["putSystemMembersByParentIdManagedDeviceAccountsBulk"];
    delete: operations["deleteSystemMembersByParentIdManagedDeviceAccountsBulk"];
  };
  "/system/members/{parentId}/mycertifications": {
    get: operations["getSystemMembersByParentIdMycertifications"];
    post: operations["postSystemMembersByParentIdMycertifications"];
  };
  "/system/members/{parentId}/mycertifications/{id}": {
    get: operations["getSystemMembersByParentIdMycertificationsById"];
    put: operations["putSystemMembersByParentIdMycertificationsById"];
    delete: operations["deleteSystemMembersByParentIdMycertificationsById"];
    patch: operations["patchSystemMembersByParentIdMycertificationsById"];
  };
  "/system/members/{parentId}/mycertifications/count": {
    get: operations["getSystemMembersByParentIdMycertificationsCount"];
  };
  "/system/members/{parentId}/notificationSettings": {
    get: operations["getSystemMembersByParentIdNotificationSettings"];
    post: operations["postSystemMembersByParentIdNotificationSettings"];
  };
  "/system/members/{parentId}/notificationSettings/{id}": {
    get: operations["getSystemMembersByParentIdNotificationSettingsById"];
    put: operations["putSystemMembersByParentIdNotificationSettingsById"];
    delete: operations["deleteSystemMembersByParentIdNotificationSettingsById"];
    patch: operations["patchSystemMembersByParentIdNotificationSettingsById"];
  };
  "/system/members/{parentId}/notificationSettings/count": {
    get: operations["getSystemMembersByParentIdNotificationSettingsCount"];
  };
  "/system/members/{parentId}/personas": {
    get: operations["getSystemMembersByParentIdPersonas"];
  };
  "/system/members/{parentId}/personas/{id}": {
    get: operations["getSystemMembersByParentIdPersonasById"];
  };
  "/system/members/{parentId}/personas/count": {
    get: operations["getSystemMembersByParentIdPersonasCount"];
  };
  "/system/members/{parentId}/skills": {
    get: operations["getSystemMembersByParentIdSkills"];
    post: operations["postSystemMembersByParentIdSkills"];
  };
  "/system/members/{parentId}/skills/{id}": {
    get: operations["getSystemMembersByParentIdSkillsById"];
    put: operations["putSystemMembersByParentIdSkillsById"];
    delete: operations["deleteSystemMembersByParentIdSkillsById"];
    patch: operations["patchSystemMembersByParentIdSkillsById"];
  };
  "/system/members/{parentId}/skills/count": {
    get: operations["getSystemMembersByParentIdSkillsCount"];
  };
  "/system/members/count": {
    get: operations["getSystemMembersCount"];
  };
  "/system/members/types": {
    get: operations["getSystemMembersTypes"];
    post: operations["postSystemMembersTypes"];
  };
  "/system/members/types/{id}": {
    get: operations["getSystemMembersTypesById"];
    put: operations["putSystemMembersTypesById"];
    delete: operations["deleteSystemMembersTypesById"];
    patch: operations["patchSystemMembersTypesById"];
  };
  "/system/members/types/{id}/info": {
    get: operations["getSystemMembersTypesByIdInfo"];
  };
  "/system/members/types/count": {
    get: operations["getSystemMembersTypesCount"];
  };
  "/system/members/types/info": {
    get: operations["getSystemMembersTypesInfo"];
  };
  "/system/members/types/info/count": {
    get: operations["getSystemMembersTypesInfoCount"];
  };
  "/system/members/withSso": {
    get: operations["getSystemMembersWithSso"];
  };
  "/system/menuentries": {
    get: operations["getSystemMenuentries"];
    post: operations["postSystemMenuentries"];
  };
  "/system/menuentries/{id}": {
    get: operations["getSystemMenuentriesById"];
    put: operations["putSystemMenuentriesById"];
    delete: operations["deleteSystemMenuentriesById"];
    patch: operations["patchSystemMenuentriesById"];
  };
  "/system/menuentries/{id}/image": {
    get: operations["getSystemMenuentriesByIdImage"];
    post: operations["postSystemMenuentriesByIdImage"];
  };
  "/system/menuEntries/{parentId}/locations": {
    get: operations["getSystemMenuEntriesByParentIdLocations"];
    post: operations["postSystemMenuEntriesByParentIdLocations"];
  };
  "/system/menuEntries/{parentId}/locations/{id}": {
    get: operations["getSystemMenuEntriesByParentIdLocationsById"];
    delete: operations["deleteSystemMenuEntriesByParentIdLocationsById"];
  };
  "/system/menuEntries/{parentId}/locations/count": {
    get: operations["getSystemMenuEntriesByParentIdLocationsCount"];
  };
  "/system/menuentries/count": {
    get: operations["getSystemMenuentriesCount"];
  };
  "/system/myAccount/{id}": {
    get: operations["getSystemMyAccountById"];
    put: operations["putSystemMyAccountById"];
    patch: operations["patchSystemMyAccountById"];
  };
  "/system/myAccount/{parentId}/delegations": {
    get: operations["getSystemMyAccountByParentIdDelegations"];
    post: operations["postSystemMyAccountByParentIdDelegations"];
  };
  "/system/myAccount/{parentId}/delegations/{id}": {
    get: operations["getSystemMyAccountByParentIdDelegationsById"];
    put: operations["putSystemMyAccountByParentIdDelegationsById"];
    delete: operations["deleteSystemMyAccountByParentIdDelegationsById"];
    patch: operations["patchSystemMyAccountByParentIdDelegationsById"];
  };
  "/system/myAccount/{parentId}/delegations/count": {
    get: operations["getSystemMyAccountByParentIdDelegationsCount"];
  };
  "/system/myAccount/{parentId}/skills": {
    get: operations["getSystemMyAccountByParentIdSkills"];
    post: operations["postSystemMyAccountByParentIdSkills"];
  };
  "/system/myAccount/{parentId}/skills/{id}": {
    get: operations["getSystemMyAccountByParentIdSkillsById"];
    put: operations["putSystemMyAccountByParentIdSkillsById"];
    delete: operations["deleteSystemMyAccountByParentIdSkillsById"];
    patch: operations["patchSystemMyAccountByParentIdSkillsById"];
  };
  "/system/myAccount/{parentId}/skills/count": {
    get: operations["getSystemMyAccountByParentIdSkillsCount"];
  };
  "/system/myCompany/corporateStructure": {
    get: operations["getSystemMyCompanyCorporateStructure"];
  };
  "/system/myCompany/corporateStructure/{id}": {
    get: operations["getSystemMyCompanyCorporateStructureById"];
    put: operations["putSystemMyCompanyCorporateStructureById"];
    patch: operations["patchSystemMyCompanyCorporateStructureById"];
  };
  "/system/myCompany/corporateStructure/{id}/info": {
    get: operations["getSystemMyCompanyCorporateStructureByIdInfo"];
  };
  "/system/myCompany/corporateStructure/count": {
    get: operations["getSystemMyCompanyCorporateStructureCount"];
  };
  "/system/myCompany/corporateStructure/info": {
    get: operations["getSystemMyCompanyCorporateStructureInfo"];
  };
  "/system/myCompany/corporateStructure/info/count": {
    get: operations["getSystemMyCompanyCorporateStructureInfoCount"];
  };
  "/system/myCompany/corporateStructureLevels": {
    get: operations["getSystemMyCompanyCorporateStructureLevels"];
  };
  "/system/myCompany/corporateStructureLevels/{id}": {
    get: operations["getSystemMyCompanyCorporateStructureLevelsById"];
  };
  "/system/myCompany/corporateStructureLevels/count": {
    get: operations["getSystemMyCompanyCorporateStructureLevelsCount"];
  };
  "/system/myCompany/crm": {
    get: operations["getSystemMyCompanyCrm"];
  };
  "/system/myCompany/crm/{id}": {
    get: operations["getSystemMyCompanyCrmById"];
    put: operations["putSystemMyCompanyCrmById"];
    patch: operations["patchSystemMyCompanyCrmById"];
  };
  "/system/myCompany/crm/{id}/info": {
    get: operations["getSystemMyCompanyCrmByIdInfo"];
  };
  "/system/myCompany/crm/count": {
    get: operations["getSystemMyCompanyCrmCount"];
  };
  "/system/myCompany/crm/info": {
    get: operations["getSystemMyCompanyCrmInfo"];
  };
  "/system/myCompany/crm/info/count": {
    get: operations["getSystemMyCompanyCrmInfoCount"];
  };
  "/system/mycompany/documents": {
    get: operations["getSystemMycompanyDocuments"];
  };
  "/system/mycompany/documents/{id}": {
    get: operations["getSystemMycompanyDocumentsById"];
    put: operations["putSystemMycompanyDocumentsById"];
    patch: operations["patchSystemMycompanyDocumentsById"];
  };
  "/system/mycompany/info/services": {
    get: operations["getSystemMycompanyInfoServices"];
  };
  "/system/mycompany/info/services/{id}": {
    get: operations["getSystemMycompanyInfoServicesById"];
  };
  "/system/myCompany/other": {
    get: operations["getSystemMyCompanyOther"];
  };
  "/system/myCompany/other/{id}": {
    get: operations["getSystemMyCompanyOtherById"];
    put: operations["putSystemMyCompanyOtherById"];
    patch: operations["patchSystemMyCompanyOtherById"];
  };
  "/system/myCompany/other/count": {
    get: operations["getSystemMyCompanyOtherCount"];
  };
  "/system/mycompany/reportingServices": {
    get: operations["getSystemMycompanyReportingServices"];
  };
  "/system/mycompany/reportingServices/{id}": {
    get: operations["getSystemMycompanyReportingServicesById"];
    put: operations["putSystemMycompanyReportingServicesById"];
    patch: operations["patchSystemMycompanyReportingServicesById"];
  };
  "/system/mycompany/reportingServices/{id}/testConnection": {
    post: operations["postSystemMycompanyReportingServicesByIdTestConnection"];
  };
  "/system/mycompany/services": {
    get: operations["getSystemMycompanyServices"];
  };
  "/system/mycompany/services/{id}": {
    get: operations["getSystemMycompanyServicesById"];
    put: operations["putSystemMycompanyServicesById"];
    patch: operations["patchSystemMycompanyServicesById"];
  };
  "/system/myCompany/timeExpense": {
    get: operations["getSystemMyCompanyTimeExpense"];
  };
  "/system/myCompany/timeExpense/{id}": {
    get: operations["getSystemMyCompanyTimeExpenseById"];
    put: operations["putSystemMyCompanyTimeExpenseById"];
    patch: operations["patchSystemMyCompanyTimeExpenseById"];
  };
  "/system/myCompany/timeExpense/count": {
    get: operations["getSystemMyCompanyTimeExpenseCount"];
  };
  "/system/myMembers": {
    get: operations["getSystemMyMembers"];
  };
  "/system/myMembers/info": {
    get: operations["getSystemMyMembersInfo"];
  };
  "/system/mySecurity": {
    get: operations["getSystemMySecurity"];
  };
  "/system/mySecurity/customizeItems/": {
    get: operations["getSystemMySecurityCustomizeItems"];
  };
  "/system/notificationRecipients": {
    get: operations["getSystemNotificationRecipients"];
  };
  "/system/notificationRecipients/{id}": {
    get: operations["getSystemNotificationRecipientsById"];
  };
  "/system/notificationRecipients/count": {
    get: operations["getSystemNotificationRecipientsCount"];
  };
  "/system/office365/emailSetups": {
    get: operations["getSystemOffice365EmailSetups"];
    post: operations["postSystemOffice365EmailSetups"];
  };
  "/system/office365/emailSetups/{id}": {
    get: operations["getSystemOffice365EmailSetupsById"];
    put: operations["putSystemOffice365EmailSetupsById"];
    delete: operations["deleteSystemOffice365EmailSetupsById"];
    patch: operations["patchSystemOffice365EmailSetupsById"];
  };
  "/system/office365/emailSetups/{id}/authorize": {
    post: operations["postSystemOffice365EmailSetupsByIdAuthorize"];
  };
  "/system/office365/emailSetups/{id}/testConnection": {
    post: operations["postSystemOffice365EmailSetupsByIdTestConnection"];
  };
  "/system/office365/emailSetups/count": {
    get: operations["getSystemOffice365EmailSetupsCount"];
  };
  "/system/osgradeweights": {
    get: operations["getSystemOsgradeweights"];
  };
  "/system/osgradeweights/{id}": {
    get: operations["getSystemOsgradeweightsById"];
    put: operations["putSystemOsgradeweightsById"];
    patch: operations["patchSystemOsgradeweightsById"];
  };
  "/system/osgradeweights/count": {
    get: operations["getSystemOsgradeweightsCount"];
  };
  "/system/parsingTypes": {
    get: operations["getSystemParsingTypes"];
  };
  "/system/parsingTypes/{id}": {
    get: operations["getSystemParsingTypesById"];
  };
  "/system/parsingTypes/count": {
    get: operations["getSystemParsingTypesCount"];
  };
  "/system/parsingVariables": {
    get: operations["getSystemParsingVariables"];
  };
  "/system/parsingVariables/{id}": {
    get: operations["getSystemParsingVariablesById"];
  };
  "/system/parsingVariables/count": {
    get: operations["getSystemParsingVariablesCount"];
  };
  "/system/portalReports": {
    get: operations["getSystemPortalReports"];
    post: operations["postSystemPortalReports"];
  };
  "/system/portalReports/{id}": {
    get: operations["getSystemPortalReportsById"];
    put: operations["putSystemPortalReportsById"];
    delete: operations["deleteSystemPortalReportsById"];
    patch: operations["patchSystemPortalReportsById"];
  };
  "/system/portalReports/count": {
    get: operations["getSystemPortalReportsCount"];
  };
  "/system/quoteLinkSetup": {
    get: operations["getSystemQuoteLinkSetup"];
    post: operations["postSystemQuoteLinkSetup"];
  };
  "/system/quoteLinkSetup/{id}": {
    get: operations["getSystemQuoteLinkSetupById"];
    put: operations["putSystemQuoteLinkSetupById"];
    delete: operations["deleteSystemQuoteLinkSetupById"];
    patch: operations["patchSystemQuoteLinkSetupById"];
  };
  "/system/quoteLinkSetup/count": {
    get: operations["getSystemQuoteLinkSetupCount"];
  };
  "/system/quoteLinkSetup/testConnection": {
    get: operations["getSystemQuoteLinkSetupTestConnection"];
  };
  "/system/reportCards": {
    get: operations["getSystemReportCards"];
    post: operations["postSystemReportCards"];
  };
  "/system/reportCards/{id}": {
    get: operations["getSystemReportCardsById"];
    put: operations["putSystemReportCardsById"];
    delete: operations["deleteSystemReportCardsById"];
    patch: operations["patchSystemReportCardsById"];
  };
  "/system/reportCards/{id}/info": {
    get: operations["getSystemReportCardsByIdInfo"];
  };
  "/system/reportCards/{parentId}/details": {
    get: operations["getSystemReportCardsByParentIdDetails"];
    post: operations["postSystemReportCardsByParentIdDetails"];
  };
  "/system/reportCards/{parentId}/details/{id}": {
    get: operations["getSystemReportCardsByParentIdDetailsById"];
    put: operations["putSystemReportCardsByParentIdDetailsById"];
    delete: operations["deleteSystemReportCardsByParentIdDetailsById"];
    patch: operations["patchSystemReportCardsByParentIdDetailsById"];
  };
  "/system/reportCards/{parentId}/details/count": {
    get: operations["getSystemReportCardsByParentIdDetailsCount"];
  };
  "/system/reportCards/count": {
    get: operations["getSystemReportCardsCount"];
  };
  "/system/reportCards/info": {
    get: operations["getSystemReportCardsInfo"];
  };
  "/system/reportCards/info/count": {
    get: operations["getSystemReportCardsInfoCount"];
  };
  "/system/reports": {
    get: operations["getSystemReports"];
  };
  "/system/reports/{reportName}": {
    get: operations["getSystemReportsByReportName"];
  };
  "/system/reports/{reportName}/columns": {
    get: operations["getSystemReportsByReportNameColumns"];
  };
  "/system/reports/{reportName}/count": {
    get: operations["getSystemReportsByReportNameCount"];
  };
  "/system/securityroles": {
    get: operations["getSystemSecurityroles"];
    post: operations["postSystemSecurityroles"];
  };
  "/system/securityroles/{id}": {
    get: operations["getSystemSecurityrolesById"];
    delete: operations["deleteSystemSecurityrolesById"];
  };
  "/system/securityroles/{id}/info": {
    get: operations["getSystemSecurityrolesByIdInfo"];
  };
  "/system/securityRoles/{parentId}/settings": {
    get: operations["getSystemSecurityRolesByParentIdSettings"];
  };
  "/system/securityRoles/{parentId}/settings/{id}": {
    get: operations["getSystemSecurityRolesByParentIdSettingsById"];
  };
  "/system/securityRoles/{parentId}/settings/count": {
    get: operations["getSystemSecurityRolesByParentIdSettingsCount"];
  };
  "/system/securityroles/count": {
    get: operations["getSystemSecurityrolesCount"];
  };
  "/system/securityroles/info": {
    get: operations["getSystemSecurityrolesInfo"];
  };
  "/system/securityroles/info/count": {
    get: operations["getSystemSecurityrolesInfoCount"];
  };
  "/system/settings": {
    get: operations["getSystemSettings"];
  };
  "/system/settings/{id}": {
    get: operations["getSystemSettingsById"];
    put: operations["putSystemSettingsById"];
    patch: operations["patchSystemSettingsById"];
  };
  "/system/settings/count": {
    get: operations["getSystemSettingsCount"];
  };
  "/system/setupScreens": {
    get: operations["getSystemSetupScreens"];
  };
  "/system/setupScreens/{id}": {
    get: operations["getSystemSetupScreensById"];
  };
  "/system/setupScreens/count": {
    get: operations["getSystemSetupScreensCount"];
  };
  "/system/skillCategories": {
    get: operations["getSystemSkillCategories"];
    post: operations["postSystemSkillCategories"];
  };
  "/system/skillCategories/{id}": {
    get: operations["getSystemSkillCategoriesById"];
    put: operations["putSystemSkillCategoriesById"];
    delete: operations["deleteSystemSkillCategoriesById"];
    patch: operations["patchSystemSkillCategoriesById"];
  };
  "/system/skillCategories/count": {
    get: operations["getSystemSkillCategoriesCount"];
  };
  "/system/skills": {
    get: operations["getSystemSkills"];
    post: operations["postSystemSkills"];
  };
  "/system/skills/{id}": {
    get: operations["getSystemSkillsById"];
    put: operations["putSystemSkillsById"];
    delete: operations["deleteSystemSkillsById"];
    patch: operations["patchSystemSkillsById"];
  };
  "/system/skills/{id}/info": {
    get: operations["getSystemSkillsByIdInfo"];
  };
  "/system/skills/count": {
    get: operations["getSystemSkillsCount"];
  };
  "/system/skills/info": {
    get: operations["getSystemSkillsInfo"];
  };
  "/system/skills/info/count": {
    get: operations["getSystemSkillsInfoCount"];
  };
  "/system/ssoConfigurations": {
    get: operations["getSystemSsoConfigurations"];
    post: operations["postSystemSsoConfigurations"];
  };
  "/system/ssoConfigurations/{id}": {
    get: operations["getSystemSsoConfigurationsById"];
    put: operations["putSystemSsoConfigurationsById"];
    delete: operations["deleteSystemSsoConfigurationsById"];
    patch: operations["patchSystemSsoConfigurationsById"];
  };
  "/system/ssoConfigurations/{id}/registertoken": {
    post: operations["postSystemSsoConfigurationsByIdRegistertoken"];
  };
  "/system/ssoConfigurations/{id}/submitmembers": {
    post: operations["postSystemSsoConfigurationsByIdSubmitmembers"];
  };
  "/system/ssoConfigurations/count": {
    get: operations["getSystemSsoConfigurationsCount"];
  };
  "/system/ssoUsers": {
    get: operations["getSystemSsoUsers"];
  };
  "/system/ssoUsers/{externalId}": {
    get: operations["getSystemSsoUsersByExternalId"];
  };
  "/system/ssoUsers/count": {
    get: operations["getSystemSsoUsersCount"];
  };
  "/system/standardNotes": {
    get: operations["getSystemStandardNotes"];
    post: operations["postSystemStandardNotes"];
  };
  "/system/standardNotes/{id}": {
    get: operations["getSystemStandardNotesById"];
    put: operations["putSystemStandardNotesById"];
    delete: operations["deleteSystemStandardNotesById"];
    patch: operations["patchSystemStandardNotesById"];
  };
  "/system/standardNotes/count": {
    get: operations["getSystemStandardNotesCount"];
  };
  "/system/surveys": {
    get: operations["getSystemSurveys"];
    post: operations["postSystemSurveys"];
  };
  "/system/surveys/{grandparentId}/questions/{parentId}/values": {
    get: operations["getSystemSurveysByGrandparentIdQuestionsByParentIdValues"];
    post: operations["postSystemSurveysByGrandparentIdQuestionsByParentIdValues"];
  };
  "/system/surveys/{grandparentId}/questions/{parentId}/values/{id}": {
    get: operations["getSystemSurveysByGrandparentIdQuestionsByParentIdValuesById"];
    put: operations["putSystemSurveysByGrandparentIdQuestionsByParentIdValuesById"];
    delete: operations["deleteSystemSurveysByGrandparentIdQuestionsByParentIdValuesById"];
    patch: operations["patchSystemSurveysByGrandparentIdQuestionsByParentIdValuesById"];
  };
  "/system/surveys/{id}": {
    get: operations["getSystemSurveysById"];
    put: operations["putSystemSurveysById"];
    delete: operations["deleteSystemSurveysById"];
    patch: operations["patchSystemSurveysById"];
  };
  "/system/surveys/{id}/copy": {
    post: operations["postSystemSurveysByIdCopy"];
  };
  "/system/surveys/{id}/info": {
    get: operations["getSystemSurveysByIdInfo"];
  };
  "/system/surveys/{parentId}/questions": {
    get: operations["getSystemSurveysByParentIdQuestions"];
    post: operations["postSystemSurveysByParentIdQuestions"];
  };
  "/system/surveys/{parentId}/questions/{id}": {
    get: operations["getSystemSurveysByParentIdQuestionsById"];
    put: operations["putSystemSurveysByParentIdQuestionsById"];
    delete: operations["deleteSystemSurveysByParentIdQuestionsById"];
    patch: operations["patchSystemSurveysByParentIdQuestionsById"];
  };
  "/system/surveys/{parentId}/questions/count": {
    get: operations["getSystemSurveysByParentIdQuestionsCount"];
  };
  "/system/surveys/count": {
    get: operations["getSystemSurveysCount"];
  };
  "/system/surveys/info": {
    get: operations["getSystemSurveysInfo"];
  };
  "/system/surveys/info/count": {
    get: operations["getSystemSurveysInfoCount"];
  };
  "/system/timeZoneSetups": {
    get: operations["getSystemTimeZoneSetups"];
    post: operations["postSystemTimeZoneSetups"];
  };
  "/system/timeZoneSetups/{id}": {
    get: operations["getSystemTimeZoneSetupsById"];
    put: operations["putSystemTimeZoneSetupsById"];
    delete: operations["deleteSystemTimeZoneSetupsById"];
    patch: operations["patchSystemTimeZoneSetupsById"];
  };
  "/system/timeZoneSetups/{id}/info": {
    get: operations["getSystemTimeZoneSetupsByIdInfo"];
  };
  "/system/timeZoneSetups/count": {
    get: operations["getSystemTimeZoneSetupsCount"];
  };
  "/system/timeZoneSetups/info": {
    get: operations["getSystemTimeZoneSetupsInfo"];
  };
  "/system/timeZoneSetups/info/count": {
    get: operations["getSystemTimeZoneSetupsInfoCount"];
  };
  "/system/todayPageCategories": {
    get: operations["getSystemTodayPageCategories"];
    post: operations["postSystemTodayPageCategories"];
  };
  "/system/todayPageCategories/{id}": {
    get: operations["getSystemTodayPageCategoriesById"];
    put: operations["putSystemTodayPageCategoriesById"];
    delete: operations["deleteSystemTodayPageCategoriesById"];
    patch: operations["patchSystemTodayPageCategoriesById"];
  };
  "/system/todayPageCategories/count": {
    get: operations["getSystemTodayPageCategoriesCount"];
  };
  "/system/userDefinedFields": {
    get: operations["getSystemUserDefinedFields"];
    post: operations["postSystemUserDefinedFields"];
  };
  "/system/userDefinedFields/{id}": {
    get: operations["getSystemUserDefinedFieldsById"];
    put: operations["putSystemUserDefinedFieldsById"];
    delete: operations["deleteSystemUserDefinedFieldsById"];
    patch: operations["patchSystemUserDefinedFieldsById"];
  };
  "/system/userDefinedFields/{id}/info": {
    get: operations["getSystemUserDefinedFieldsByIdInfo"];
  };
  "/system/userDefinedFields/count": {
    get: operations["getSystemUserDefinedFieldsCount"];
  };
  "/system/userDefinedFields/info": {
    get: operations["getSystemUserDefinedFieldsInfo"];
  };
  "/system/userDefinedFields/info/count": {
    get: operations["getSystemUserDefinedFieldsInfoCount"];
  };
  "/system/workflowActions/{parentId}/automateParameters": {
    get: operations["getSystemWorkflowActionsByParentIdAutomateParameters"];
    post: operations["postSystemWorkflowActionsByParentIdAutomateParameters"];
  };
  "/system/workflowActions/{parentId}/automateParameters/{id}": {
    get: operations["getSystemWorkflowActionsByParentIdAutomateParametersById"];
    put: operations["putSystemWorkflowActionsByParentIdAutomateParametersById"];
    delete: operations["deleteSystemWorkflowActionsByParentIdAutomateParametersById"];
    patch: operations["patchSystemWorkflowActionsByParentIdAutomateParametersById"];
  };
  "/system/workflowActions/{parentId}/automateParameters/count": {
    get: operations["getSystemWorkflowActionsByParentIdAutomateParametersCount"];
  };
  "/system/workflows": {
    get: operations["getSystemWorkflows"];
    post: operations["postSystemWorkflows"];
  };
  "/system/workflows/{grandparentId}/events/{parentId}/actions": {
    get: operations["getSystemWorkflowsByGrandparentIdEventsByParentIdActions"];
    post: operations["postSystemWorkflowsByGrandparentIdEventsByParentIdActions"];
  };
  "/system/workflows/{grandparentId}/events/{parentId}/actions/{id}": {
    get: operations["getSystemWorkflowsByGrandparentIdEventsByParentIdActionsById"];
    put: operations["putSystemWorkflowsByGrandparentIdEventsByParentIdActionsById"];
    delete: operations["deleteSystemWorkflowsByGrandparentIdEventsByParentIdActionsById"];
    patch: operations["patchSystemWorkflowsByGrandparentIdEventsByParentIdActionsById"];
  };
  "/system/workflows/{grandparentId}/events/{parentId}/actions/count": {
    get: operations["getSystemWorkflowsByGrandparentIdEventsByParentIdActionsCount"];
  };
  "/system/workflows/{grandparentId}/triggers/{parentId}/options": {
    get: operations["getSystemWorkflowsByGrandparentIdTriggersByParentIdOptions"];
  };
  "/system/workflows/{grandparentId}/triggers/{parentId}/options/count": {
    get: operations["getSystemWorkflowsByGrandparentIdTriggersByParentIdOptionsCount"];
  };
  "/system/workflows/{id}": {
    get: operations["getSystemWorkflowsById"];
    put: operations["putSystemWorkflowsById"];
    delete: operations["deleteSystemWorkflowsById"];
    patch: operations["patchSystemWorkflowsById"];
  };
  "/system/workflows/{id}/copy": {
    post: operations["postSystemWorkflowsByIdCopy"];
  };
  "/system/workflows/{parentId}/attachments": {
    get: operations["getSystemWorkflowsByParentIdAttachments"];
  };
  "/system/workflows/{parentId}/attachments/{id}": {
    get: operations["getSystemWorkflowsByParentIdAttachmentsById"];
  };
  "/system/workflows/{parentId}/attachments/count": {
    get: operations["getSystemWorkflowsByParentIdAttachmentsCount"];
  };
  "/system/workflows/{parentId}/events": {
    get: operations["getSystemWorkflowsByParentIdEvents"];
    post: operations["postSystemWorkflowsByParentIdEvents"];
  };
  "/system/workflows/{parentId}/events/{id}": {
    get: operations["getSystemWorkflowsByParentIdEventsById"];
    put: operations["putSystemWorkflowsByParentIdEventsById"];
    delete: operations["deleteSystemWorkflowsByParentIdEventsById"];
    patch: operations["patchSystemWorkflowsByParentIdEventsById"];
  };
  "/system/workflows/{parentId}/events/{id}/copy": {
    post: operations["postSystemWorkflowsByParentIdEventsByIdCopy"];
  };
  "/system/workflows/{parentId}/events/{id}/test": {
    get: operations["getSystemWorkflowsByParentIdEventsByIdTest"];
  };
  "/system/workflows/{parentId}/events/count": {
    get: operations["getSystemWorkflowsByParentIdEventsCount"];
  };
  "/system/workflows/{parentId}/notifyTypes": {
    get: operations["getSystemWorkflowsByParentIdNotifyTypes"];
  };
  "/system/workflows/{parentId}/notifyTypes/{id}": {
    get: operations["getSystemWorkflowsByParentIdNotifyTypesById"];
  };
  "/system/workflows/{parentId}/notifyTypes/{id}/info": {
    get: operations["getSystemWorkflowsByParentIdNotifyTypesByIdInfo"];
  };
  "/system/workflows/{parentId}/notifyTypes/count": {
    get: operations["getSystemWorkflowsByParentIdNotifyTypesCount"];
  };
  "/system/workflows/{parentId}/notifyTypes/info": {
    get: operations["getSystemWorkflowsByParentIdNotifyTypesInfo"];
  };
  "/system/workflows/{parentId}/notifyTypes/info/count": {
    get: operations["getSystemWorkflowsByParentIdNotifyTypesInfoCount"];
  };
  "/system/workflows/{parentId}/triggers": {
    get: operations["getSystemWorkflowsByParentIdTriggers"];
  };
  "/system/workflows/{parentId}/triggers/count": {
    get: operations["getSystemWorkflowsByParentIdTriggersCount"];
  };
  "/system/workflows/count": {
    get: operations["getSystemWorkflowsCount"];
  };
  "/system/workflows/tableTypes": {
    get: operations["getSystemWorkflowsTableTypes"];
  };
  "/system/workflows/tableTypes/{id}": {
    get: operations["getSystemWorkflowsTableTypesById"];
  };
  "/system/workflows/tableTypes/{id}/info": {
    get: operations["getSystemWorkflowsTableTypesByIdInfo"];
  };
  "/system/workflows/tableTypes/count": {
    get: operations["getSystemWorkflowsTableTypesCount"];
  };
  "/system/workflows/tableTypes/info": {
    get: operations["getSystemWorkflowsTableTypesInfo"];
  };
  "/system/workflows/tableTypes/info/count": {
    get: operations["getSystemWorkflowsTableTypesInfoCount"];
  };
  "/system/workflows/userdefinedfields/{id}": {
    put: operations["putSystemWorkflowsUserdefinedfieldsById"];
    patch: operations["patchSystemWorkflowsUserdefinedfieldsById"];
  };
  "/system/workflows/userdefinedfields/actions/{parentId}": {
    delete: operations["deleteSystemWorkflowsUserdefinedfieldsActionsByParentId"];
  };
  "/system/workflows/userdefinedfields/events/{grandparentId}": {
    post: operations["postSystemWorkflowsUserdefinedfieldsEventsByGrandparentId"];
  };
  "/system/workflows/userdefinedfields/events{grandparentId}/actions/{parentId}": {
    get: operations["getSystemWorkflowsUserdefinedfieldsByGrandparentIdActionsByParentId"];
  };
  "/time/accruals": {
    get: operations["getTimeAccruals"];
    post: operations["postTimeAccruals"];
  };
  "/time/accruals/{id}": {
    get: operations["getTimeAccrualsById"];
    put: operations["putTimeAccrualsById"];
    delete: operations["deleteTimeAccrualsById"];
    patch: operations["patchTimeAccrualsById"];
  };
  "/time/accruals/{parentId}/details": {
    get: operations["getTimeAccrualsByParentIdDetails"];
  };
  "/time/accruals/{parentId}/details/": {
    post: operations["postTimeAccrualsByParentIdDetails"];
  };
  "/time/accruals/{parentId}/details/{id}": {
    get: operations["getTimeAccrualsByParentIdDetailsById"];
    put: operations["putTimeAccrualsByParentIdDetailsById"];
    delete: operations["deleteTimeAccrualsByParentIdDetailsById"];
    patch: operations["patchTimeAccrualsByParentIdDetailsById"];
  };
  "/time/accruals/{parentId}/details/count": {
    get: operations["getTimeAccrualsByParentIdDetailsCount"];
  };
  "/time/accruals/count": {
    get: operations["getTimeAccrualsCount"];
  };
  "/time/activitystopwatches": {
    get: operations["getTimeActivitystopwatches"];
    post: operations["postTimeActivitystopwatches"];
  };
  "/time/activitystopwatches/{id}": {
    get: operations["getTimeActivitystopwatchesById"];
    put: operations["putTimeActivitystopwatchesById"];
    delete: operations["deleteTimeActivitystopwatchesById"];
    patch: operations["patchTimeActivitystopwatchesById"];
  };
  "/time/activitystopwatches/count": {
    get: operations["getTimeActivitystopwatchesCount"];
  };
  "/time/chargeCodes": {
    get: operations["getTimeChargeCodes"];
    post: operations["postTimeChargeCodes"];
  };
  "/time/chargeCodes/{id}": {
    get: operations["getTimeChargeCodesById"];
    put: operations["putTimeChargeCodesById"];
    delete: operations["deleteTimeChargeCodesById"];
    patch: operations["patchTimeChargeCodesById"];
  };
  "/time/chargeCodes/{id}/info": {
    get: operations["getTimeChargeCodesByIdInfo"];
  };
  "/time/chargeCodes/{id}/usages": {
    get: operations["getTimeChargeCodesByIdUsages"];
  };
  "/time/chargeCodes/{id}/usages/list": {
    get: operations["getTimeChargeCodesByIdUsagesList"];
  };
  "/time/chargeCodes/{parentId}/expenseTypes": {
    get: operations["getTimeChargeCodesByParentIdExpenseTypes"];
    post: operations["postTimeChargeCodesByParentIdExpenseTypes"];
  };
  "/time/chargeCodes/{parentId}/expenseTypes/{id}": {
    get: operations["getTimeChargeCodesByParentIdExpenseTypesById"];
    put: operations["putTimeChargeCodesByParentIdExpenseTypesById"];
    delete: operations["deleteTimeChargeCodesByParentIdExpenseTypesById"];
    patch: operations["patchTimeChargeCodesByParentIdExpenseTypesById"];
  };
  "/time/chargeCodes/{parentId}/expenseTypes/count": {
    get: operations["getTimeChargeCodesByParentIdExpenseTypesCount"];
  };
  "/time/chargeCodes/count": {
    get: operations["getTimeChargeCodesCount"];
  };
  "/time/chargeCodes/info": {
    get: operations["getTimeChargeCodesInfo"];
  };
  "/time/chargeCodes/info/count": {
    get: operations["getTimeChargeCodesInfoCount"];
  };
  "/time/entries": {
    get: operations["getTimeEntries"];
    post: operations["postTimeEntries"];
  };
  "/time/entries/{id}": {
    get: operations["getTimeEntriesById"];
    put: operations["putTimeEntriesById"];
    delete: operations["deleteTimeEntriesById"];
    patch: operations["patchTimeEntriesById"];
  };
  "/time/entries/{parentId}/audits": {
    get: operations["getTimeEntriesByParentIdAudits"];
  };
  "/time/entries/{parentId}/audits/{id}": {
    get: operations["getTimeEntriesByParentIdAuditsById"];
  };
  "/time/entries/{parentId}/audits/count": {
    get: operations["getTimeEntriesByParentIdAuditsCount"];
  };
  "/time/entries/count": {
    get: operations["getTimeEntriesCount"];
  };
  "/time/entries/defaults": {
    post: operations["postTimeEntriesDefaults"];
  };
  "/time/info/chargeCodeExpenseTypes": {
    get: operations["getTimeInfoChargeCodeExpenseTypes"];
  };
  "/time/info/chargeCodeExpenseTypes/count": {
    get: operations["getTimeInfoChargeCodeExpenseTypesCount"];
  };
  "/time/schedulestopwatches": {
    get: operations["getTimeSchedulestopwatches"];
    post: operations["postTimeSchedulestopwatches"];
  };
  "/time/schedulestopwatches/{id}": {
    get: operations["getTimeSchedulestopwatchesById"];
    put: operations["putTimeSchedulestopwatchesById"];
    delete: operations["deleteTimeSchedulestopwatchesById"];
    patch: operations["patchTimeSchedulestopwatchesById"];
  };
  "/time/schedulestopwatches/count": {
    get: operations["getTimeSchedulestopwatchesCount"];
  };
  "/time/sheets": {
    get: operations["getTimeSheets"];
  };
  "/time/sheets/{id}": {
    get: operations["getTimeSheetsById"];
  };
  "/time/sheets/{id}/approve": {
    post: operations["postTimeSheetsByIdApprove"];
  };
  "/time/sheets/{id}/reject": {
    post: operations["postTimeSheetsByIdReject"];
  };
  "/time/sheets/{id}/reverse": {
    post: operations["postTimeSheetsByIdReverse"];
  };
  "/time/sheets/{id}/submit": {
    post: operations["postTimeSheetsByIdSubmit"];
  };
  "/time/sheets/{parentId}/audits": {
    get: operations["getTimeSheetsByParentIdAudits"];
  };
  "/time/sheets/{parentId}/audits/{id}": {
    get: operations["getTimeSheetsByParentIdAuditsById"];
  };
  "/time/sheets/{parentId}/audits/count": {
    get: operations["getTimeSheetsByParentIdAuditsCount"];
  };
  "/time/sheets/count": {
    get: operations["getTimeSheetsCount"];
  };
  "/time/ticketstopwatches": {
    get: operations["getTimeTicketstopwatches"];
    post: operations["postTimeTicketstopwatches"];
  };
  "/time/ticketstopwatches/{id}": {
    get: operations["getTimeTicketstopwatchesById"];
    put: operations["putTimeTicketstopwatchesById"];
    delete: operations["deleteTimeTicketstopwatchesById"];
    patch: operations["patchTimeTicketstopwatchesById"];
  };
  "/time/ticketstopwatches/count": {
    get: operations["getTimeTicketstopwatchesCount"];
  };
  "/time/timePeriodSetups": {
    get: operations["getTimeTimePeriodSetups"];
    post: operations["postTimeTimePeriodSetups"];
  };
  "/time/timePeriodSetups/{id}": {
    get: operations["getTimeTimePeriodSetupsById"];
    put: operations["putTimeTimePeriodSetupsById"];
    delete: operations["deleteTimeTimePeriodSetupsById"];
    patch: operations["patchTimeTimePeriodSetupsById"];
  };
  "/time/timePeriodSetups/{parentId}/periods": {
    get: operations["getTimeTimePeriodSetupsByParentIdPeriods"];
  };
  "/time/timePeriodSetups/{parentId}/periods/{id}": {
    get: operations["getTimeTimePeriodSetupsByParentIdPeriodsById"];
  };
  "/time/timePeriodSetups/{parentId}/periods/count": {
    get: operations["getTimeTimePeriodSetupsByParentIdPeriodsCount"];
  };
  "/time/timePeriodSetups/count": {
    get: operations["getTimeTimePeriodSetupsCount"];
  };
  "/time/timePeriodSetups/default": {
    get: operations["getTimeTimePeriodSetupsDefault"];
  };
  "/time/workRoles": {
    get: operations["getTimeWorkRoles"];
    post: operations["postTimeWorkRoles"];
  };
  "/time/workRoles/{id}": {
    get: operations["getTimeWorkRolesById"];
    put: operations["putTimeWorkRolesById"];
    delete: operations["deleteTimeWorkRolesById"];
    patch: operations["patchTimeWorkRolesById"];
  };
  "/time/workRoles/{id}/info": {
    get: operations["getTimeWorkRolesByIdInfo"];
  };
  "/time/workRoles/{id}/usages": {
    get: operations["getTimeWorkRolesByIdUsages"];
  };
  "/time/workRoles/{id}/usages/list": {
    get: operations["getTimeWorkRolesByIdUsagesList"];
  };
  "/time/workRoles/{parentId}/locations": {
    get: operations["getTimeWorkRolesByParentIdLocations"];
    post: operations["postTimeWorkRolesByParentIdLocations"];
  };
  "/time/workRoles/{parentId}/locations/{id}": {
    get: operations["getTimeWorkRolesByParentIdLocationsById"];
    put: operations["putTimeWorkRolesByParentIdLocationsById"];
    delete: operations["deleteTimeWorkRolesByParentIdLocationsById"];
    patch: operations["patchTimeWorkRolesByParentIdLocationsById"];
  };
  "/time/workRoles/{parentId}/locations/count": {
    get: operations["getTimeWorkRolesByParentIdLocationsCount"];
  };
  "/time/workRoles/count": {
    get: operations["getTimeWorkRolesCount"];
  };
  "/time/workRoles/info": {
    get: operations["getTimeWorkRolesInfo"];
  };
  "/time/workRoles/info/count": {
    get: operations["getTimeWorkRolesInfoCount"];
  };
  "/time/workTypes": {
    get: operations["getTimeWorkTypes"];
    post: operations["postTimeWorkTypes"];
  };
  "/time/workTypes/{id}": {
    get: operations["getTimeWorkTypesById"];
    put: operations["putTimeWorkTypesById"];
    delete: operations["deleteTimeWorkTypesById"];
    patch: operations["patchTimeWorkTypesById"];
  };
  "/time/workTypes/{id}/info": {
    get: operations["getTimeWorkTypesByIdInfo"];
  };
  "/time/workTypes/{id}/usages": {
    get: operations["getTimeWorkTypesByIdUsages"];
  };
  "/time/workTypes/{id}/usages/list": {
    get: operations["getTimeWorkTypesByIdUsagesList"];
  };
  "/time/workTypes/count": {
    get: operations["getTimeWorkTypesCount"];
  };
  "/time/workTypes/info": {
    get: operations["getTimeWorkTypesInfo"];
  };
  "/time/workTypes/info/count": {
    get: operations["getTimeWorkTypesInfoCount"];
  };
}

export interface components {
  schemas: {
    AccountingBatch: {
      /** Format: int32 */
      id?: number;
      batchIdentifier?: string;
      exportInvoicesFlag?: boolean | null;
      exportExpensesFlag?: boolean | null;
      exportProductsFlag?: boolean | null;
      closedFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    AccountingPackage: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      name?: string;
    };
    AccountingPackageReference: {
      /** Format: int32 */
      id?: number | null;
      /** @enum {string|null} */
      identifier?:
        | ("QB99" | "Mas200" | "GPlains" | "SBA" | "Mas200v4" | "Other")
        | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    AccountingPackageSetup: {
      /** Format: int32 */
      id?: number;
      accountingPackage?: components["schemas"]["AccountingPackageReference"];
      directTransferFlag?: boolean | null;
      includeInvoicesFlag?: boolean | null;
      /** @enum {string|null} */
      invoiceFormat?: ("Default" | "Condensed" | "Detailed") | null;
      includeExpensesFlag?: boolean | null;
      transferExpensesAsBillFlag?: boolean | null;
      /** @enum {string|null} */
      expenseFormat?: ("Default" | "Condensed") | null;
      suppressMemoFlag?: boolean | null;
      syncPaymentInfoFlag?: boolean | null;
      includeSalesTaxFlag?: boolean | null;
      enableTaxGroupsFlag?: boolean | null;
      zeroDollarTaxAmountsFlag?: boolean | null;
      includeItemsFlag?: boolean | null;
      inventorySOHFlag?: boolean | null;
      sendComponentAmountFlag?: boolean | null;
      sendUomFlag?: boolean | null;
      includeCogsEntriesFlag?: boolean | null;
      includeCogsDropShipFlag?: boolean | null;
    };
    Activity: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      name: string;
      type?: components["schemas"]["ActivityTypeReference"];
      company?: components["schemas"]["CompanyReference"];
      contact?: components["schemas"]["ContactReference"];
      /** @description  Max length: 30; */
      phoneNumber?: string;
      /** @description  Max length: 250; */
      email?: string;
      status?: components["schemas"]["ActivityStatusReference"];
      opportunity?: components["schemas"]["OpportunityReference"];
      ticket?: components["schemas"]["TicketReference"];
      agreement?: components["schemas"]["AgreementReference"];
      campaign?: components["schemas"]["CampaignReference"];
      notes?: string;
      /** Format: date-time */
      dateStart?: string;
      /** Format: date-time */
      dateEnd?: string;
      assignedBy?: components["schemas"]["MemberReference"];
      assignTo?: components["schemas"]["MemberReference"];
      scheduleStatus?: components["schemas"]["ScheduleStatusReference"];
      reminder?: components["schemas"]["ReminderReference"];
      where?: components["schemas"]["ServiceLocationReference"];
      notifyFlag?: boolean | null;
      /** Format: uuid */
      mobileGuid?: string | null;
      currency?: components["schemas"]["CurrencyReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    ActivityReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ActivityStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      spawnFollowupFlag?: boolean | null;
      closedFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ActivityStatusInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      closedFlag?: boolean | null;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ActivityStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ActivityStopwatch: {
      _info?: { [key: string]: string };
      /** Format: int32 */
      activityId: number | null;
      /** Format: uuid */
      activityMobileGuid?: string | null;
      agreement?: components["schemas"]["AgreementReference"];
      /** @enum {string|null} */
      billableOption?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      /** Format: date-time */
      dateEntered?: string;
      /** Format: date-time */
      endTime?: string;
      /** Format: int32 */
      id?: number;
      internalNotes?: string;
      /** Format: int32 */
      locationId?: number | null;
      member?: components["schemas"]["MemberReference"];
      /** Format: uuid */
      mobileGuid?: string | null;
      /** @description  Max length: 4000; */
      notes?: string;
      /** Format: date-time */
      startTime?: string;
      /** @enum {string|null} */
      status: ("Reset" | "Running" | "Paused" | "Stopped") | null;
      /** Format: int32 */
      totalPauseTime?: number | null;
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
    };
    ActivityType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** Format: int32 */
      points?: number | null;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      emailFlag?: boolean | null;
      memoFlag?: boolean | null;
      historyFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ActivityTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Addition: {
      /** Format: int32 */
      id?: number;
      product?: components["schemas"]["IvItemReference"];
      /** Format: double */
      quantity?: number | null;
      /** Format: double */
      lessIncluded?: number | null;
      /** Format: double */
      unitPrice?: number | null;
      /** Format: double */
      unitCost?: number | null;
      /** @enum {string|null} */
      billCustomer: ("Billable" | "DoNotBill" | "NoCharge") | null;
      /** Format: date-time */
      effectiveDate?: string;
      /** Format: date-time */
      cancelledDate?: string;
      taxableFlag?: boolean | null;
      /** @description  Max length: 50; */
      serialNumber?: string;
      /** @description  Max length: 6000; */
      invoiceDescription?: string;
      purchaseItemFlag?: boolean | null;
      specialOrderFlag?: boolean | null;
      /** Format: int32 */
      agreementId?: number | null;
      description?: string;
      /** Format: double */
      billedQuantity?: number | null;
      uom?: string;
      /** Format: double */
      extPrice?: number | null;
      /** Format: double */
      extCost?: number | null;
      /** Format: double */
      sequenceNumber?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      prorateCost?: number | null;
      /** Format: double */
      proratePrice?: number | null;
      /** Format: double */
      extendedProrateCost?: number | null;
      /** Format: double */
      extendedProratePrice?: number | null;
      prorateCurrentPeriodFlag?: boolean | null;
      opportunity?: components["schemas"]["OpportunityReference"];
      /** @enum {string|null} */
      agreementStatus?:
        | ("Active" | "Cancelled" | "Expired" | "Inactive")
        | null;
      invoiceGrouping?: components["schemas"]["InvoiceGroupingReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    AddressFormat: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** @description  Max length: 250; */
      format: string;
      defaultFlag?: boolean | null;
      countryIds?: number[];
      addAllCountries?: boolean | null;
      removeAllCountries?: boolean | null;
      _info?: { [key: string]: string };
    };
    AddressFormatInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    AddressFormatReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    AdjustmentDetail: {
      /** Format: int32 */
      id?: number;
      catalogItem?: components["schemas"]["CatalogItemReference"];
      /** @description  Max length: 50; */
      description?: string;
      /** Format: double */
      quantityOnHand?: number | null;
      /** Format: double */
      unitCost?: number | null;
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      /** Format: int32 */
      quantityAdjusted: number | null;
      /** @description  Max length: 1000; */
      serialNumber?: string;
      adjustment?: components["schemas"]["AdjustmentReference"];
      _info?: { [key: string]: string };
    };
    AdjustmentDetailReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    AdjustmentReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    AdjustmentType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      identifier: string;
      /** @description  Max length: 100; */
      name?: string;
      auditTrailFlag?: boolean | null;
      /** Format: date-time */
      dateCreated?: string;
      createdBy?: string;
      _info?: { [key: string]: string };
    };
    AdjustmentTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    AdjustmentTypeReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      _info?: { [key: string]: string };
    };
    Agreement: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      name: string;
      type?: components["schemas"]["AgreementTypeReference"];
      company?: components["schemas"]["CompanyReference"];
      contact?: components["schemas"]["ContactReference"];
      site?: components["schemas"]["SiteReference"];
      subContractCompany?: components["schemas"]["CompanyReference"];
      subContractContact?: components["schemas"]["ContactReference"];
      parentAgreement?: components["schemas"]["AgreementReference"];
      /** @description  Max length: 50; */
      customerPO?: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      restrictLocationFlag?: boolean | null;
      restrictDepartmentFlag?: boolean | null;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      noEndingDateFlag?: boolean | null;
      opportunity?: components["schemas"]["OpportunityReference"];
      cancelledFlag?: boolean | null;
      /** Format: date-time */
      dateCancelled?: string;
      /** @description  Max length: 100; */
      reasonCancelled?: string;
      sla?: components["schemas"]["SLAReference"];
      /** @description  Max length: 20; */
      workOrder?: string;
      internalNotes?: string;
      /** @enum {string|null} */
      applicationUnits?: ("Amount" | "Hours" | "Incidents") | null;
      /** Format: double */
      applicationLimit?: number | null;
      /** @enum {string|null} */
      applicationCycle?:
        | (
            | "Contract2Weeks"
            | "Contract4Weeks"
            | "ContractYear"
            | "CalendarMonth"
            | "CalendarQuarter"
            | "CalendarWeek"
            | "ContractQuarter"
            | "CalendarYear"
          )
        | null;
      applicationUnlimitedFlag?: boolean | null;
      oneTimeFlag?: boolean | null;
      coverAgreementTime?: boolean | null;
      coverAgreementProduct?: boolean | null;
      coverAgreementExpense?: boolean | null;
      coverSalesTax?: boolean | null;
      carryOverUnused?: boolean | null;
      allowOverruns?: boolean | null;
      /** Format: int32 */
      expiredDays?: number | null;
      /** Format: int32 */
      limit?: number | null;
      expireWhenZero?: boolean | null;
      chargeToFirm?: boolean | null;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      employeeCompRate?: ("Actual" | "Hourly") | null;
      /** @enum {string|null} */
      employeeCompNotExceed?: ("Billing" | "Amount" | "Percent") | null;
      /** Format: double */
      compHourlyRate?: number | null;
      /** Format: double */
      compLimitAmount?: number | null;
      billingCycle?: components["schemas"]["BillingCycleReference"];
      billOneTimeFlag?: boolean | null;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      invoicingCycle?: ("ContractYear" | "CalendarYear") | null;
      billToCompany?: components["schemas"]["CompanyReference"];
      billToContact?: components["schemas"]["ContactReference"];
      billToSite?: components["schemas"]["SiteReference"];
      /** Format: double */
      billAmount?: number | null;
      taxable?: boolean | null;
      /** Format: double */
      prorateFirstBill?: number | null;
      /** Format: date-time */
      billStartDate?: string;
      taxCode?: components["schemas"]["TaxCodeReference"];
      restrictDownPayment?: boolean | null;
      prorateFlag?: boolean | null;
      invoiceDescription?: string;
      topComment?: boolean | null;
      bottomComment?: boolean | null;
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      projectType?: components["schemas"]["ProjectTypeReference"];
      invoiceTemplate?: components["schemas"]["InvoiceTemplateReference"];
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billTime?: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billExpenses?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billProducts?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      billableTimeInvoice?: boolean | null;
      billableExpenseInvoice?: boolean | null;
      billableProductInvoice?: boolean | null;
      currency?: components["schemas"]["CurrencyReference"];
      /** @enum {string|null} */
      periodType?: ("Current" | "Future" | "Both" | "Undefined") | null;
      autoInvoiceFlag?: boolean | null;
      nextInvoiceDate?: string;
      companyLocation?: components["schemas"]["SystemLocationReference"];
      /** @enum {string|null} */
      agreementStatus?:
        | ("Active" | "Cancelled" | "Expired" | "Inactive")
        | null;
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    "Agreement.Adjustment": {
      /** Format: int32 */
      id?: number;
      /** Format: double */
      amount?: number | null;
      /** @description  Max length: 1000; */
      description?: string;
      /** Format: date-time */
      effectiveDate?: string;
      /** Format: int32 */
      agreementId?: number | null;
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    AgreementBatchSetup: {
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      nextRunDate: string;
      /** Format: int32 */
      daysInAdvance: number | null;
      _info?: { [key: string]: string };
    };
    AgreementBillingInfo: {
      agreementName?: string;
      agreementType?: string;
      /** Format: double */
      agreementAmount?: number;
      /** Format: int32 */
      agreementRecId?: number;
      /** Format: int32 */
      parentRecId?: number;
    };
    AgreementReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      type?: string;
      _info?: { [key: string]: string };
    };
    AgreementRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    AgreementSite: {
      /** Format: int32 */
      id?: number;
      company?: components["schemas"]["CompanyReference"];
      site?: components["schemas"]["SiteReference"];
      /** Format: int32 */
      agreementId?: number | null;
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    AgreementType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** @enum {string|null} */
      prefixSuffixOption?: ("Prefix" | "Suffix") | null;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      prePaymentFlag?: boolean | null;
      /** @description  Max length: 5; */
      invoicePreSuffix?: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      restrictLocationFlag?: boolean | null;
      restrictDepartmentFlag?: boolean | null;
      sla?: components["schemas"]["SLAReference"];
      /** @enum {string|null} */
      applicationUnits?: ("Amount" | "Hours" | "Incidents") | null;
      /** Format: double */
      applicationLimit?: number | null;
      /** @enum {string|null} */
      applicationCycle?:
        | (
            | "Contract2Weeks"
            | "Contract4Weeks"
            | "ContractYear"
            | "CalendarMonth"
            | "CalendarQuarter"
            | "CalendarWeek"
            | "ContractQuarter"
            | "CalendarYear"
          )
        | null;
      applicationUnlimitedFlag?: boolean | null;
      oneTimeFlag?: boolean | null;
      coverAgreementTimeFlag?: boolean | null;
      coverAgreementProductFlag?: boolean | null;
      coverAgreementExpenseFlag?: boolean | null;
      coverSalesTaxFlag?: boolean | null;
      carryOverUnusedFlag?: boolean | null;
      allowOverrunsFlag?: boolean | null;
      /** Format: int32 */
      expiredDays?: number | null;
      /** Format: int32 */
      limit?: number | null;
      expireWhenZero?: boolean | null;
      chargeToFirmFlag?: boolean | null;
      /** @enum {string|null} */
      employeeCompRate: ("Actual" | "Hourly") | null;
      /** @enum {string|null} */
      employeeCompNotExceed: ("Billing" | "Amount" | "Percent") | null;
      /** Format: double */
      compHourlyRate?: number | null;
      /** Format: double */
      compLimitAmount?: number | null;
      billingCycle?: components["schemas"]["BillingCycleReference"];
      billOneTimeFlag?: boolean | null;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      /** @enum {string|null} */
      invoicingCycle: ("ContractYear" | "CalendarYear") | null;
      /** Format: double */
      billAmount?: number | null;
      taxableFlag?: boolean | null;
      restrictDownPaymentFlag?: boolean | null;
      /** @description  Max length: 4000; */
      invoiceDescription?: string;
      topCommentFlag?: boolean | null;
      bottomCommentFlag?: boolean | null;
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      projectType?: components["schemas"]["ProjectTypeReference"];
      invoiceTemplate?: components["schemas"]["InvoiceTemplateReference"];
      /** @enum {string|null} */
      billTime: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      /** @enum {string|null} */
      billExpenses:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** @enum {string|null} */
      billProducts:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      billableTimeInvoiceFlag?: boolean | null;
      billableExpenseInvoiceFlag?: boolean | null;
      billableProductInvoiceFlag?: boolean | null;
      copyWorkRolesFlag?: boolean | null;
      copyWorkTypesFlag?: boolean | null;
      exclusionWorkRoleIds?: number[];
      addAllWorkRoleExclusions?: boolean | null;
      removeAllWorkRoleExclusions?: boolean | null;
      exclusionWorkTypeIds?: number[];
      addAllWorkTypeExclusions?: boolean | null;
      removeAllWorkTypeExclusions?: boolean | null;
      /** @description  Max length: 50; */
      integrationXRef?: string;
      prorateFlag?: boolean | null;
      emailTemplate?: components["schemas"]["EmailTemplateReference"];
      autoInvoiceFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    AgreementTypeBoardDefault: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["AgreementTypeReference"];
      location: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      board?: components["schemas"]["BoardReference"];
      serviceType?: components["schemas"]["ServiceTypeReference"];
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    AgreementTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      /** @enum {string|null} */
      applicationUnits?: ("Amount" | "Hours" | "Incidents") | null;
      _info?: { [key: string]: string };
    };
    AgreementTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    AgreementTypeWorkRole: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["AgreementTypeReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      /** Format: date-time */
      effectiveDate?: string;
      /** Format: date-time */
      endingDate?: string;
      /** Format: double */
      rate?: number | null;
      /** @enum {string|null} */
      rateType: ("AdjAmount" | "Custom" | "Multiplier") | null;
      /** Format: double */
      limitTo?: number | null;
      _info?: { [key: string]: string };
    };
    AgreementTypeWorkRoleExclusion: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["AgreementTypeReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      _info?: { [key: string]: string };
    };
    AgreementTypeWorkRoleInfo: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["AgreementTypeReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      _info?: { [key: string]: string };
    };
    AgreementTypeWorkType: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["AgreementTypeReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      /** Format: date-time */
      effectiveDate?: string;
      /** Format: date-time */
      endingDate?: string;
      /** Format: double */
      rate?: number | null;
      /** @enum {string|null} */
      rateType: ("AdjAmount" | "Custom" | "Multiplier") | null;
      /** @enum {string|null} */
      billTime: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      /** Format: double */
      hoursMin?: number | null;
      /** Format: double */
      hoursMax?: number | null;
      /** Format: double */
      roundBillHours?: number | null;
      /** Format: double */
      overageRate?: number | null;
      /** @enum {string|null} */
      overageRateType: ("AdjAmount" | "Custom" | "Multiplier") | null;
      /** Format: double */
      limitTo?: number | null;
      _info?: { [key: string]: string };
    };
    AgreementTypeWorkTypeExclusion: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["AgreementTypeReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      _info?: { [key: string]: string };
    };
    AgreementWorkRole: {
      /** Format: int32 */
      id?: number;
      workRole?: components["schemas"]["WorkRoleReference"];
      /** Format: int32 */
      locationId?: number | null;
      /** @enum {string|null} */
      rateType: ("AdjAmount" | "Custom" | "Multiplier") | null;
      /** Format: double */
      rate?: number | null;
      /** Format: double */
      limitTo?: number | null;
      /** Format: date-time */
      effectiveDate?: string;
      /** Format: date-time */
      endingDate?: string;
      /** Format: int32 */
      agreementId?: number | null;
      _info?: { [key: string]: string };
    };
    AgreementWorkRoleExclusion: {
      /** Format: int32 */
      id?: number;
      workRole?: components["schemas"]["WorkRoleReference"];
      /** Format: int32 */
      agreementId?: number | null;
      _info?: { [key: string]: string };
    };
    AgreementWorkType: {
      /** Format: int32 */
      id?: number;
      workType?: components["schemas"]["WorkTypeReference"];
      /** Format: int32 */
      locationId?: number | null;
      /** @enum {string|null} */
      rateType: ("AdjAmount" | "Custom" | "Multiplier") | null;
      /** @enum {string|null} */
      billTime: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      /** Format: double */
      rate?: number | null;
      /** Format: double */
      hoursMax?: number | null;
      /** Format: double */
      hoursMin?: number | null;
      /** Format: double */
      roundBillHours?: number | null;
      /** Format: double */
      overageRate?: number | null;
      /** @enum {string|null} */
      overageRateType?: ("AdjAmount" | "Custom" | "Multiplier") | null;
      /** Format: double */
      agreementLimit?: number | null;
      site?: components["schemas"]["SiteReference"];
      /** Format: date-time */
      effectiveDate?: string;
      /** Format: date-time */
      endingDate?: string;
      /** Format: int32 */
      agreementId?: number | null;
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    AgreementWorkTypeExclusion: {
      /** Format: int32 */
      id?: number;
      workType?: components["schemas"]["WorkTypeReference"];
      /** Format: int32 */
      agreementId?: number | null;
      _info?: { [key: string]: string };
    };
    AllowedFileType: {
      /** Format: int32 */
      id?: number;
      fileType: string;
      /** Format: int32 */
      sizeLimit?: number | null;
      _info?: { [key: string]: string };
    };
    AllowedOrigin: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 2000; */
      origin: string;
      /** @description  Max length: 2000; */
      description: string;
      /** Format: date-time */
      lastUpdateUtc?: string;
      updatedBy?: string;
      _info?: { [key: string]: string };
    };
    ApiMember: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 15; */
      identifier: string;
      /** @description  Max length: 30; Required On Updates; */
      name?: string;
      /** @description  Max length: 250; */
      emailAddress?: string;
      inactiveFlag?: boolean | null;
      /** Format: date-time */
      inactiveDate?: string;
      timeZone?: components["schemas"]["TimeZoneSetupReference"];
      securityRole?: components["schemas"]["SecurityRoleReference"];
      structureLevel?: components["schemas"]["StructureReference"];
      securityLocation?: components["schemas"]["SystemLocationReference"];
      defaultLocation?: components["schemas"]["SystemLocationReference"];
      defaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      salesDefaultLocation?: components["schemas"]["SystemLocationReference"];
      serviceDefaultBoard?: components["schemas"]["BoardReference"];
      notes?: string;
      excludedServiceBoardIds?: number[];
      blockPriceFlag?: boolean | null;
      blockCostFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ApiRequest: {
      /** Format: int32 */
      id?: number;
      externalId?: string;
      /** Format: int32 */
      parentId?: number | null;
      /** Format: int32 */
      grandParentId?: number | null;
      entity?: components["schemas"]["IRestIdentifiedItem"];
      filters?: components["schemas"]["FilterValues"];
      page?: components["schemas"]["PageValues"];
      format?: string;
      fields?: string;
      miscProperties?: { [key: string]: { [key: string]: unknown } };
      memberContext?: string;
    };
    AuditTrailEntry: {
      text?: string;
      enteredDate?: string;
      enteredBy?: string;
      auditType?: string;
      auditSubType?: string;
      auditSource?: string;
    };
    AuditTrailEntryGetRequest: {
      /** @enum {string|null} */
      type?:
        | (
            | "None"
            | "Ticket"
            | "Contact"
            | "Company"
            | "Opportunity"
            | "Time"
            | "Activity"
            | "ProductCatalog"
            | "ProjectTicket"
            | "Purchasing"
            | "Configuration"
            | "Schedule"
            | "Agreement"
            | "AgreementAddition"
            | "Project"
            | "Invoice"
            | "PurchaseOrder"
            | "Expense"
          )
        | null;
      /** Format: int32 */
      id?: number | null;
      deviceIdentifier?: string;
    };
    AuthAnvil: {
      /** Format: int32 */
      id?: number;
      serverLocationUrl: string;
      /** Format: int32 */
      siteId: number | null;
      _info?: { [key: string]: string };
    };
    AutomateScriptReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    AutoSyncTime: {
      /** Format: int32 */
      id?: number;
      syncTime: string;
      timeZone?: components["schemas"]["TimeZoneSetupReference"];
      _info?: { [key: string]: string };
    };
    BatchEntry: {
      /** Format: int32 */
      id?: number;
      accountType?: string;
      name?: string;
      accountNumber?: string;
      /** Format: double */
      debit?: number | null;
      /** Format: double */
      credit?: number | null;
      /** Format: double */
      cost?: number;
      item?: string;
      salesCode?: string;
      costOfGoodsSoldAccountNumber?: string;
      invoice?: components["schemas"]["InvoiceReference"];
      purchaseOrder?: components["schemas"]["PurchaseOrderReference"];
      lineItem?: components["schemas"]["PurchaseOrderLineItemReference"];
      transfer?: string;
      expense?: components["schemas"]["ExpenseDetailReference"];
      adjustmentDetail?: components["schemas"]["AdjustmentDetailReference"];
      _info?: { [key: string]: string };
    };
    BillingCycle: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 5; */
      identifier: string;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean;
      /** @enum {string|null} */
      billingOptions:
        | (
            | "BiMonthly"
            | "BiWeekly"
            | "Monthly"
            | "NotRecurring"
            | "Quarterly"
            | "SemiAnnual"
            | "Weekly"
            | "Yearly"
          )
        | null;
      _info?: { [key: string]: string };
    };
    BillingCycleInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      defaultFlag?: boolean;
      _info?: { [key: string]: string };
    };
    BillingCycleReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    BillingDeliveryReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    BillingSetup: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      remitName: string;
      location: components["schemas"]["SystemLocationReference"];
      /** @description  Max length: 50; */
      addressOne?: string;
      /** @description  Max length: 50; */
      addressTwo?: string;
      /** @description  Max length: 50; */
      city?: string;
      state?: components["schemas"]["StateReference"];
      /** @description  Max length: 12; */
      zip?: string;
      country?: components["schemas"]["CountryReference"];
      /** @description  Max length: 15; */
      phone?: string;
      /** @description  Max length: 50; */
      invoiceTitle: string;
      /** @description  Max length: 50; */
      payableName: string;
      /** @description  Max length: 4000; */
      topcomment?: string;
      /** @description  Max length: 500; */
      invoiceFooter?: string;
      /** @description  Max length: 1000; */
      quoteFooter?: string;
      overallInvoiceDefault?: components["schemas"]["InvoiceTemplateReference"];
      standardInvoiceActual?: components["schemas"]["InvoiceTemplateReference"];
      standardInvoiceFixed?: components["schemas"]["InvoiceTemplateReference"];
      progressInvoice?: components["schemas"]["InvoiceTemplateReference"];
      agreementInvoice?: components["schemas"]["InvoiceTemplateReference"];
      creditMemoInvoice?: components["schemas"]["InvoiceTemplateReference"];
      downPaymentInvoice?: components["schemas"]["InvoiceTemplateReference"];
      miscInvoice?: components["schemas"]["InvoiceTemplateReference"];
      salesOrderInvoice?: components["schemas"]["InvoiceTemplateReference"];
      excludeDoNotBillTimeFlag?: boolean | null;
      excludeDoNotBillExpenseFlag?: boolean | null;
      excludeDoNotBillProductFlag?: boolean | null;
      /** @enum {string|null} */
      prefixSuffixFlag?: ("Prefix" | "Suffix") | null;
      /** @description  Max length: 5; */
      prefixSuffixText?: string;
      chargeAdjToFirmFlag?: boolean | null;
      noWatermarkFlag?: boolean | null;
      displayTaxFlag?: boolean | null;
      allowRestrictedDeptOnRoutingFlag?: boolean | null;
      billTicketSeparatelyFlag?: boolean | null;
      billTicketCompleteFlag?: boolean | null;
      billTicketUnapprovedFlag?: boolean | null;
      billProjectCompleteFlag?: boolean | null;
      billProjectUnapprovedFlag?: boolean | null;
      progressTimeFlag?: boolean | null;
      restrictProjectDownpaymentFlag?: boolean | null;
      billSalesOrderCompleteFlag?: boolean | null;
      billProductAfterShipFlag?: boolean | null;
      restrictDownpaymentFlag?: boolean | null;
      copyNonServiceProductsFlag?: boolean | null;
      copyServiceProductsFlag?: boolean | null;
      copyAgreementProductsFlag?: boolean | null;
      printLogoFlag?: boolean | null;
      readReceiptFlag?: boolean | null;
      deliveryReceiptFlag?: boolean | null;
      disableRoutingEmailFlag?: boolean | null;
      emailTemplate: components["schemas"]["EmailTemplateReference"];
      localizedCountry?: components["schemas"]["CountryReference"];
      /** @description  Max length: 50; */
      businessNumber?: string;
      currency?: components["schemas"]["CurrencyReference"];
      /** @description  Max length: 50; */
      customLabel?: string;
      /** @description  Max length: 500; */
      customText?: string;
      /** @description  Max length: 250; */
      companyCode?: string;
      excludeAvalaraFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    BillingSetupInfo: {
      /** Format: int32 */
      id?: number;
      remitName?: string;
      location?: components["schemas"]["SystemLocationReference"];
      currency?: components["schemas"]["CurrencyReference"];
      _info?: { [key: string]: string };
    };
    BillingSetupReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    BillingSetupRouting: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      sequenceNumber: number | null;
      /** @enum {string|null} */
      invoiceRule: ("All" | "Standard" | "Project" | "Agreement") | null;
      /** @enum {string|null} */
      routingRule:
        | (
            | "Account"
            | "Territory"
            | "Creator"
            | "Department"
            | "Location"
            | "Member"
            | "Project"
            | "Sales"
          )
        | null;
      member?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    BillingStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      /** Format: int32 */
      sortOrder?: number | null;
      defaultFlag?: boolean | null;
      closedFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      sentFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    BillingStatusInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      sortOrder?: number | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    BillingStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    BillingTerm: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      /** Format: int32 */
      dueDays: number | null;
      /** @description  Max length: 50; */
      termsXref?: string;
      _info?: { [key: string]: string };
    };
    BillingTermInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    BillingTermsReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Board: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      inactiveFlag?: boolean | null;
      signOffTemplate?: components["schemas"]["ServiceSignoffReference"];
      sendToContactFlag?: boolean | null;
      contactTemplate?: components["schemas"]["ServiceEmailTemplateReference"];
      sendToResourceFlag?: boolean | null;
      resourceTemplate?: components["schemas"]["ServiceEmailTemplateReference"];
      projectFlag?: boolean | null;
      /** @description This field only shows if it is Project Board. */
      showDependenciesFlag?: boolean | null;
      /** @description This field only shows if it is Project Board. */
      showEstimatesFlag?: boolean | null;
      boardIcon?: components["schemas"]["DocumentReference"];
      billTicketsAfterClosedFlag?: boolean | null;
      billTicketSeparatelyFlag?: boolean | null;
      billUnapprovedTimeExpenseFlag?: boolean | null;
      overrideBillingSetupFlag?: boolean | null;
      dispatchMember?: components["schemas"]["MemberReference"];
      serviceManagerMember?: components["schemas"]["MemberReference"];
      dutyManagerMember?: components["schemas"]["MemberReference"];
      oncallMember?: components["schemas"]["MemberReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      /** @enum {string|null} */
      billTime?: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      /** @enum {string|null} */
      billExpense?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** @enum {string|null} */
      billProduct?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      autoCloseStatus?: components["schemas"]["ServiceStatusReference"];
      autoAssignNewTicketsFlag?: boolean | null;
      autoAssignNewECTicketsFlag?: boolean | null;
      autoAssignNewPortalTicketsFlag?: boolean | null;
      discussionsLockedFlag?: boolean | null;
      timeEntryLockedFlag?: boolean | null;
      /** @description  Max length: 50; */
      notifyEmailFrom?: string;
      /** @description  Max length: 60; */
      notifyEmailFromName?: string;
      closedLoopDiscussionsFlag?: boolean | null;
      closedLoopResolutionFlag?: boolean | null;
      closedLoopInternalAnalysisFlag?: boolean | null;
      timeEntryDiscussionFlag?: boolean | null;
      timeEntryResolutionFlag?: boolean | null;
      timeEntryInternalAnalysisFlag?: boolean | null;
      /** @enum {string|null} */
      problemSort?: ("Ascending" | "Descending") | null;
      /** @enum {string|null} */
      resolutionSort?: ("Ascending" | "Descending") | null;
      /** @enum {string|null} */
      internalAnalysisSort?: ("Ascending" | "Descending") | null;
      emailConnectorAllowReopenClosedFlag?: boolean | null;
      emailConnectorReopenStatus?: components["schemas"]["ServiceStatusReference"];
      /** @description This field can only be set when emailConnectorAllowReopenClosed is true */
      emailConnectorReopenResourcesFlag?: boolean | null;
      /** @description This field can only be set when emailConnectorAllowReopenClosed is true */
      emailConnectorNewTicketNoMatchFlag?: boolean | null;
      /** @description This field can only be set when emailConnectorAllowReopenClosed is true */
      emailConnectorNeverReopenByDaysFlag?: boolean | null;
      /**
       * Format: int32
       * @description This field can only be set when emailConnectorNeverReopenByDaysFlag and emailConnectorAllowReopenClosed are both true
       *             This field is required when emailConnectorNeverReopenByDaysFlag is true
       */
      emailConnectorReopenDaysLimit?: number | null;
      /** @description This field can only be set when emailConnectorAllowReopenClosed is true */
      emailConnectorNeverReopenByDaysClosedFlag?: boolean | null;
      /**
       * Format: int32
       * @description This field can only be set when emailConnectorNeverReopenByDaysClosedFlag and emailConnectorAllowReopenClosed are both true
       *             This field is required when emailConnectorNeverReopenByDaysClosedFlag is true
       */
      emailConnectorReopenDaysClosedLimit?: number | null;
      useMemberDisplayNameFlag?: boolean | null;
      sendToCCFlag?: boolean | null;
      autoAssignTicketOwnerFlag?: boolean | null;
      closedLoopAllFlag?: boolean | null;
      /** @enum {string|null} */
      percentageCalculation?:
        | ("ActualHours" | "Manual" | "ClosedPhases" | "ClosedTickets")
        | null;
      /** @enum {string|null} */
      allSort?: ("Ascending" | "Descending") | null;
      markFirstNoteIssueFlag?: boolean | null;
      restrictBoardByDefaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    BoardAutoAssignResource: {
      /** Format: int32 */
      id?: number;
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      member?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    BoardAutoTemplate: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["ServiceTypeReference"];
      subtype?: components["schemas"]["ServiceSubTypeReference"];
      item?: components["schemas"]["ServiceItemReference"];
      serviceTemplate?: components["schemas"]["ServiceTemplateReference"];
      board?: components["schemas"]["BoardReference"];
      /** @enum {string|null} */
      summarySetting?: ("Append" | "Overwrite" | "Ignore") | null;
      /** @enum {string|null} */
      discussionSetting?: ("Append" | "Overwrite" | "Ignore") | null;
      /** @enum {string|null} */
      internalAnalysisSetting?: ("Append" | "Overwrite" | "Ignore") | null;
      /** @enum {string|null} */
      resolutionSetting?: ("Append" | "Overwrite" | "Ignore") | null;
      /** @enum {string|null} */
      tasksSetting?: ("Append" | "Overwrite" | "Ignore") | null;
      /** @enum {string|null} */
      documentsSetting?: ("Append" | "Overwrite" | "Ignore") | null;
      /** @enum {string|null} */
      resourcesSetting?: ("Append" | "Overwrite" | "Ignore") | null;
      /** @enum {string|null} */
      budgetHoursSetting?: ("Append" | "Overwrite" | "Ignore") | null;
      /** @enum {string|null} */
      financeInformationSetting?: ("Append" | "Overwrite" | "Ignore") | null;
      /** @enum {string|null} */
      sendNotesAsEmailSetting?: ("Append" | "Overwrite" | "Ignore") | null;
      autoApplyFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    BoardCopy: {
      /** Format: int32 */
      id: number;
      /** @description  Max length: 50; */
      name: string;
    };
    BoardDefault: {
      /** Format: int32 */
      id?: number;
      board?: components["schemas"]["BoardReference"];
      serviceType?: components["schemas"]["ServiceTypeReference"];
      defaultFlag?: boolean | null;
      /** Format: int32 */
      agreementId?: number | null;
      _info?: { [key: string]: string };
    };
    BoardExcludedMember: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      memberId?: number;
      /** Format: int32 */
      boardId?: number | null;
      _info?: { [key: string]: string };
    };
    BoardInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      projectFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      closedLoopDiscussionsFlag?: boolean | null;
      closedLoopInternalAnalysisFlag?: boolean | null;
      closedLoopResolutionFlag?: boolean | null;
      closedLoopAllFlag?: boolean | null;
      /** @enum {string|null} */
      problemSort?: ("Ascending" | "Descending") | null;
      /** @enum {string|null} */
      internalAnalysisSort?: ("Ascending" | "Descending") | null;
      /** @enum {string|null} */
      resolutionSort?: ("Ascending" | "Descending") | null;
      /** @enum {string|null} */
      allSort?: ("Ascending" | "Descending") | null;
      _info?: { [key: string]: string };
    };
    BoardItem: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      board?: components["schemas"]["BoardReference"];
      _info?: { [key: string]: string };
    };
    BoardItemAssociation: {
      /** Format: int32 */
      id: number;
      /** @description If addAllSubTypesFlag and removeAllSubTypesFlag are both false, this field is required. */
      subTypeAssociationIds?: number[];
      addAllSubTypesFlag?: boolean | null;
      removeAllSubTypesFlag?: boolean | null;
      item?: components["schemas"]["ServiceItemReference"];
      board?: components["schemas"]["BoardReference"];
      _info?: { [key: string]: string };
    };
    BoardNotification: {
      /** Format: int32 */
      id?: number;
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      member?: components["schemas"]["MemberReference"];
      /** @description  Max length: 50; */
      email?: string;
      _info?: { [key: string]: string };
    };
    BoardReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    BoardStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      board?: components["schemas"]["BoardReference"];
      /** Format: int32 */
      sortOrder?: number | null;
      displayOnBoard?: boolean | null;
      inactive?: boolean | null;
      closedStatus?: boolean | null;
      timeEntryNotAllowed?: boolean | null;
      defaultFlag?: boolean | null;
      /** @enum {string|null} */
      escalationStatus?:
        | (
            | "NotResponded"
            | "Responded"
            | "ResolutionPlan"
            | "Resolved"
            | "NoEscalation"
          )
        | null;
      /** @description  Max length: 500; */
      customerPortalDescription?: string;
      customerPortalFlag?: boolean | null;
      emailTemplate?: components["schemas"]["ServiceEmailTemplateReference"];
      statusIndicator?: components["schemas"]["StatusIndicatorReference"];
      /** @description  Max length: 30; */
      customStatusIndicatorName?: string;
      _info?: { [key: string]: string };
    };
    BoardStatusInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      sortOrder?: number | null;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      closedFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    BoardStatusNotification: {
      /** Format: int32 */
      id?: number;
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      status?: components["schemas"]["ServiceStatusReference"];
      member?: components["schemas"]["MemberReference"];
      /** @description Service Status Notification email must be entered if the notify type is "Email Address" Max length: 255; */
      email?: string;
      /** Format: int32 */
      workflowStep?: number | null;
      _info?: { [key: string]: string };
    };
    BoardSubType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      typeAssociationIds?: number[];
      addAllTypesFlag?: boolean | null;
      removeAllTypesFlag?: boolean | null;
      board?: components["schemas"]["BoardReference"];
      _info?: { [key: string]: string };
    };
    BoardSubTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      typeAssociationIds?: number[];
      _info?: { [key: string]: string };
    };
    BoardTeam: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      teamLeader?: components["schemas"]["MemberReference"];
      members?: number[];
      defaultFlag?: boolean | null;
      notifyOnTicketDelete?: boolean | null;
      /** Format: int32 */
      boardId?: number | null;
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      _info?: { [key: string]: string };
    };
    BoardTeamInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    BoardType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** @enum {string|null} */
      category?: ("Reactive" | "Proactive") | null;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      requestForChangeFlag?: boolean | null;
      /** @description  Max length: 50; */
      integrationXref?: string;
      board?: components["schemas"]["BoardReference"];
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      _info?: { [key: string]: string };
    };
    BoardTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      board?: components["schemas"]["BoardReference"];
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    BoardTypeSubTypeItemAssociation: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["ServiceTypeReference"];
      subType?: components["schemas"]["ServiceSubTypeReference"];
      item?: components["schemas"]["ServiceItemReference"];
      board?: components["schemas"]["BoardReference"];
      _info?: { [key: string]: string };
    };
    BulkResult: {
      payload?: components["schemas"]["ResultInfo"][];
      _info?: { [key: string]: string };
    };
    BundleRequest: {
      /** Format: int32 */
      sequenceNumber?: number;
      resourceType?: string;
      version?: string;
      apiRequest?: components["schemas"]["ApiRequest"];
    };
    BundleRequestsCollection: {
      requests: components["schemas"]["BundleRequest"][];
    };
    BundleResult: {
      /** Format: int32 */
      sequenceNumber?: number;
      resourceType?: string;
      entities?: components["schemas"]["IRestIdentifiedItem"][];
      /** Format: int32 */
      count?: number;
      version?: string;
      success?: boolean;
      /** Format: int32 */
      statusCode?: number;
      error?: components["schemas"]["ErrorResponseMessage"];
    };
    BundleResultsCollection: {
      results?: components["schemas"]["BundleResult"][];
      _info?: { [key: string]: string };
    };
    Calendar: {
      /** Format: int32 */
      id?: number;
      name: string;
      holidayList?: components["schemas"]["HolidayListReference"];
      mondayStartTime?: string;
      mondayEndTime?: string;
      tuesdayStartTime?: string;
      tuesdayEndTime?: string;
      wednesdayStartTime?: string;
      wednesdayEndTime?: string;
      thursdayStartTime?: string;
      thursdayEndTime?: string;
      fridayStartTime?: string;
      fridayEndTime?: string;
      saturdayStartTime?: string;
      saturdayEndTime?: string;
      sundayStartTime?: string;
      sundayEndTime?: string;
      _info?: { [key: string]: string };
    };
    CalendarInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    CalendarReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    CalendarSetupReference: {
      /** Format: int32 */
      id?: number | null;
      _info?: { [key: string]: string };
    };
    CallbackEntry: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      description?: string;
      /** @description  Required Reference */
      url?: string;
      /**
       * Format: int32
       * @description  Required Reference
       */
      objectId?: number | null;
      /** @description  Required Reference */
      type?: string;
      /** @description  Required Reference */
      level?: string;
      /** Format: int32 */
      memberId?: number | null;
      payloadVersion?: string;
      inactiveFlag?: boolean | null;
      isSoapCallbackFlag?: boolean | null;
      isSelfSuppressedFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    Campaign: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      type?: components["schemas"]["CampaignTypeReference"];
      subType?: components["schemas"]["CampaignSubTypeReference"];
      status?: components["schemas"]["CampaignStatusReference"];
      /** Format: date-time */
      startDate: string;
      /** Format: date-time */
      endDate?: string;
      /** Format: int32 */
      locationId?: number | null;
      member?: components["schemas"]["MemberReference"];
      inactive?: boolean | null;
      /** Format: int32 */
      inactiveDaysAfterEnd?: number | null;
      notes?: string;
      defaultGroup?: components["schemas"]["GroupReference"];
      /** Format: int32 */
      marketingManagerDefaultTrackId?: number | null;
      /** Format: int32 */
      opportunityDefaultTrackId?: number | null;
      /** Format: int32 */
      impressions?: number | null;
      /** Format: double */
      budgetRevenue?: number | null;
      /** Format: double */
      budgetCost?: number | null;
      /** Format: double */
      actualCost?: number | null;
      /** Format: double */
      budgetGrossMargin?: number | null;
      /** Format: double */
      budgetROI?: number | null;
      /** Format: double */
      actualRevenue?: number | null;
      /** Format: double */
      actualGrossMargin?: number | null;
      /** Format: double */
      actualROI?: number | null;
      /** Format: int32 */
      emailsSent?: number | null;
      _info?: { [key: string]: string };
    };
    "Campaign.SubType.CampaignSubType": {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["CampaignTypeReference"];
      /** @description  Max length: 100; */
      name: string;
      _info?: { [key: string]: string };
    };
    CampaignAudit: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      emailsSent: number | null;
      /** Format: int32 */
      emailsUnsent?: number | null;
      /** Format: int32 */
      documentsCreated?: number | null;
      /** @description  Max length: 1000; */
      emailSubject?: string;
      group?: components["schemas"]["GroupReference"];
      /** Format: int32 */
      campaignId?: number | null;
      createdBy?: string;
      dateCreated?: string;
    };
    CampaignReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    CampaignStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      name: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    CampaignStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    CampaignSubTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    CampaignType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      name: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    CampaignTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    CampaignTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    CatalogComponent: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      sequenceNumber?: number | null;
      /** Format: double */
      quantity: number | null;
      catalogItem?: components["schemas"]["CatalogItemReference"];
      hidePriceFlag?: boolean | null;
      hideItemIdentifierFlag?: boolean | null;
      hideDescriptionFlag?: boolean | null;
      hideQuantityFlag?: boolean | null;
      hideExtendedPriceFlag?: boolean | null;
      parentCatalogItem?: components["schemas"]["CatalogItemReference"];
      /** Format: double */
      price?: number | null;
      /** Format: double */
      cost?: number | null;
      _info?: { [key: string]: string };
    };
    CatalogInventory: {
      /** Format: int32 */
      id?: number;
      catalogItem?: components["schemas"]["CatalogItemReference"];
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      /** Format: int32 */
      onHand?: number | null;
      serialNumbers?: components["schemas"]["OnHandSerialNumberReference"][];
      _info?: { [key: string]: string };
    };
    CatalogItem: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 60; */
      identifier: string;
      /** @description  Max length: 60; */
      description: string;
      inactiveFlag?: boolean | null;
      subcategory?: components["schemas"]["ProductSubCategoryReference"];
      type?: components["schemas"]["ProductTypeReference"];
      /**
       * @description Defaults to Non-Inventory
       * @enum {string|null}
       */
      productClass?:
        | ("Agreement" | "Bundle" | "Inventory" | "NonInventory" | "Service")
        | null;
      serializedFlag?: boolean | null;
      serializedCostFlag?: boolean | null;
      phaseProductFlag?: boolean | null;
      unitOfMeasure?: components["schemas"]["UnitOfMeasureReference"];
      /** Format: int32 */
      minStockLevel?: number | null;
      /** Format: double */
      price?: number | null;
      /** Format: double */
      cost?: number | null;
      /** @enum {string|null} */
      priceAttribute?:
        | ("FixedFee" | "NotToExceed" | "OverrideRate" | "TimeAndMaterials")
        | null;
      taxableFlag?: boolean | null;
      dropShipFlag?: boolean | null;
      specialOrderFlag?: boolean | null;
      /** @description  Max length: 6000; */
      customerDescription: string;
      manufacturer?: components["schemas"]["ManufacturerReference"];
      /** @description  Max length: 50; */
      manufacturerPartNumber?: string;
      vendor?: components["schemas"]["CompanyReference"];
      /** @description  Max length: 50; */
      vendorSku?: string;
      notes?: string;
      /** @description  Max length: 50; */
      integrationXRef?: string;
      sla?: components["schemas"]["SLAReference"];
      entityType?: components["schemas"]["EntityTypeReference"];
      recurringFlag?: boolean | null;
      /** Format: double */
      recurringRevenue?: number | null;
      /** Format: double */
      recurringCost?: number | null;
      recurringOneTimeFlag?: boolean | null;
      recurringBillCycle?: components["schemas"]["BillingCycleReference"];
      /** @enum {string|null} */
      recurringCycleType?: ("ContractYear" | "CalendarYear") | null;
      dateEntered?: string;
      calculatedPriceFlag?: boolean | null;
      calculatedCostFlag?: boolean | null;
      category?: components["schemas"]["ProductCategoryReference"];
      /** Format: double */
      calculatedPrice?: number | null;
      /** Format: double */
      calculatedCost?: number | null;
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    CatalogItemInfo: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      description?: string;
      inactiveFlag?: boolean | null;
      /** @enum {string|null} */
      productClass?:
        | ("Agreement" | "Bundle" | "Inventory" | "NonInventory" | "Service")
        | null;
      serializedCostFlag?: boolean | null;
      /** Format: double */
      price?: number | null;
      /** Format: double */
      cost?: number | null;
      taxableFlag?: boolean | null;
      dropShipFlag?: boolean | null;
      specialOrderFlag?: boolean | null;
      customerDescription?: string;
      manufacturerPartNumber?: string;
      vendorSku?: string;
      _info?: { [key: string]: string };
    };
    CatalogItemReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    CatalogPricing: {
      catalogItem?: components["schemas"]["CatalogItemReference"];
      company?: components["schemas"]["CompanyReference"];
      location?: components["schemas"]["SystemLocationReference"];
      /** Format: int32 */
      quantity?: number;
      date?: string;
      /** Format: double */
      price?: number | null;
    };
    Category: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      /** @description  Max length: 10; */
      priceLevelXref?: string;
      /** @description  Max length: 50; */
      integrationXref?: string;
      locationIds?: number[];
      defaultFlag?: boolean | null;
      addAllLocations?: boolean | null;
      removeAllLocations?: boolean | null;
      _info?: { [key: string]: string };
    };
    CategoryInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    Certification: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    CertificationReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ChargeCode: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      company?: components["schemas"]["CompanyReference"];
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      /** @enum {string|null} */
      billTime?: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      expenseEntryFlag?: boolean | null;
      allowAllExpenseTypeFlag?: boolean | null;
      timeEntryFlag?: boolean | null;
      workType?: components["schemas"]["WorkTypeReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      /** @description  Max length: 50; */
      integrationXref?: string;
      expenseTypeIds?: number[];
      _info?: { [key: string]: string };
    };
    ChargeCodeExpenseType: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["ExpenseTypeReference"];
      chargeCode?: components["schemas"]["ChargeCodeReference"];
      _info?: { [key: string]: string };
    };
    ChargeCodeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      expenseEntryFlag?: boolean | null;
      allowAllExpenseTypeFlag?: boolean | null;
      timeEntryFlag?: boolean | null;
      workType?: components["schemas"]["WorkTypeReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      expenseTypeIds?: number[];
      _info?: { [key: string]: string };
    };
    ChargeCodeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Classification: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: double */
      multiplier?: number | null;
      defaultFlag?: boolean | null;
      companyFlag?: boolean | null;
      employeeFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ClassificationReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ClearPickerRequest: {
      member?: components["schemas"]["MemberReference"];
      /** @enum {string|null} */
      type?: ("Company" | "Vendor") | null;
    };
    ClosedInvoice: {
      /** Format: int32 */
      id?: number;
      status?: components["schemas"]["BillingStatusReference"];
      _info?: { [key: string]: string };
    };
    Code: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      description: string;
      /** Format: int32 */
      boardId?: number | null;
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      _info?: { [key: string]: string };
    };
    Commission: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      /** Format: double */
      commissionPercent?: number | null;
      /** Format: date-time */
      dateStart?: string;
      /** Format: date-time */
      dateEnd?: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      company?: components["schemas"]["CompanyReference"];
      site?: components["schemas"]["SiteReference"];
      agreement?: components["schemas"]["AgreementReference"];
      project?: components["schemas"]["ProjectReference"];
      serviceBoard?: components["schemas"]["BoardReference"];
      ticket?: components["schemas"]["TicketReference"];
      territory?: components["schemas"]["SystemLocationReference"];
      /** @enum {string|null} */
      billingMethod?:
        | (
            | "Agreement"
            | "CreditMemo"
            | "DownPayment"
            | "Miscellaneous"
            | "Progress"
            | "Standard"
          )
        | null;
      serviceType?: components["schemas"]["ServiceTypeReference"];
      projectBoard?: components["schemas"]["ProjectBoardReference"];
      projectType?: components["schemas"]["ProjectTypeReference"];
      agreementType?: components["schemas"]["AgreementTypeReference"];
      /** Format: int32 */
      numberOfMonths?: number | null;
      productCategory?: components["schemas"]["ProductCategoryReference"];
      productSubCategory?: components["schemas"]["ProductSubCategoryReference"];
      item?: components["schemas"]["IvItemReference"];
      /** @enum {string|null} */
      commissionBasis?: ("GrossProfit" | "SalesAmount") | null;
      /** @enum {string|null} */
      invoiceOption?: ("AllInvoices" | "PaidInvoices") | null;
      servicesFlag?: boolean | null;
      agreementsFlag?: boolean | null;
      productsFlag?: boolean | null;
      myOpportunitiesFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    CommunicationType: {
      /** Format: int32 */
      id?: number;
      description: string;
      /** @description At least one flag is required to be true -- phone, fax, or email */
      phoneFlag?: boolean | null;
      /** @description At least one flag is required to be true -- phone, fax, or email */
      faxFlag?: boolean | null;
      /** @description At least one flag is required to be true -- phone, fax, or email */
      emailFlag?: boolean | null;
      defaultFlag?: boolean | null;
      /** @description Exchange Xref required if phone or fax Max length: 50; */
      exchangeXref?: string;
      /** @description  Max length: 50; */
      iphoneXref: string;
      /** @description  Max length: 50; */
      androidXref: string;
      /** @description Google Xref required if phone or fax Max length: 50; */
      googleXref?: string;
      _info?: { [key: string]: string };
    };
    CommunicationTypeInfo: {
      /** Format: int32 */
      id?: number;
      description?: string;
      phoneFlag?: boolean | null;
      faxFlag?: boolean | null;
      emailFlag?: boolean | null;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    CommunicationTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Company: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 25; */
      identifier: string;
      /** @description  Max length: 50; */
      name: string;
      status?: components["schemas"]["CompanyStatusReference"];
      /** @description At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 50; */
      addressLine1?: string;
      /** @description At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 50; */
      addressLine2?: string;
      /** @description At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 50; */
      city?: string;
      /** @description At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 50; */
      state?: string;
      /** @description At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 12; */
      zip?: string;
      country?: components["schemas"]["CountryReference"];
      /** @description  Max length: 30; */
      phoneNumber?: string;
      /** @description  Max length: 30; */
      faxNumber?: string;
      /** @description  Max length: 255; */
      website?: string;
      territory?: components["schemas"]["SystemLocationReference"];
      market?: components["schemas"]["MarketDescriptionReference"];
      accountNumber?: string;
      defaultContact?: components["schemas"]["ContactReference"];
      /** Format: date-time */
      dateAcquired?: string;
      sicCode?: components["schemas"]["SicCodeReference"];
      parentCompany?: components["schemas"]["CompanyReference"];
      /** Format: double */
      annualRevenue?: number | null;
      /** Format: int32 */
      numberOfEmployees?: number | null;
      /** Format: int32 */
      yearEstablished?: number | null;
      /** Format: int32 */
      revenueYear?: number | null;
      ownershipType?: components["schemas"]["OwnershipTypeReference"];
      timeZoneSetup?: components["schemas"]["TimeZoneSetupReference"];
      /** @description  Max length: 50; */
      leadSource?: string;
      leadFlag?: boolean | null;
      unsubscribeFlag?: boolean | null;
      calendar?: components["schemas"]["CalendarReference"];
      /** @description  Max length: 50; */
      userDefinedField1?: string;
      /** @description  Max length: 50; */
      userDefinedField2?: string;
      /** @description  Max length: 50; */
      userDefinedField3?: string;
      /** @description  Max length: 50; */
      userDefinedField4?: string;
      /** @description  Max length: 50; */
      userDefinedField5?: string;
      /** @description  Max length: 50; */
      userDefinedField6?: string;
      /** @description  Max length: 50; */
      userDefinedField7?: string;
      /** @description  Max length: 50; */
      userDefinedField8?: string;
      /** @description  Max length: 50; */
      userDefinedField9?: string;
      /** @description  Max length: 50; */
      userDefinedField10?: string;
      vendorIdentifier?: string;
      taxIdentifier?: string;
      taxCode?: components["schemas"]["TaxCodeReference"];
      billingTerms?: components["schemas"]["BillingTermsReference"];
      invoiceTemplate?: components["schemas"]["InvoiceTemplateReference"];
      pricingSchedule?: components["schemas"]["PricingScheduleReference"];
      companyEntityType?: components["schemas"]["EntityTypeReference"];
      billToCompany?: components["schemas"]["CompanyReference"];
      billingSite?: components["schemas"]["SiteReference"];
      billingContact?: components["schemas"]["ContactReference"];
      invoiceDeliveryMethod?: components["schemas"]["BillingDeliveryReference"];
      invoiceToEmailAddress?: string;
      invoiceCCEmailAddress?: string;
      deletedFlag?: boolean | null;
      /** Format: date-time */
      dateDeleted?: string;
      deletedBy?: string;
      /** Format: uuid */
      mobileGuid?: string | null;
      facebookUrl?: string;
      twitterUrl?: string;
      linkedInUrl?: string;
      currency?: components["schemas"]["CurrencyReference"];
      territoryManager?: components["schemas"]["MemberReference"];
      resellerIdentifier?: string;
      isVendorFlag?: boolean | null;
      /**
       * @description Integrer array of Company_Type_Recids to be assigned to company that can be passed in only during new company creation (post)
       *             To update existing companies type, use the /company/companyTypeAssociations or /company/companies/{ID}/typeAssociations endpoints
       */
      types?: components["schemas"]["CompanyTypeReference"][];
      site?: components["schemas"]["SiteReference"];
      integratorTags?: string[];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    "Company.CompanyTypeAssociation": {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["CompanyTypeReference"];
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    "Company.Configuration": {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      name: string;
      type?: components["schemas"]["ConfigurationTypeReference"];
      status?: components["schemas"]["ConfigurationStatusReference"];
      company?: components["schemas"]["CompanyReference"];
      contact?: components["schemas"]["ContactReference"];
      site?: components["schemas"]["SiteReference"];
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      /** @description  Max length: 100; */
      deviceIdentifier?: string;
      /** @description  Max length: 250; */
      serialNumber?: string;
      /** @description  Max length: 50; */
      modelNumber?: string;
      /** @description  Max length: 50; */
      tagNumber?: string;
      /** Format: date-time */
      purchaseDate?: string;
      /** Format: date-time */
      installationDate?: string;
      installedBy?: components["schemas"]["MemberReference"];
      /** Format: date-time */
      warrantyExpirationDate?: string;
      vendorNotes?: string;
      notes?: string;
      /** @description  Max length: 25; */
      macAddress?: string;
      /** @description  Max length: 100; */
      lastLoginName?: string;
      billFlag?: boolean | null;
      /** Format: int32 */
      backupSuccesses?: number | null;
      /** Format: int32 */
      backupIncomplete?: number | null;
      /** Format: int32 */
      backupFailed?: number | null;
      /** Format: int32 */
      backupRestores?: number | null;
      /** Format: date-time */
      lastBackupDate?: string;
      /** @description  Max length: 50; */
      backupServerName?: string;
      /** Format: double */
      backupBillableSpaceGb?: number | null;
      backupProtectedDeviceList?: string;
      /** Format: int32 */
      backupYear?: number | null;
      /** Format: int32 */
      backupMonth?: number | null;
      /** @description  Max length: 50; */
      ipAddress?: string;
      /** @description  Max length: 50; */
      defaultGateway?: string;
      /** @description  Max length: 250; */
      osType?: string;
      /** @description  Max length: 250; */
      osInfo?: string;
      /** @description  Max length: 100; */
      cpuSpeed?: string;
      /** @description  Max length: 25; */
      ram?: string;
      localHardDrives?: string;
      /** Format: int32 */
      parentConfigurationId?: number | null;
      vendor?: components["schemas"]["CompanyReference"];
      manufacturer?: components["schemas"]["ManufacturerReference"];
      questions?: components["schemas"]["ConfigurationQuestion"][];
      activeFlag?: boolean | null;
      /** @description  Max length: 1000; */
      managementLink?: string;
      /** @description  Max length: 1000; */
      remoteLink?: string;
      sla?: components["schemas"]["SLAReference"];
      /** Format: uuid */
      mobileGuid?: string | null;
      _info?: { [key: string]: string };
      displayVendorFlag?: boolean | null;
      /** Format: int32 */
      companyLocationId?: number | null;
      showRemoteFlag?: boolean | null;
      showAutomateFlag?: boolean | null;
      needsRenewalFlag?: boolean | null;
      /** @description  Max length: 50; */
      manufacturerPartNumber?: string;
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    "Company.ContactTypeAssociation": {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["ContactTypeReference"];
      contact?: components["schemas"]["ContactReference"];
      _info?: { [key: string]: string };
    };
    "CompanyCompanyTypeAssociation.CompanyTypeAssociation": {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["CompanyTypeReference"];
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    CompanyCustomNote: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 1500; */
      customNote: string;
      status?: components["schemas"]["CompanyStatusReference"];
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    CompanyFinance: {
      /** Format: int32 */
      id?: number;
      billOverrideFlag?: boolean | null;
      billSrFlag?: boolean | null;
      billCompleteSrFlag?: boolean | null;
      billUnapprovedSrFlag?: boolean | null;
      billRestrictPmFlag?: boolean | null;
      billCompletePmFlag?: boolean | null;
      billUnapprovedPmFlag?: boolean | null;
      emailTemplate?: components["schemas"]["EmailTemplateReference"];
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    CompanyGroup: {
      /**
       * Format: int32
       * @description  Required On Updates;
       */
      id?: number;
      group?: components["schemas"]["GroupReference"];
      company?: components["schemas"]["CompanyReference"];
      defaultContactFlag?: boolean | null;
      allContactsFlag?: boolean | null;
      removeAllContactsFlag?: boolean | null;
      unsubscribeFlag?: boolean | null;
      contactIds?: number[];
      _info?: { [key: string]: string };
    };
    CompanyManagementSummary: {
      /** Format: int32 */
      id?: number;
      managementSolution?: components["schemas"]["ManagementSolutionReference"];
      /** @description  Max length: 100; */
      groupIdentifier: string;
      /**
       * @description deviceType is required if the managementSolution is Legacy
       * @enum {string|null}
       */
      deviceType?:
        | (
            | "WorkstationsAndServers"
            | "BackupStats"
            | "Servers"
            | "Workstations"
          )
        | null;
      agreement?: components["schemas"]["AgreementReference"];
      /** Format: int32 */
      snmpMachines?: number | null;
      /** Format: int32 */
      totalWorkstations?: number | null;
      /** Format: int32 */
      totalServers?: number | null;
      /** Format: int32 */
      totalWindowsServers?: number | null;
      /** Format: int32 */
      totalWindowsWorkstations?: number | null;
      /** Format: int32 */
      totalManagedMachines?: number | null;
      /** Format: int32 */
      serversOffline?: number | null;
      /** Format: int32 */
      serversDiskSpaceLow?: number | null;
      /** Format: int32 */
      failedBackupJobs?: number | null;
      /** Format: int32 */
      totalNotifications?: number | null;
      /** Format: int32 */
      successfulBackupJobs?: number | null;
      /** Format: int32 */
      serverAvailability?: number | null;
      /** Format: int32 */
      virusesRemoved?: number | null;
      /** Format: int32 */
      spywareItemsRemoved?: number | null;
      /** Format: int32 */
      windowsPatchesInstalled?: number | null;
      /** Format: int32 */
      diskCleanups?: number | null;
      /** Format: int32 */
      diskDefragmentations?: number | null;
      /** Format: int32 */
      fullyPatchedMachines?: number | null;
      /** Format: int32 */
      missingOneTwoPatchesMachines?: number | null;
      /** Format: int32 */
      missingThreeFivePatchesMachines?: number | null;
      /** Format: int32 */
      missingMoreFivePatchesMachines?: number | null;
      /** Format: int32 */
      missingUnscannedPatchesMachines?: number | null;
      alertsGenerated?: string;
      /** Format: double */
      internetConnectivity?: number | null;
      /** Format: int32 */
      diskSpaceCleanedMb?: number | null;
      missingSecurityPatches?: string;
      /** Format: double */
      cpuUtilization?: number | null;
      /** Format: double */
      memoryUtilization?: number | null;
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    CompanyMerge: {
      /** Format: int32 */
      toCompanyId: number;
      /** @enum {string|null} */
      name?: ("From" | "To") | null;
      /** @enum {string|null} */
      identifier?: ("From" | "To") | null;
      /** @enum {string|null} */
      status?: ("From" | "To") | null;
      /** @enum {string|null} */
      type?: ("From" | "To") | null;
      /** @enum {string|null} */
      primaryAddress?: ("From" | "To") | null;
      /** @enum {string|null} */
      primaryContact?: ("From" | "To") | null;
      /** @enum {string|null} */
      phone?: ("From" | "To") | null;
      /** @enum {string|null} */
      fax?: ("From" | "To") | null;
      /** @enum {string|null} */
      website?: ("From" | "To") | null;
      /** @enum {string|null} */
      market?: ("From" | "To") | null;
      /** @enum {string|null} */
      territory?: ("From" | "To") | null;
      /** @enum {string|null} */
      revenue?: ("From" | "To") | null;
      /** @enum {string|null} */
      revenueYear?: ("From" | "To") | null;
      /** @enum {string|null} */
      numberOfEmployees?: ("From" | "To") | null;
      /** @enum {string|null} */
      sicCode?: ("From" | "To") | null;
      /** @enum {string|null} */
      dateAcquired?: ("From" | "To") | null;
      /** @enum {string|null} */
      timeZone?: ("From" | "To") | null;
      /** @enum {string|null} */
      sourceList?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField1?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField2?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField3?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField4?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField5?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField6?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField7?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField8?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField9?: ("From" | "To") | null;
      /** @enum {string|null} */
      userDefinedField10?: ("From" | "To") | null;
      /** @enum {string|null} */
      billingAddress?: ("From" | "To") | null;
      /** @enum {string|null} */
      billingContact?: ("From" | "To") | null;
      /** @enum {string|null} */
      taxCode?: ("From" | "To") | null;
      /** @enum {string|null} */
      accountNumber?: ("From" | "To") | null;
      /** @enum {string|null} */
      billingTerms?: ("From" | "To") | null;
      /** @enum {string|null} */
      notes?: ("Discard" | "Merge") | null;
      /** @enum {string|null} */
      sites?: ("Discard" | "Merge") | null;
      /** @enum {string|null} */
      activities?: ("Discard" | "Merge") | null;
      /** @enum {string|null} */
      opportunities?: ("Discard" | "Merge") | null;
      /** @enum {string|null} */
      services?: ("Discard" | "Merge") | null;
      /** @enum {string|null} */
      projects?: ("Discard" | "Merge") | null;
      /** @enum {string|null} */
      contacts?: ("Discard" | "Merge") | null;
      /** @enum {string|null} */
      documents?: ("Discard" | "Merge") | null;
    };
    CompanyNote: {
      /** Format: int32 */
      id?: number;
      text: string;
      type?: components["schemas"]["NoteTypeReference"];
      flagged?: boolean | null;
      enteredBy?: string;
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    CompanyNoteType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 15; */
      identifier?: string;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      importFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    CompanyNoteTypeInfo: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      name?: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    CompanyPickerItem: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      company?: components["schemas"]["CompanyReference"];
      companyStatus?: components["schemas"]["CompanyStatusReference"];
      companyType?: components["schemas"]["CompanyTypeReference"];
      companySite?: components["schemas"]["SiteReference"];
      companyLocation?: components["schemas"]["SystemLocationReference"];
      companyCountry?: components["schemas"]["CountryReference"];
      /** @description If true, this record was created by the vendor picker component. Otherwise, the record was created by the company picker component. */
      vendorPickerFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    CompanyReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    CompanySite: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** @description  Max length: 50; */
      addressLine1?: string;
      /** @description  Max length: 50; */
      addressLine2?: string;
      /** @description  Max length: 50; */
      city?: string;
      stateReference?: components["schemas"]["StateReference"];
      /** @description  Max length: 12; */
      zip?: string;
      country?: components["schemas"]["CountryReference"];
      addressFormat?: string;
      /** @description  Max length: 30; */
      phoneNumber?: string;
      /** @description  Max length: 30; */
      faxNumber?: string;
      taxCode?: components["schemas"]["TaxCodeReference"];
      entityType?: components["schemas"]["EntityTypeReference"];
      /** Format: double */
      expenseReimbursement?: number | null;
      primaryAddressFlag?: boolean | null;
      defaultShippingFlag?: boolean | null;
      defaultBillingFlag?: boolean | null;
      defaultMailingFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      billSeparateFlag?: boolean | null;
      /** Format: uuid */
      mobileGuid?: string | null;
      calendar?: components["schemas"]["CalendarReference"];
      timeZone?: components["schemas"]["TimeZoneSetupReference"];
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    CompanyStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      notifyFlag?: boolean | null;
      disallowSavingFlag?: boolean | null;
      /** @description  Max length: 500; */
      notificationMessage?: string;
      customNoteFlag?: boolean | null;
      cancelOpenTracksFlag?: boolean | null;
      track?: components["schemas"]["TrackReference"];
      _info?: { [key: string]: string };
    };
    CompanyStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    CompanyTeam: {
      /** Format: int32 */
      id?: number;
      company?: components["schemas"]["CompanyReference"];
      teamRole?: components["schemas"]["TeamRoleReference"];
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      contact?: components["schemas"]["ContactReference"];
      member?: components["schemas"]["MemberReference"];
      accountManagerFlag?: boolean | null;
      techFlag?: boolean | null;
      salesFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    CompanyType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      vendorFlag?: boolean | null;
      serviceAlertFlag?: boolean | null;
      /** @description  Max length: 150; */
      serviceAlertMessage?: string;
      _info?: { [key: string]: string };
    };
    CompanyTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      isVendor?: boolean;
      _info?: { [key: string]: string };
    };
    CompanyTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ConfigurationQuestion: {
      /** Format: int32 */
      answerId?: number | null;
      /** Format: int32 */
      questionId?: number | null;
      question?: string;
      answer?: { [key: string]: unknown };
      /** Format: double */
      sequenceNumber?: number | null;
      /** Format: int32 */
      numberOfDecimals?: number | null;
      /** @enum {string|null} */
      fieldType?:
        | (
            | "TextArea"
            | "Currency"
            | "Date"
            | "Hyperlink"
            | "IPAddress"
            | "Checkbox"
            | "Number"
            | "Percent"
            | "Text"
            | "Password"
          )
        | null;
      requiredFlag?: boolean | null;
    };
    ConfigurationReference: {
      /** Format: int32 */
      id?: number | null;
      deviceIdentifier?: string;
      _info?: { [key: string]: string };
    };
    ConfigurationStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      description: string;
      closedFlag?: boolean | null;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ConfigurationStatusInfo: {
      /** Format: int32 */
      id?: number;
      description?: string;
      closedFlag?: boolean | null;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ConfigurationStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ConfigurationType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      systemFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ConfigurationTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      systemFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ConfigurationTypeQuestion: {
      /** Format: int32 */
      id?: number;
      configurationType?: components["schemas"]["ConfigurationTypeReference"];
      /** @enum {string|null} */
      fieldType:
        | (
            | "TextArea"
            | "Currency"
            | "Date"
            | "Hyperlink"
            | "IPAddress"
            | "Checkbox"
            | "Number"
            | "Percent"
            | "Text"
            | "Password"
          )
        | null;
      /** @enum {string|null} */
      entryType: ("Date" | "EntryField" | "List" | "Option") | null;
      /** Format: double */
      sequenceNumber: number | null;
      /** @description  Max length: 1000; */
      question: string;
      /** Format: int32 */
      numberOfDecimals?: number | null;
      requiredFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ConfigurationTypeQuestionInfo: {
      /** Format: int32 */
      id?: number;
      configurationType?: components["schemas"]["ConfigurationTypeReference"];
      /** @enum {string|null} */
      fieldType?:
        | (
            | "TextArea"
            | "Currency"
            | "Date"
            | "Hyperlink"
            | "IPAddress"
            | "Checkbox"
            | "Number"
            | "Percent"
            | "Text"
            | "Password"
          )
        | null;
      /** @enum {string|null} */
      entryType?: ("Date" | "EntryField" | "List" | "Option") | null;
      /** Format: double */
      sequenceNumber?: number | null;
      question?: string;
      /** Format: int32 */
      numberOfDecimals?: number | null;
      requiredFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ConfigurationTypeQuestionReference: {
      /** Format: int32 */
      id?: number | null;
      question?: string;
      _info?: { [key: string]: string };
    };
    ConfigurationTypeQuestionValue: {
      /** Format: int32 */
      id?: number;
      configurationType?: components["schemas"]["ConfigurationTypeReference"];
      question?: components["schemas"]["ConfigurationTypeQuestionReference"];
      /** @description  Max length: 1000; */
      value: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ConfigurationTypeQuestionValueInfo: {
      /** Format: int32 */
      id?: number;
      configurationType?: components["schemas"]["ConfigurationTypeReference"];
      question?: components["schemas"]["ConfigurationTypeQuestionReference"];
      value?: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ConfigurationTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ConnectWiseHostedScreen: {
      /** Format: int32 */
      id?: number;
      screenId?: string;
      name?: string;
    };
    ConnectWiseHostedSetup: {
      /** Format: int32 */
      id?: number;
      /**
       * Format: int32
       * @description Can be obtained via ConnectWiseHostedApiScreen report
       */
      screenId: number | null;
      /** @description  Max length: 50; */
      description: string;
      /** @description  Max length: 1024; */
      url: string;
      /** @enum {string|null} */
      type: ("Tab" | "Pod" | "ToolbarButton") | null;
      /** @description Only required if not already set Max length: 36; */
      clientId?: string;
      /** @description  Max length: 100; */
      origin?: string;
      /** Format: int32 */
      podHeight?: number | null;
      /** Format: int32 */
      toolbarButtonDialogHeight?: number | null;
      /** Format: int32 */
      toolbarButtonDialogWidth?: number | null;
      /** @description Only required for ToolbarButtons Max length: 50; */
      toolbarButtonText?: string;
      /** @description  Max length: 50; */
      toolbarButtonToolTip?: string;
      /** Format: int32 */
      toolbarButtonIconDocumentId?: number | null;
      disabledFlag?: boolean | null;
      locationIds?: number[];
      locationsEnabledFlag?: boolean | null;
      createdBy?: string;
      dateCreated?: string;
      _info?: { [key: string]: string };
    };
    Contact: {
      /** Format: int32 */
      id?: number;
      firstName?: string;
      lastName?: string;
      company?: components["schemas"]["CompanyReference"];
      site?: components["schemas"]["SiteReference"];
      addressLine1?: string;
      addressLine2?: string;
      city?: string;
      state?: string;
      zip?: string;
      country?: components["schemas"]["CountryReference"];
      relationship?: components["schemas"]["RelationshipReference"];
      relationshipOverride?: string;
      department?: components["schemas"]["ContactDepartmentReference"];
      inactiveFlag?: boolean | null;
      /** Format: int32 */
      defaultMergeContactId?: number | null;
      securityIdentifier?: string;
      managerContact?: components["schemas"]["ContactReference"];
      assistantContact?: components["schemas"]["ContactReference"];
      title?: string;
      school?: string;
      nickName?: string;
      marriedFlag?: boolean | null;
      childrenFlag?: boolean | null;
      children?: string;
      significantOther?: string;
      portalPassword?: string;
      /** Format: int32 */
      portalSecurityLevel?: number | null;
      disablePortalLoginFlag?: boolean | null;
      unsubscribeFlag?: boolean | null;
      /** @enum {string|null} */
      gender?: ("Female" | "Male") | null;
      birthDay?: string;
      anniversary?: string;
      /** @enum {string|null} */
      presence?:
        | ("NoAgent" | "Online" | "DoNotDisturb" | "Away" | "Offline")
        | null;
      /** Format: uuid */
      mobileGuid?: string | null;
      facebookUrl?: string;
      twitterUrl?: string;
      linkedInUrl?: string;
      defaultPhoneType?: string;
      defaultPhoneNbr?: string;
      defaultPhoneExtension?: string;
      defaultBillingFlag?: boolean | null;
      defaultFlag?: boolean | null;
      /** @description  Max length: 50; */
      userDefinedField1?: string;
      /** @description  Max length: 50; */
      userDefinedField2?: string;
      /** @description  Max length: 50; */
      userDefinedField3?: string;
      /** @description  Max length: 50; */
      userDefinedField4?: string;
      /** @description  Max length: 50; */
      userDefinedField5?: string;
      /** @description  Max length: 50; */
      userDefinedField6?: string;
      /** @description  Max length: 50; */
      userDefinedField7?: string;
      /** @description  Max length: 50; */
      userDefinedField8?: string;
      /** @description  Max length: 50; */
      userDefinedField9?: string;
      /** @description  Max length: 50; */
      userDefinedField10?: string;
      companyLocation?: components["schemas"]["SystemLocationReference"];
      communicationItems?: components["schemas"]["ContactCommunicationItem"][];
      types?: components["schemas"]["ContactTypeReference"][];
      integratorTags?: string[];
      customFields?: components["schemas"]["CustomFieldValue"][];
      photo?: components["schemas"]["DocumentReference"];
      ignoreDuplicates?: boolean;
      _info?: { [key: string]: string };
      /**
       * @description Integrer array of Contact_Type_Recids to be assigned to contact that can be passed in only during new contact creation (post)
       *             To update existing contacts type, use the /company/contactTypeAssociations or /company/contacts/{ID}/typeAssociations endpoints
       */
      typeIds?: number[];
    };
    ContactCommunication: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      contactId?: number | null;
      type?: components["schemas"]["CommunicationTypeReference"];
      /** @description  Max length: 250; */
      value: string;
      /** @description  Max length: 15; */
      extension?: string;
      defaultFlag?: boolean | null;
      /** Format: uuid */
      mobileGuid?: string | null;
      /** @enum {string|null} */
      communicationType?: ("Email" | "Fax" | "Phone") | null;
      domain?: string;
      _info?: { [key: string]: string };
    };
    ContactCommunicationItem: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["CommunicationTypeReference"];
      value?: string;
      extension?: string;
      defaultFlag?: boolean | null;
      domain?: string;
      /** @enum {string|null} */
      communicationType?: ("Email" | "Fax" | "Phone") | null;
    };
    "ContactContactTypeAssociation.ContactTypeAssociation": {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["ContactTypeReference"];
      contact?: components["schemas"]["ContactReference"];
      _info?: { [key: string]: string };
    };
    ContactDepartment: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      _info?: { [key: string]: string };
    };
    ContactDepartmentInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    ContactDepartmentReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ContactGroup: {
      /** Format: int32 */
      id?: number;
      group?: components["schemas"]["GroupReference"];
      contact?: components["schemas"]["ContactReference"];
      /** @description  Max length: 50; */
      description?: string;
      unsubscribeFlag?: boolean | null;
      companyUnsubcribedEmailMessage?: string;
      companyGroupUnsubscribedEmailMessage?: string;
      contactUnsubscribedEmailMessage?: string;
      contactGroupUnsubscribedEmailMessage?: string;
      _info?: { [key: string]: string };
    };
    ContactNote: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      contactId?: number | null;
      text: string;
      type?: components["schemas"]["NoteTypeReference"];
      flagged?: boolean | null;
      enteredBy?: string;
      _info?: { [key: string]: string };
    };
    ContactReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ContactRelationship: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      _info?: { [key: string]: string };
    };
    ContactTrack: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      trackId?: number;
      name?: string;
      startDate?: string;
      endDate?: string;
      /** Format: int32 */
      actionTaken?: number | null;
      /** Format: int32 */
      actionRemaining?: number | null;
      startedBy?: string;
      company?: components["schemas"]["CompanyReference"];
      contact?: components["schemas"]["ContactReference"];
      _info?: { [key: string]: string };
    };
    ContactType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      description: string;
      defaultFlag?: boolean | null;
      serviceAlertFlag?: boolean | null;
      /** @description  Max length: 150; */
      serviceAlertMessage?: string;
      _info?: { [key: string]: string };
    };
    ContactTypeInfo: {
      /** Format: int32 */
      id?: number;
      description?: string;
      defaultFlag?: boolean | null;
      serviceAlertFlag?: boolean | null;
      serviceAlertMessage?: string;
      _info?: { [key: string]: string };
    };
    ContactTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Conversion: {
      /** Format: int32 */
      id?: number;
      /** Format: double */
      quantity?: number | null;
      uomType?: components["schemas"]["UnitOfMeasureReference"];
      parentUOM?: components["schemas"]["UnitOfMeasureReference"];
      _info?: { [key: string]: string };
    };
    ConvertItem: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      recordType: ("ProjectIssue" | "ProjectTicket" | "ServiceTicket") | null;
      project?: components["schemas"]["ProjectReference"];
      phase?: components["schemas"]["ProjectPhaseReference"];
      wbsCode?: string;
    };
    ConvertToProject: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      recordType?: ("ProjectIssue" | "ProjectTicket" | "ServiceTicket") | null;
      project?: components["schemas"]["ProjectReference"];
      phase?: components["schemas"]["ProjectPhaseReference"];
      wbsCode: string;
    };
    CorporateStructure: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      levelCount?:
        | ("Level1" | "Level2" | "Level3" | "Level4" | "Level5")
        | null;
      /** @description  Max length: 20; */
      level1Name?: string;
      /** @description  Max length: 20; */
      level2Name?: string;
      /** @description  Max length: 20; */
      level3Name?: string;
      /** @description  Max length: 20; */
      level4Name?: string;
      /** @description  Max length: 20; */
      level5Name?: string;
      /** @enum {string|null} */
      fiscalYearStart:
        | (
            | "January"
            | "February"
            | "March"
            | "April"
            | "May"
            | "June"
            | "July"
            | "August"
            | "September"
            | "October"
            | "November"
            | "December"
          )
        | null;
      /** @description  Max length: 50; */
      locationCaption: string;
      /** @description  Max length: 50; */
      groupCaption: string;
      baseCurrency: components["schemas"]["CurrencyReference"];
      president?: components["schemas"]["MemberReference"];
      chiefOperatingOfficer?: components["schemas"]["MemberReference"];
      controller?: components["schemas"]["MemberReference"];
      dispatcher?: components["schemas"]["MemberReference"];
      serviceManager?: components["schemas"]["MemberReference"];
      dutyManager?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    CorporateStructureInfo: {
      /** Format: int32 */
      id?: number;
      locationCaption?: string;
      groupCaption?: string;
      baseCurrency?: components["schemas"]["CurrencyReference"];
      _info?: { [key: string]: string };
    };
    CorporateStructureLevel: {
      /** Format: int32 */
      id?: number;
      name?: string;
    };
    CorporateStructureLevelReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Count: {
      /** Format: int32 */
      count?: number;
    };
    Country: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      currency?: components["schemas"]["CurrencyReference"];
      /** @description  Max length: 25; */
      cityCaption?: string;
      /** @description  Max length: 25; */
      stateCaption?: string;
      /** @description  Max length: 25; */
      zipCaption?: string;
      /** Format: int32 */
      zipMinimumLength?: number | null;
      /** @description  Max length: 5; */
      dialingPrefix?: string;
      addressFormat?: components["schemas"]["AddressFormatReference"];
      /** @description  Max length: 2; */
      countryCode?: string;
      /** @description  Max length: 25; */
      localizationCaptionOne?: string;
      /** @description  Max length: 50; */
      localizationValueOne?: string;
      _info?: { [key: string]: string };
    };
    CountryInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      defaultFlag?: boolean | null;
      cityCaption?: string;
      stateCaption?: string;
      zipCaption?: string;
      dialingPrefix?: string;
      localizationCaptionOne?: string;
      _info?: { [key: string]: string };
    };
    CountryReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    CreateAccountingBatchRequest: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      batchIdentifier?: string;
      glInterfaceIdentifier?: string;
      /** @description Batch must export Invoices, Expenses or Products */
      exportInvoicesFlag?: boolean | null;
      /** @description Batch must export Invoices, Expenses or Products */
      exportExpensesFlag?: boolean | null;
      /** @description Batch must export Invoices, Expenses or Products */
      exportProductsFlag?: boolean | null;
      /** @description GL Entry RecIDs */
      processedRecordIds: (number | null)[];
      summarizeExpenses?: boolean | null;
    };
    Crm: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      companyListCount?: number | null;
      lockProbabilityFlag?: boolean | null;
      accountManagerRole?: components["schemas"]["TeamRoleReference"];
      technicalContactRole?: components["schemas"]["TeamRoleReference"];
      salesRepRole?: components["schemas"]["TeamRoleReference"];
      companyIdGenerationFlag?: boolean | null;
      excludeSpacesFlag?: boolean | null;
      /** @description  Max length: 25; */
      field1Caption?: string;
      /** @description  Max length: 25; */
      field2Caption?: string;
      /** @description  Max length: 25; */
      field3Caption?: string;
      /** @description  Max length: 25; */
      field4Caption?: string;
      /** @description  Max length: 25; */
      field5Caption?: string;
      /** @description  Max length: 25; */
      field6Caption?: string;
      /** @description  Max length: 25; */
      field7Caption?: string;
      /** @description  Max length: 25; */
      field8Caption?: string;
      /** @description  Max length: 25; */
      field9Caption?: string;
      /** @description  Max length: 25; */
      field10Caption?: string;
      /** @description  Max length: 50; */
      primaryRepCaption?: string;
      /** @description  Max length: 50; */
      secondaryRepCaption?: string;
      /** @description  Max length: 50; */
      other1Caption?: string;
      /** @description  Max length: 50; */
      other2Caption?: string;
      defaultYear?: boolean | null;
      _info?: { [key: string]: string };
    };
    CrmInfo: {
      /** Format: int32 */
      id?: number;
      accountManagerRole?: components["schemas"]["TeamRoleReference"];
      technicalContactRole?: components["schemas"]["TeamRoleReference"];
      salesRepRole?: components["schemas"]["TeamRoleReference"];
      field1Caption?: string;
      field2Caption?: string;
      field3Caption?: string;
      field4Caption?: string;
      field5Caption?: string;
      field6Caption?: string;
      field7Caption?: string;
      field8Caption?: string;
      field9Caption?: string;
      field10Caption?: string;
      primaryRepCaption?: string;
      secondaryRepCaption?: string;
      _info?: { [key: string]: string };
    };
    CurrencyCode: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    CurrencyCodeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    CurrencyInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    CurrencyReference: {
      /** Format: int32 */
      id?: number | null;
      symbol?: string;
      currencyCode?: string;
      decimalSeparator?: string;
      /** Format: int32 */
      numberOfDecimals?: number;
      thousandsSeparator?: string;
      negativeParenthesesFlag?: boolean;
      displaySymbolFlag?: boolean;
      currencyIdentifier?: string;
      displayIdFlag?: boolean;
      rightAlign?: boolean;
      name?: string;
      _info?: { [key: string]: string };
    };
    CustomFieldValue: {
      /** Format: int32 */
      id?: number | null;
      caption?: string;
      /** @enum {string|null} */
      type?:
        | (
            | "TextArea"
            | "Button"
            | "Currency"
            | "Date"
            | "Hyperlink"
            | "IPAddress"
            | "Checkbox"
            | "Number"
            | "Percent"
            | "Text"
            | "Password"
          )
        | null;
      /** @enum {string|null} */
      entryMethod?: ("Date" | "EntryField" | "List" | "Option") | null;
      /** Format: int32 */
      numberOfDecimals?: number | null;
      value?: { [key: string]: unknown };
    };
    CustomReport: {
      /** Format: int32 */
      id?: number;
      reportLink: string;
      /** @description  Max length: 100; */
      name: string;
      /**
       * @description The Module Name
       * @enum {string|null}
       */
      module:
        | (
            | "Companies"
            | "Finance"
            | "Marketing"
            | "Procurement"
            | "Project"
            | "Sales"
            | "ServiceDesk"
            | "TimeExpense"
          )
        | null;
      /** @description  Max length: 150; */
      description: string;
      generatedFlag?: boolean | null;
      /** @description  Max length: 50; */
      parameterPrefix?: string;
      /** @description  Max length: 50; */
      parameterSeparator?: string;
      /** @description  Max length: 50; */
      parameterNameSeparator?: string;
      /** @description  Max length: 50; */
      parameterSuffix?: string;
      locationFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Location parameter
       */
      locationParamId?: number | null;
      locationDefaultFlag?: boolean | null;
      locationOverride?: string;
      departmentFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Department parameter
       */
      departmentParamId?: number | null;
      departmentDefaultFlag?: boolean | null;
      departmentOverride?: string;
      territoryFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Terriroty parameter
       */
      territoryParamId?: number | null;
      territoryDefaultFlag?: boolean | null;
      territoryOverride?: string;
      companyFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Company parameter
       */
      companyParamId?: number | null;
      companyOverride?: string;
      memberFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Member parameter
       */
      memberParamId?: number | null;
      memberOverride?: string;
      startDateFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Start Date parameter
       */
      startDateParamId?: number | null;
      startDateOverride?: string;
      endDateFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's End Date parameter
       */
      endDateParamId?: number | null;
      endDateOverride?: string;
      oppTypeFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Opportunity Type parameter
       */
      oppTypeParamId?: number | null;
      oppTypeOverride?: string;
      opportunityFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Opportunity parameter
       */
      opportunityParamId?: number | null;
      opportunityOverride?: string;
      marketingCampaignFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Marketing Campaign parameter
       */
      marketingCampaignParamId?: number | null;
      marketingCampaignOverride?: string;
      serviceBoardFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Service Board parameter
       */
      serviceBoardParamId?: number | null;
      serviceBoardDefaultFlag?: boolean | null;
      serviceBoardOverride?: string;
      serviceTypeFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Service Type parameter
       */
      serviceTypeParamId?: number | null;
      serviceTypeOverride?: string;
      serviceStatusFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Service Status parameter
       */
      serviceStatusParamId?: number | null;
      serviceStatusOverride?: string;
      agreementTypeFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Agreement Type parameter
       */
      agreementTypeParamId?: number | null;
      agreementTypeOverride?: string;
      agreementFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Agreement parameter
       */
      agreementParamId?: number | null;
      agreementOverride?: string;
      projectTypeFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Project Type parameter
       */
      projectTypeParamId?: number | null;
      projectTypeOverride?: string;
      projectFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Project parameter
       */
      projectParamId?: number | null;
      projectOverride?: string;
      workRoleFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Work Role parameter
       */
      workRoleParamId?: number | null;
      workRoleOverride?: string;
      workTypeFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Work Type parameter
       */
      workTypeParamId?: number | null;
      workTypeOverride?: string;
      invoiceFlag?: boolean | null;
      /**
       * Format: int32
       * @description Parameter unique identifier for the Custom Report's Invoice Type parameter
       */
      invoiceParamId?: number | null;
      invoiceOverride?: string;
      _info?: { [key: string]: string };
    };
    CustomReportParameter: {
      /** Format: int32 */
      id?: number;
      /** @description Either a caption name or parameter name is required Max length: 50; */
      name?: string;
      /** @description Either a caption name or parameter name is required Max length: 50; */
      captionName?: string;
      customReport?: components["schemas"]["CustomReportReference"];
      _info?: { [key: string]: string };
    };
    CustomReportReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    CwTimeZone: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /**
       * Format: double
       * @description The hours offset (+/-)
       */
      offset?: number;
      startDate?: string;
      endDate?: string;
      /**
       * @description Determined based on system library value for specified timeZone.
       *             Not able to be used in query params at this time
       */
      daylightSavingsFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    DeliveryMethod: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      emailFlag?: boolean | null;
      integrationEmailFlag?: boolean | null;
      integrationPrintFlag?: boolean | null;
      integrationActiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    Department: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 15; */
      identifier: string;
      /** @description  Max length: 50; */
      name: string;
      _info?: { [key: string]: string };
    };
    DepartmentInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    DepartmentLocation: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      departmentManager?: components["schemas"]["MemberReference"];
      dispatch?: components["schemas"]["MemberReference"];
      serviceManager?: components["schemas"]["MemberReference"];
      dutyManager?: components["schemas"]["MemberReference"];
      ldapConfig?: components["schemas"]["LdapConfigurationReference"];
      addAllLocations?: boolean | null;
      removeAllLocations?: boolean | null;
      _info?: { [key: string]: string };
    };
    DepartmentLocationInfo: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      _info?: { [key: string]: string };
    };
    DocumentFormData: {
      /** Format: binary */
      file?: string;
      /** Format: int32 */
      recordId?: number;
      recordType?: string;
      title?: string;
      url?: string;
      privateFlag?: boolean;
      readOnlyFlay?: boolean;
      isAvatar?: boolean;
    };
    DocumentInfo: {
      /** Format: int32 */
      id?: number;
      title?: string;
      fileName?: string;
      serverFileName?: string;
      owner?: string;
      linkFlag?: boolean | null;
      imageFlag?: boolean | null;
      publicFlag?: boolean | null;
      htmlTemplateFlag?: boolean | null;
      readOnlyFlag?: boolean | null;
      /** Format: int32 */
      size?: number | null;
      urlFlag?: boolean | null;
      guid?: string;
      _info?: { [key: string]: string };
    };
    DocumentReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    DocumentSetup: {
      /** Format: int32 */
      id?: number;
      uploadAsLinkFlag?: boolean | null;
      isPublicFlag?: boolean | null;
      /** @description  Max length: 100; */
      docPath?: string;
      /** @description  Max length: 200; */
      templatePath?: string;
      /** @description  Max length: 200; */
      templateOutputPath?: string;
      _info?: { [key: string]: string };
    };
    EmailConnector: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      emailServerType?: ("IMAP" | "Office365" | "Google") | null;
      imapSetup?: components["schemas"]["ImapSetupReference"];
      office365EmailSetup?: components["schemas"]["Office365EmailSetupReference"];
      googleEmailSetup?: components["schemas"]["GoogleEmailSetupReference"];
      serviceBoard?: components["schemas"]["BoardReference"];
      defaultCompany?: components["schemas"]["CompanyReference"];
      defaultMember?: components["schemas"]["MemberReference"];
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      /** @description  Max length: 50; */
      emailNotifyFrom?: string;
      /** @description  Max length: 250; */
      bccEmailTo?: string;
      /** @description  Max length: 50; */
      emailErrorsTo: string;
      setEmailToDefaultContactFlag?: boolean | null;
      noResponseFlag?: boolean | null;
      neverRespondFlag?: boolean | null;
      discardDuplicatesFlag?: boolean | null;
      postRepliesToTicketFlag?: boolean | null;
      createContactFlag?: boolean | null;
      responseEmailForNew?: string;
      responseEmailForExisting?: string;
      sourceOverride?: components["schemas"]["ServiceSourceReference"];
      priorityOverride?: components["schemas"]["PriorityReference"];
      typeOverride?: components["schemas"]["ServiceTypeReference"];
      subTypeOverride?: components["schemas"]["ServiceSubTypeReference"];
      itemOverride?: components["schemas"]["ServiceItemReference"];
      statusOverride?: components["schemas"]["ServiceStatusReference"];
      addCcFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    EmailConnectorInfo: {
      /** Format: int32 */
      id?: number;
      imapSetup?: components["schemas"]["ImapSetupReference"];
      _info?: { [key: string]: string };
    };
    EmailConnectorParsingRule: {
      /** Format: int32 */
      id?: number;
      parsingStyle?: components["schemas"]["EmailConnectorParsingStyleReference"];
      /** Format: int32 */
      priority: number | null;
      parsingVariable?: components["schemas"]["EmailConnectorParsingVariableReference"];
      /** @description  Max length: 250; */
      searchTerm: string;
      servicePriority?: components["schemas"]["PriorityReference"];
      serviceStatus?: components["schemas"]["ServiceStatusReference"];
      serviceType?: components["schemas"]["ServiceTypeReference"];
      serviceSubType?: components["schemas"]["ServiceSubTypeReference"];
      serviceItem?: components["schemas"]["ServiceItemReference"];
      serviceBoard?: components["schemas"]["BoardReference"];
      _info?: { [key: string]: string };
    };
    EmailConnectorParsingStyle: {
      /** Format: int32 */
      id?: number;
      parsingType?: components["schemas"]["EmailConnectorParsingTypeReference"];
      /** @description  Max length: 500; */
      parseRule: string;
      /** Format: int32 */
      priority: number | null;
      _info?: { [key: string]: string };
    };
    EmailConnectorParsingStyleReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    EmailConnectorParsingTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    EmailConnectorParsingVariableReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      identifier?: string;
      _info?: { [key: string]: string };
    };
    EmailConnectorReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    EmailExclusion: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      description: string;
      _info?: { [key: string]: string };
    };
    EmailOpened: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      campaignId?: number | null;
      /** Format: int32 */
      contactId: number | null;
      /** Format: date-time */
      dateOpened?: string;
    };
    EmailTemplateReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    EmailToken: {
      /** Format: int32 */
      id?: number;
      token?: string;
      description?: string;
      addressFlag?: boolean | null;
      agreementFlag?: boolean | null;
      companyFlag?: boolean | null;
      configFlag?: boolean | null;
      contactFlag?: boolean | null;
      invoiceFlag?: boolean | null;
      purchaseOrderFlag?: boolean | null;
      purchaseOrderStatusFlag?: boolean | null;
      rmaFlag?: boolean | null;
      salesFlag?: boolean | null;
      serviceFlag?: boolean | null;
      tracksFlag?: boolean | null;
      workflowFlag?: boolean | null;
      portalPasswordFlag?: boolean | null;
    };
    EntityType: {
      /** Format: int32 */
      id?: number;
      name?: string;
      code?: string;
    };
    EntityTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
    };
    EntityTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    EPayConfiguration: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      currency?: components["schemas"]["CurrencyReference"];
      /** @description  Max length: 400; */
      url: string;
      /** @description  Max length: 500; */
      storeIdentifier: string;
      /** @description  Max length: 500; */
      encryptionKey?: string;
      /** @description  Max length: 500; */
      initializationVector?: string;
      _info?: { [key: string]: string };
    };
    ErrorResponseMessage: {
      code?: string;
      message?: string;
      errors?: components["schemas"]["ValidationError"][];
    };
    ExpenseDetailReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      amount?: number;
      _info?: { [key: string]: string };
    };
    ExpenseEntry: {
      /** Format: int32 */
      id?: number;
      expenseReport?: components["schemas"]["ExpenseReportReference"];
      company?: components["schemas"]["CompanyReference"];
      /** Format: int32 */
      chargeToId?: number | null;
      /**
       * @description Company or chargeToType is required
       * @enum {string|null}
       */
      chargeToType?:
        | ("ServiceTicket" | "ProjectTicket" | "ChargeCode" | "Activity")
        | null;
      type?: components["schemas"]["ExpenseTypeReference"];
      member?: components["schemas"]["MemberReference"];
      paymentMethod?: components["schemas"]["PaymentMethodReference"];
      classification?: components["schemas"]["ClassificationReference"];
      /** Format: double */
      amount: number | null;
      /** @enum {string|null} */
      billableOption?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** Format: date-time */
      date: string;
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      notes?: string;
      agreement?: components["schemas"]["AgreementReference"];
      /** Format: double */
      invoiceAmount?: number | null;
      /** Format: uuid */
      mobileGuid?: string | null;
      taxes?: components["schemas"]["ExpenseTax"][];
      invoice?: components["schemas"]["InvoiceReference"];
      currency?: components["schemas"]["CurrencyReference"];
      /** @enum {string|null} */
      status?:
        | (
            | "Open"
            | "Rejected"
            | "PendingApproval"
            | "ErrorsCorrected"
            | "PendingProjectApproval"
            | "ApprovedByTierOne"
            | "RejectBySecondTier"
            | "ApprovedByTierTwo"
            | "ReadyToBill"
            | "Billed"
            | "WrittenOff"
            | "BilledAgreement"
          )
        | null;
      /** Format: double */
      billAmount?: number | null;
      /** Format: double */
      agreementAmount?: number | null;
      /** Format: double */
      odometerStart?: number | null;
      /** Format: double */
      odometerEnd?: number | null;
      ticket?: components["schemas"]["TicketReference"];
      project?: components["schemas"]["ProjectReference"];
      phase?: components["schemas"]["ProjectPhaseReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    ExpenseEntryAudit: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      /** @enum {string|null} */
      source?:
        | (
            | "None"
            | "Member"
            | "API"
            | "Workflow"
            | "Portal"
            | "Mobile"
            | "Network"
            | "EmailConnector"
            | "MassMaintenance"
            | "Application"
            | "SystemAPI"
            | "Conversion"
          )
        | null;
      /** @enum {string|null} */
      type?:
        | (
            | "Activity"
            | "CloseDate"
            | "Company"
            | "Contact"
            | "Conversion"
            | "Document"
            | "Forecast"
            | "Note"
            | "Notes"
            | "Opportunity"
            | "Products"
            | "Stage"
            | "Status"
            | "Surveys"
            | "Team"
            | "Tracks"
            | "Configuration"
            | "ConfigurationQuestions"
            | "DeviceBackupDetails"
            | "Tickets"
            | "Subject"
            | "ActivityOverview"
            | "Schedule"
            | "Resources"
            | "ExpenseEntry"
            | "Member"
            | "Date"
            | "Classification"
            | "Amount"
            | "ExpenseType"
            | "WorkType"
            | "WorkRole"
            | "Mileage"
            | "Billing"
            | "ExpenseHeader"
            | "Project"
            | "TimeEntry"
            | "TicketStatus"
            | "DateTime"
            | "DeductHours"
            | "ActualHours"
            | "Invoice"
            | "CompanyFinance"
            | "Billable"
            | "SalesOrder"
            | "Shipping"
            | "Profile"
            | "Group"
            | "GroupContact"
            | "GroupCompany"
            | "Options"
            | "Site"
            | "Agreement"
            | "Addition"
            | "Adjustment"
            | "API"
            | "ProjectFinance"
            | "CompanyProfile"
            | "CompanyTeam"
            | "CompanyMgmt"
            | "InvoiceTotal"
            | "BillingInformation"
            | "ShippingInformation"
            | "BillingStatus"
            | "Location"
            | "Department"
            | "Territory"
            | "Payment"
            | "Credit"
            | "SubcontractorInformation"
            | "InvoicingParameters"
            | "ApplicationParameters"
            | "Finance"
            | "Invoicing"
            | "Email"
            | "Batching"
            | "KnowledgeBase"
            | "KbArticle"
            | "KnowledgeBaseApproval"
            | "KnowledgeBaseTicket"
            | "ManageNetwork"
            | "Tasks"
            | "CustomField"
            | "ScreenConnect"
            | "SLA"
            | "Ticket"
            | "Workflow"
            | "Record"
            | "CombinedTickets"
            | "Template"
            | "PurchaseOrder"
            | "Meeting"
            | "RmaOverview"
            | "ReturnedBy"
            | "PurchasedFromVendor"
            | "WarrantyVendor"
            | "RepairVendor"
            | "AdditionalDetails"
            | "TicketTemplate"
            | "AutoGeneration"
            | "TimeInternalNote"
            | "TimeDiscussion"
            | "TimeInternal"
            | "TimeResolution"
          )
        | null;
      message?: string;
      oldValue?: string;
      newValue?: string;
      value?: string;
      _info?: { [key: string]: string };
    };
    ExpenseReport: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      /** Format: int32 */
      year?: number | null;
      /** Format: int32 */
      period?: number | null;
      dateStart?: string;
      dateEnd?: string;
      /** @enum {string|null} */
      status?:
        | (
            | "Open"
            | "Rejected"
            | "PendingApproval"
            | "ErrorsCorrected"
            | "PendingProjectApproval"
            | "ApprovedByTierOne"
            | "RejectBySecondTier"
            | "ApprovedByTierTwo"
            | "ReadyToBill"
            | "Billed"
            | "WrittenOff"
            | "BilledAgreement"
          )
        | null;
      /** Format: double */
      total?: number | null;
      dueDate?: string;
      _info?: { [key: string]: string };
    };
    ExpenseReportAudit: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      /** @enum {string|null} */
      source?:
        | (
            | "None"
            | "Member"
            | "API"
            | "Workflow"
            | "Portal"
            | "Mobile"
            | "Network"
            | "EmailConnector"
            | "MassMaintenance"
            | "Application"
            | "SystemAPI"
            | "Conversion"
          )
        | null;
      /** @enum {string|null} */
      type?:
        | (
            | "Activity"
            | "CloseDate"
            | "Company"
            | "Contact"
            | "Conversion"
            | "Document"
            | "Forecast"
            | "Note"
            | "Notes"
            | "Opportunity"
            | "Products"
            | "Stage"
            | "Status"
            | "Surveys"
            | "Team"
            | "Tracks"
            | "Configuration"
            | "ConfigurationQuestions"
            | "DeviceBackupDetails"
            | "Tickets"
            | "Subject"
            | "ActivityOverview"
            | "Schedule"
            | "Resources"
            | "ExpenseEntry"
            | "Member"
            | "Date"
            | "Classification"
            | "Amount"
            | "ExpenseType"
            | "WorkType"
            | "WorkRole"
            | "Mileage"
            | "Billing"
            | "ExpenseHeader"
            | "Project"
            | "TimeEntry"
            | "TicketStatus"
            | "DateTime"
            | "DeductHours"
            | "ActualHours"
            | "Invoice"
            | "CompanyFinance"
            | "Billable"
            | "SalesOrder"
            | "Shipping"
            | "Profile"
            | "Group"
            | "GroupContact"
            | "GroupCompany"
            | "Options"
            | "Site"
            | "Agreement"
            | "Addition"
            | "Adjustment"
            | "API"
            | "ProjectFinance"
            | "CompanyProfile"
            | "CompanyTeam"
            | "CompanyMgmt"
            | "InvoiceTotal"
            | "BillingInformation"
            | "ShippingInformation"
            | "BillingStatus"
            | "Location"
            | "Department"
            | "Territory"
            | "Payment"
            | "Credit"
            | "SubcontractorInformation"
            | "InvoicingParameters"
            | "ApplicationParameters"
            | "Finance"
            | "Invoicing"
            | "Email"
            | "Batching"
            | "KnowledgeBase"
            | "KbArticle"
            | "KnowledgeBaseApproval"
            | "KnowledgeBaseTicket"
            | "ManageNetwork"
            | "Tasks"
            | "CustomField"
            | "ScreenConnect"
            | "SLA"
            | "Ticket"
            | "Workflow"
            | "Record"
            | "CombinedTickets"
            | "Template"
            | "PurchaseOrder"
            | "Meeting"
            | "RmaOverview"
            | "ReturnedBy"
            | "PurchasedFromVendor"
            | "WarrantyVendor"
            | "RepairVendor"
            | "AdditionalDetails"
            | "TicketTemplate"
            | "AutoGeneration"
            | "TimeInternalNote"
            | "TimeDiscussion"
            | "TimeInternal"
            | "TimeResolution"
          )
        | null;
      message?: string;
      oldValue?: string;
      newValue?: string;
      value?: string;
      _info?: { [key: string]: string };
    };
    ExpenseReportReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ExpenseRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    ExpenseTax: {
      /** Format: int32 */
      id?: number;
      /** Format: double */
      amount?: number | null;
      type?: components["schemas"]["ExpenseTaxTypeReference"];
    };
    ExpenseTaxTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactive?: boolean;
      _info?: { [key: string]: string };
    };
    ExpenseTaxTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ExpenseType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      amountCaption: string;
      /** Format: double */
      reimbursementRate?: number | null;
      /** @enum {string|null} */
      billExpenses:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** @enum {string|null} */
      invoiceMarkupOption: ("Amount" | "Mile" | "Percent") | null;
      /** Format: double */
      invoiceMarkupAmount?: number | null;
      advancedAmountFlag?: boolean | null;
      mileageFlag?: boolean | null;
      quantityFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      /** Format: double */
      maxAmount?: number | null;
      /** @description  Max length: 50; */
      integrationXRef?: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ExpenseTypeExemption: {
      /** Format: int32 */
      id?: number;
      expenseType: components["schemas"]["ExpenseTypeReference"];
      taxableLevels?: number[];
      _info?: { [key: string]: string };
    };
    ExpenseTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      amountCaption?: string;
      mileageFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ExpenseTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Experiment: {
      /** Format: int32 */
      id?: number;
      experimentId?: string;
      name?: string;
      description?: string;
      properties?: string;
      inactiveFlag?: boolean;
      memberInactiveFlag?: boolean;
      _info?: { [key: string]: string };
    };
    ExportAccountingBatchRequest: {
      /** @description  Max length: 50; */
      batchIdentifier?: string;
      glInterfaceIdentifier?: string;
      /** Format: date-time */
      thruDate?: string;
      /** Format: int32 */
      locationId?: number | null;
      /** @enum {string} */
      summarizeInvoices?: "Default" | "Condensed" | "Detailed";
      /** @description Batch export must include invoices, expenses, or products (procurement) */
      exportInvoicesFlag?: boolean | null;
      includedInvoiceIds?: (number | null)[];
      excludedInvoiceIds?: (number | null)[];
      /** @description Batch export must include invoices, expenses, or products (procurement) */
      exportExpensesFlag?: boolean | null;
      includedExpenseIds?: (number | null)[];
      excludedExpenseIds?: (number | null)[];
      /** @description Batch export must include invoices, expenses, or products (procurement) */
      exportProductsFlag?: boolean | null;
      includedProductIds?: string[];
      excludedProductIds?: string[];
    };
    FileUploadSetting: {
      /** Format: int32 */
      id?: number;
      restrictFileTypesFlag: boolean | null;
      /** Format: int32 */
      globalFileSizeLimit?: number | null;
      _info?: { [key: string]: string };
    };
    FilterValues: {
      conditions?: string;
      orderBy?: string;
      childconditions?: string;
      customfieldconditions?: string;
    };
    "Finance.Currency": {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 10; */
      currencyIdentifier: string;
      /** @description  Max length: 50; */
      name: string;
      /** @description  Max length: 10; */
      symbol?: string;
      displayIdFlag?: boolean | null;
      displaySymbolFlag?: boolean | null;
      currencyCode?: components["schemas"]["CurrencyCodeReference"];
      /** @description  Max length: 1; */
      thousandsSeparator?: string;
      /** @description  Max length: 1; */
      decimalSeparator?: string;
      negativeParenthesesFlag?: boolean | null;
      rightAlign?: boolean | null;
      /** Format: int32 */
      numberOfDecimals?: number | null;
      reportFormat?: string;
      _info?: { [key: string]: string };
    };
    Forecast: {
      /** Format: int32 */
      id?: number;
      forecastItems?: components["schemas"]["ForecastItem"][];
      productRevenue?: components["schemas"]["ProductRevenueReference"];
      serviceRevenue?: components["schemas"]["ServiceRevenueReference"];
      agreementRevenue?: components["schemas"]["AgreementRevenueReference"];
      timeRevenue?: components["schemas"]["TimeRevenueReference"];
      expenseRevenue?: components["schemas"]["ExpenseRevenueReference"];
      forecastRevenueTotals?: components["schemas"]["ForecastRevenueReference"];
      inclusiveRevenueTotals?: components["schemas"]["InclusiveRevenueReference"];
      /** Format: double */
      recurringTotal?: number | null;
      wonRevenue?: components["schemas"]["WonRevenueReference"];
      lostRevenue?: components["schemas"]["LostRevenueReference"];
      openRevenue?: components["schemas"]["OpenRevenueReference"];
      otherRevenue1?: components["schemas"]["Other1RevenueReference"];
      otherRevenue2?: components["schemas"]["Other2RevenueReference"];
      /** Format: double */
      salesTaxRevenue?: number | null;
      /** Format: double */
      forecastTotalWithTaxes?: number | null;
      /** Format: int32 */
      expectedProbability?: number;
      taxCode?: components["schemas"]["TaxCodeReference"];
      billingTerms?: components["schemas"]["BillingTermsReference"];
      currency?: components["schemas"]["CurrencyReference"];
      _info?: { [key: string]: string };
    };
    ForecastItem: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      forecastDescription?: string;
      opportunity?: components["schemas"]["OpportunityReference"];
      /** Format: double */
      quantity?: number;
      status?: components["schemas"]["OpportunityStatusReference"];
      catalogItem?: components["schemas"]["IvItemReference"];
      productDescription?: string;
      productClass?: string;
      /** Format: double */
      revenue?: number;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number;
      /** Format: int32 */
      percentage?: number;
      includeFlag?: boolean;
      /** @description  Max length: 20; */
      quoteWerksDocNo?: string;
      /** @description  Max length: 255; */
      quoteWerksDocName?: string;
      /** Format: int32 */
      quoteWerksQuantity?: number;
      /** @enum {string|null} */
      forecastType:
        | ("Other1" | "Other2" | "Agreement" | "Product" | "Service")
        | null;
      linkFlag?: boolean;
      /** Format: double */
      recurringRevenue?: number;
      /** Format: double */
      recurringCost?: number | null;
      /** Format: date-time */
      recurringDateStart?: string;
      /** Format: date-time */
      recurringDateEnd?: string;
      billCycle?: components["schemas"]["BillingCycleReference"];
      cycleBasis?: string;
      /** Format: int32 */
      cycles?: number;
      recurringFlag?: boolean;
      /** Format: double */
      sequenceNumber?: number;
      /** Format: int32 */
      subNumber?: number;
      taxableFlag?: boolean;
      _info?: { [key: string]: string };
    };
    ForecastRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    FormSubmitted: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      campaignId?: number | null;
      /** Format: int32 */
      contactId: number | null;
      /** Format: date-time */
      dateSubmitted?: string;
      /** @description  Max length: 2083; */
      url: string;
      queryString?: string;
      pageType?: string;
      pageSubType?: string;
      topic?: string;
      version?: string;
      status?: string;
    };
    GenericBoardTeamReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      isProjectTeamFlag?: boolean;
      _info?: { [key: string]: string };
    };
    GenericIdIdentifierReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
    };
    GLAccount: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      glType:
        | (
            | "AP"
            | "AR"
            | "EE"
            | "EI"
            | "EO"
            | "IA"
            | "IT"
            | "P"
            | "PF"
            | "R"
            | "RA"
            | "RD"
            | "RE"
            | "RP"
            | "ST"
            | "SD"
            | "ET"
            | "FT"
            | "PT"
          )
        | null;
      mappedType: components["schemas"]["MappedTypeReference"];
      mappedRecord: components["schemas"]["MappedRecordReference"];
      /** @description  Max length: 255; */
      segment1?: string;
      /** @description  Max length: 255; */
      segment2?: string;
      /** @description  Max length: 255; */
      segment3?: string;
      /** @description  Max length: 255; */
      segment4?: string;
      /** @description  Max length: 255; */
      segment5?: string;
      /** @description  Max length: 255; */
      segment6?: string;
      /** @description  Max length: 255; */
      segment7?: string;
      /** @description  Max length: 255; */
      segment8?: string;
      /** @description  Max length: 255; */
      segment9?: string;
      /** @description  Max length: 255; */
      segment10?: string;
      /** @description  Max length: 255; */
      cogs1?: string;
      /** @description  Max length: 255; */
      cogs2?: string;
      /** @description  Max length: 255; */
      cogs3?: string;
      /** @description  Max length: 255; */
      cogs4?: string;
      /** @description  Max length: 255; */
      cogs5?: string;
      /** @description  Max length: 255; */
      cogs6?: string;
      /** @description  Max length: 255; */
      cogs7?: string;
      /** @description  Max length: 255; */
      cogs8?: string;
      /** @description  Max length: 255; */
      cogs9?: string;
      /** @description  Max length: 255; */
      cogs10?: string;
      /** @description  Max length: 255; */
      productId?: string;
      /** @description  Max length: 255; */
      inventory?: string;
      /** @description  Max length: 255; */
      salesCode?: string;
      _info?: { [key: string]: string };
    };
    GLCaption: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 255; */
      segment1?: string;
      /** @description  Max length: 255; */
      segment2?: string;
      /** @description  Max length: 255; */
      segment3?: string;
      /** @description  Max length: 255; */
      segment4?: string;
      /** @description  Max length: 255; */
      segment5?: string;
      /** @description  Max length: 255; */
      segment6?: string;
      /** @description  Max length: 255; */
      segment7?: string;
      /** @description  Max length: 255; */
      segment8?: string;
      /** @description  Max length: 255; */
      segment9?: string;
      /** @description  Max length: 255; */
      segment10?: string;
      /** @enum {string|null} */
      segment1type?: ("Account" | "Class") | null;
      /** @enum {string|null} */
      segment2type?: ("Account" | "Class") | null;
      /** @enum {string|null} */
      segment3type?: ("Account" | "Class") | null;
      /** @enum {string|null} */
      segment4type?: ("Account" | "Class") | null;
      /** @enum {string|null} */
      segment5type?: ("Account" | "Class") | null;
      /** @enum {string|null} */
      segment6type?: ("Account" | "Class") | null;
      /** @enum {string|null} */
      segment7type?: ("Account" | "Class") | null;
      /** @enum {string|null} */
      segment8type?: ("Account" | "Class") | null;
      /** @enum {string|null} */
      segment9type?: ("Account" | "Class") | null;
      /** @enum {string|null} */
      segment10type?: ("Account" | "Class") | null;
      /** @description  Max length: 255; */
      cogs1?: string;
      /** @description  Max length: 255; */
      cogs2?: string;
      /** @description  Max length: 255; */
      cogs3?: string;
      /** @description  Max length: 255; */
      cogs4?: string;
      /** @description  Max length: 255; */
      cogs5?: string;
      /** @description  Max length: 255; */
      cogs6?: string;
      /** @description  Max length: 255; */
      cogs7?: string;
      /** @description  Max length: 255; */
      cogs8?: string;
      /** @description  Max length: 255; */
      cogs9?: string;
      /** @description  Max length: 255; */
      cogs10?: string;
      _info?: { [key: string]: string };
    };
    GLExport: {
      exportSettings?: components["schemas"]["GLExportSettings"];
      vendors?: components["schemas"]["GLExportVendor"][];
      customers?: components["schemas"]["GLExportCustomer"][];
      transactions?: components["schemas"]["GLExportTransaction"][];
      expenses?: components["schemas"]["GLExportExpense"][];
      expenseBills?: components["schemas"]["GLExportExpenseBill"][];
      purchaseTransactions?: components["schemas"]["GLExportPurchaseTransaction"][];
      adjustmentTransactions?: components["schemas"]["GLExportAdjustmentTransaction"][];
      inventoryTransfers?: components["schemas"]["GLExportInventoryTransfer"][];
    };
    GLExportAdjustmentTransaction: {
      id?: string;
      documentType?: string;
      documentDate?: string;
      glTypeID?: string;
      accountNumber?: string;
      memo?: string;
      glClass?: string;
      adjustmentDescription?: string;
      adjustmentDetail?: components["schemas"]["GLExportAdjustmentTransactionDetail"][];
    };
    GLExportAdjustmentTransactionDetail: {
      glClass?: string;
      description?: string;
      memo?: string;
      item?: components["schemas"]["IvItemReference"];
      /** Format: int32 */
      quantity?: number | null;
      /** Format: double */
      total?: number | null;
      /** Format: double */
      cost?: number | null;
      costAccountNumber?: string;
      inventoryAccountNumber?: string;
      accountNumber?: string;
      productAccountNumber?: string;
    };
    GLExportCustomer: {
      company?: components["schemas"]["CompanyReference"];
      companyType?: components["schemas"]["CompanyTypeReference"];
      contact?: components["schemas"]["ContactReference"];
      site?: components["schemas"]["SiteReference"];
      accountNumber?: string;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      billingTermsXref?: string;
      /** Format: int32 */
      dueDays?: number | null;
      taxable?: boolean | null;
      taxCode?: components["schemas"]["TaxCodeReference"];
      currency?: components["schemas"]["CurrencyReference"];
      stateTaxXref?: string;
      countyTaxXref?: string;
      cityTaxXref?: string;
      countryTaxXref?: string;
      compositeTaxXref?: string;
      /** Format: double */
      stateTaxRate?: number | null;
      /** Format: double */
      countyTaxRate?: number | null;
      /** Format: double */
      cityTaxRate?: number | null;
      /** Format: double */
      countryTaxRate?: number | null;
      /** Format: double */
      compositeTaxRate?: number | null;
      /** Format: double */
      taxGroupRate?: number | null;
      taxAgencyXref?: string;
      stateTaxAgencyXref?: string;
      countyTaxAgencyXref?: string;
      cityTaxAgencyXref?: string;
      countryTaxAgencyXref?: string;
      compositeTaxAgencyXref?: string;
      taxLevels?: components["schemas"]["GLExportCustomerTaxLevel"][];
    };
    GLExportCustomerTaxLevel: {
      /** Format: double */
      taxRate?: number | null;
      taxCodeXref?: string;
      agencyXref?: string;
      /** Format: int32 */
      taxLevel?: number;
    };
    GLExportExpense: {
      /** Format: int32 */
      id?: number;
      documentDate?: string;
      documentType?: string;
      apAccountNumber?: string;
      apClass?: string;
      accountNumber?: string;
      glClass?: string;
      glTypeId?: string;
      memo?: string;
      description?: string;
      periodStartDate?: string;
      periodEndDate?: string;
      member?: components["schemas"]["MemberReference"];
      vendorNumber?: string;
      company?: components["schemas"]["CompanyReference"];
      companyAccountNumber?: string;
      project?: components["schemas"]["ProjectReference"];
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      total?: number | null;
      offset?: components["schemas"]["GLExportExpenseOffset"];
    };
    GLExportExpenseBill: {
      /** Format: int32 */
      id?: number | null;
      documentDate?: string;
      documentType?: string;
      documentNumber?: string;
      memo?: string;
      glClass?: string;
      apAccountNumber?: string;
      member?: components["schemas"]["MemberReference"];
      vendorNumber?: string;
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      total?: number | null;
      detail?: components["schemas"]["GLExportExpenseBillDetail"][];
    };
    GLExportExpenseBillDetail: {
      id?: number[];
      documentDate?: string;
      glTypeId?: string;
      memo?: string;
      company?: components["schemas"]["CompanyReference"];
      accountNumber?: string;
      expenseClass?: components["schemas"]["ClassificationReference"];
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      total?: number | null;
      billable?: boolean | null;
      reimbursable?: boolean | null;
      companyAdvance?: boolean | null;
    };
    GLExportExpenseOffset: {
      /** Format: int32 */
      id?: number | null;
      documentDate?: string;
      documentType?: string;
      accountNumber?: string;
      glTypeId?: string;
      glClass?: string;
      member?: components["schemas"]["MemberReference"];
      memo?: string;
      description?: string;
      /** Format: double */
      total?: number | null;
    };
    GLExportInventoryTransfer: {
      id?: string;
      documentType?: string;
      documentDate?: string;
      accountNumber?: string;
      glClass?: string;
      glTypeId?: string;
      description?: string;
      salesCode?: string;
      memo?: string;
      costAccountNumber?: string;
      inventoryAccountNumber?: string;
      /** Format: int32 */
      transferId?: number | null;
      item?: components["schemas"]["IvItemReference"];
      glItemId?: string;
      salesDescription?: string;
      itemDescription?: string;
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      itemPrice?: number | null;
      taxable?: boolean | null;
      unitOfMeasure?: components["schemas"]["UnitOfMeasureReference"];
      /** Format: double */
      quantity?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      total?: number | null;
      subCategory?: components["schemas"]["ProductSubCategoryReference"];
      serializedFlag?: boolean | null;
      serialNumbers?: string;
      bin?: components["schemas"]["WarehouseBinReference"];
      warehouse?: components["schemas"]["WarehouseReference"];
      transferFromBin?: components["schemas"]["WarehouseBinReference"];
      transferFromLocationXref?: string;
      transferToBin?: components["schemas"]["WarehouseBinReference"];
      transferToLocationXref?: string;
      locationXref?: string;
      priceLevelXref?: string;
      uomScheduleXref?: string;
      itemTypeXref?: string;
      inventoryXref?: string;
      cogsXref?: string;
      taxNote?: string;
      offset?: components["schemas"]["GLExportInventoryTransferOffset"];
    };
    GLExportInventoryTransferOffset: {
      /** Format: int32 */
      id?: number | null;
      documentType?: string;
      documentDate?: string;
      accountNumber?: string;
      glClass?: string;
      /** Format: double */
      total?: number | null;
      memo?: string;
      description?: string;
      glTypeId?: string;
    };
    GLExportPurchaseTransaction: {
      id?: string;
      documentDate?: string;
      documentNumber?: string;
      description?: string;
      memo?: string;
      apAccountNumber?: string;
      purchaseDate?: string;
      company?: components["schemas"]["CompanyReference"];
      companyType?: components["schemas"]["CompanyTypeReference"];
      contact?: components["schemas"]["ContactReference"];
      site?: components["schemas"]["SiteReference"];
      purchaseClass?: string;
      /** Format: double */
      freightAmount?: number | null;
      freightPackingSlip?: string;
      packingSlip?: string;
      dropshipFlag?: boolean | null;
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      total?: number | null;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      billingTermsXref?: string;
      /** Format: int32 */
      dueDays?: number | null;
      vendorNumber?: string;
      vendorAccountNumber?: string;
      vendorInvoiceDate?: string;
      vendorInvoiceNumber?: string;
      taxAgencyXref?: string;
      stateTaxXref?: string;
      countyTaxXref?: string;
      cityTaxXref?: string;
      shipToCompany?: components["schemas"]["CompanyReference"];
      shipToCompanyAccountNumber?: string;
      shipToCompanyType?: components["schemas"]["CompanyTypeReference"];
      shipToContact?: components["schemas"]["ContactReference"];
      shipToSite?: components["schemas"]["SiteReference"];
      shipToTaxGroup?: string;
      taxCode?: components["schemas"]["TaxCodeReference"];
      /** Format: double */
      taxGroupRate?: number | null;
      useAvalaraTaxFlag?: boolean | null;
      purchaseHeaderTaxGroup?: string;
      purchaseHeaderTaxableFlag?: boolean | null;
      purchaseHeaderFreightTaxableFlag?: boolean | null;
      taxLevels?: components["schemas"]["GLExportPurchaseTransactionTaxLevel"][];
      purchaseDetail?: components["schemas"]["GLExportPurchaseTransactionDetail"][];
      purchaseDetailTax?: components["schemas"]["GLExportPurchaseTransactionDetailTax"][];
    };
    GLExportPurchaseTransactionDetail: {
      /** Format: int32 */
      id?: number | null;
      documentDate?: string;
      glClass?: string;
      glTypeId?: string;
      glItemId?: string;
      salesCode?: string;
      description?: string;
      /** Format: double */
      cost?: number | null;
      memo?: string;
      taxNote?: string;
      vendorNumber?: string;
      accountNumber?: string;
      costAccountNumber?: string;
      inventoryAccountNumber?: string;
      vendorAccountNumber?: string;
      item?: components["schemas"]["IvItemReference"];
      itemDescription?: string;
      salesDescription?: string;
      taxable?: boolean | null;
      /** Format: double */
      itemPrice?: number | null;
      /** Format: double */
      itemCost?: number | null;
      unitOfMeasure?: components["schemas"]["UnitOfMeasureReference"];
      /** Format: double */
      quantity?: number | null;
      /** Format: double */
      total?: number | null;
      currency?: components["schemas"]["CurrencyReference"];
      serializedFlag?: boolean | null;
      serialNumbers?: string;
      dropShippedFlag?: boolean | null;
      /** Format: int32 */
      lineNumber?: number;
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      warehouseSite?: components["schemas"]["SiteReference"];
      subCategory?: components["schemas"]["ProductSubCategoryReference"];
      shipmentMethod?: components["schemas"]["ShipmentMethodReference"];
      itemTypeXref?: string;
      inventoryXref?: string;
      cogsXref?: string;
      uomScheduleXref?: string;
      priceLevelXref?: string;
      locationXref?: string;
      taxCode?: components["schemas"]["TaxCodeReference"];
      purchaseHeaderTaxGroup?: string;
      taxCodeXref?: string;
      /** Format: double */
      taxRate?: number;
      taxAgencyXref?: string;
    };
    GLExportPurchaseTransactionDetailTax: {
      /** Format: int32 */
      id?: number | null;
      documentDate?: string;
      accountNumber?: string;
      glClass?: string;
      /** Format: double */
      cost?: number | null;
      salesCode?: string;
      glTypeId?: string;
      glItemId?: string;
      memo?: string;
      vendorNumber?: string;
      vendorAccountNumber?: string;
      costAccountNumber?: string;
      inventoryAccountNumber?: string;
      itemTypeXref?: string;
      inventoryXref?: string;
      cogsXref?: string;
      uomScheduleXref?: string;
      priceLevelXref?: string;
      locationXref?: string;
      item?: components["schemas"]["IvItemReference"];
      taxableFlag?: boolean | null;
      salesDescription?: string;
      itemDescription?: string;
      /** Format: double */
      itemPrice?: number | null;
      /** Format: double */
      itemCost?: number | null;
      unitOfMeasure?: components["schemas"]["UnitOfMeasureReference"];
      /** Format: double */
      quantity?: number | null;
      /** Format: double */
      total?: number | null;
      currency?: components["schemas"]["CurrencyReference"];
      serializedFlag?: boolean | null;
      serialNumbers?: string;
      dropShippedFlag?: boolean | null;
      /** Format: int32 */
      lineNumber?: number;
      warehouseSite?: components["schemas"]["SiteReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      shipmentMethod?: components["schemas"]["ShipmentMethodReference"];
      subCategory?: components["schemas"]["ProductSubCategoryReference"];
      taxCode?: components["schemas"]["TaxCodeReference"];
      /** Format: double */
      taxRate?: number | null;
      /** Format: double */
      taxRatePercent?: number | null;
      taxAgencyXref?: string;
      taxNote?: string;
      purchaseHeaderTaxGroup?: string;
    };
    GLExportPurchaseTransactionTaxLevel: {
      taxCodeXref?: string;
      /** Format: int32 */
      taxLevel?: number;
    };
    GLExportSettings: { [key: string]: unknown };
    GLExportTransaction: {
      /** Format: int32 */
      id?: number | null;
      glClass?: string;
      glTypeId?: string;
      documentDate?: string;
      documentNumber?: string;
      documentType?: string;
      memo?: string;
      description?: string;
      attention?: string;
      salesTerritory?: string;
      company?: components["schemas"]["CompanyReference"];
      companyType?: components["schemas"]["CompanyTypeReference"];
      companyAccountNumber?: string;
      site?: components["schemas"]["SiteReference"];
      billingTerms?: components["schemas"]["BillingTermsReference"];
      billingTermsXref?: string;
      /** Format: int32 */
      dueDays?: number | null;
      dueDate?: string;
      emailDeliveryFlag?: boolean | null;
      printDeliveryFlag?: boolean | null;
      agreementPrePaymentFlag?: boolean | null;
      accountNumber?: string;
      billingType?: string;
      glEntryIds?: string;
      purchaseOrder?: components["schemas"]["PurchaseOrderReference"];
      project?: components["schemas"]["ProjectReference"];
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      total?: number | null;
      salesRepId?: string;
      salesRepName?: string;
      taxable?: boolean | null;
      /** Format: double */
      taxableTotal?: number | null;
      taxCode?: components["schemas"]["TaxCodeReference"];
      /** Format: double */
      taxGroupRate?: number | null;
      piggyBackFlag?: boolean | null;
      taxAccountNumber?: string;
      /** Format: double */
      salesTax?: number | null;
      /** Format: double */
      stateTax?: number | null;
      /** Format: double */
      countyTax?: number | null;
      /** Format: double */
      cityTax?: number | null;
      /** Format: double */
      taxableAmount1?: number | null;
      /** Format: double */
      taxableAmount2?: number | null;
      /** Format: double */
      taxableAmount3?: number | null;
      /** Format: double */
      taxableAmount4?: number | null;
      /** Format: double */
      taxableAmount5?: number | null;
      taxAgencyXref?: string;
      stateTaxXref?: string;
      countyTaxXref?: string;
      taxId?: string;
      taxDpAppliedFlag?: boolean | null;
      useAvalaraFlag?: boolean | null;
      sendAvalaraTaxFlag?: boolean | null;
      shipToCompany?: components["schemas"]["CompanyReference"];
      shipToCompanyAccountNumber?: string;
      shipToCompanyType?: components["schemas"]["CompanyTypeReference"];
      shipToTaxId?: string;
      shipSite?: components["schemas"]["SiteReference"];
      shipContact?: string;
      detail?: components["schemas"]["GLExportTransactionDetail"][];
      taxLevels?: components["schemas"]["GLExportTransactionTaxLevel"][];
    };
    GLExportTransactionDetail: {
      /** Format: int32 */
      id?: number | null;
      documentDate?: string;
      documentType?: string;
      accountNumber?: string;
      glClass?: string;
      glTypeId?: string;
      glItemId?: string;
      invoiceSummaryOption?: string;
      /** Format: double */
      cost?: number | null;
      salesCode?: string;
      memo?: string;
      description?: string;
      /** Format: double */
      quantity?: number | null;
      /** Format: double */
      total?: number | null;
      currency?: components["schemas"]["CurrencyReference"];
      timeEntry?: components["schemas"]["TimeEntryReference"];
      costAccountNumber?: string;
      inventoryAccountNumber?: string;
      productAccountNumber?: string;
      taxCode?: components["schemas"]["TaxCodeReference"];
      taxCodeXref?: string;
      taxAgencyXref?: string;
      taxNote?: string;
      /** Format: double */
      taxRate?: number | null;
      /** Format: double */
      taxRatePercent?: number | null;
      taxableFlag?: boolean | null;
      taxable2Flag?: boolean | null;
      taxable3Flag?: boolean | null;
      taxable4Flag?: boolean | null;
      taxable5Flag?: boolean | null;
      item?: components["schemas"]["IvItemReference"];
      product?: components["schemas"]["ProductReference"];
      itemTaxableFlag?: boolean | null;
      /** Format: double */
      itemPrice?: number | null;
      /** Format: double */
      itemCost?: number | null;
      itemDescription?: string;
      salesDescription?: string;
      unitOfMeasure?: components["schemas"]["UnitOfMeasureReference"];
      subCategory?: components["schemas"]["ProductSubCategoryReference"];
      serializedFlag?: boolean | null;
      serialNumbers?: string;
      warehouseSite?: components["schemas"]["SiteReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      shipmentMethod?: components["schemas"]["ShipmentMethodReference"];
      dropShippedFlag?: boolean | null;
      itemTypeXref?: string;
      inventoryXref?: string;
      cogsXref?: string;
      uomScheduleXref?: string;
      priceLevelXref?: string;
      locationXref?: string;
      taxLevels?: components["schemas"]["GLExportTransactionDetailTaxLevel"][];
    };
    GLExportTransactionDetailTaxLevel: {
      taxableFlag?: boolean;
      /** Format: int32 */
      taxLevel?: number;
    };
    GLExportTransactionTaxLevel: {
      /** Format: double */
      taxAmount?: number | null;
      /** Format: double */
      taxableAmount?: number | null;
      taxCodeXref?: string;
      /** Format: int32 */
      taxLevel?: number;
    };
    GLExportVendor: {
      member?: components["schemas"]["MemberReference"];
      vendor?: components["schemas"]["CompanyReference"];
      vendorNumber?: string;
      company?: components["schemas"]["CompanyReference"];
      contact?: components["schemas"]["ContactReference"];
      accountNumber?: string;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      /** Format: int32 */
      dueDays?: number | null;
      site?: components["schemas"]["SiteReference"];
      taxCode?: components["schemas"]["TaxCodeReference"];
    };
    GLPath: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      /** @description  Max length: 255; */
      path?: string;
      /** @description  Max length: 255; */
      sqlServerName?: string;
      /** @description  Max length: 100; */
      databaseName?: string;
      /** Format: date-time */
      lastPaymentSync?: string;
      lastPaymentSyncBy?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    GoogleEmailSetup: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 200; */
      name: string;
      /** @description  Max length: 100; */
      username: string;
      /** @description  Max length: 40; */
      inboxFolder: string;
      /** @description  Max length: 40; */
      processedFolder: string;
      /** @description  Max length: 40; */
      failedFolder: string;
      /** @description  Max length: 200; */
      clientId?: string;
      /** @description  Max length: 4000; */
      privateKey?: string;
      inactiveFlag?: boolean | null;
      emailConnector?: components["schemas"]["EmailConnectorReference"];
      _info?: { [key: string]: string };
    };
    GoogleEmailSetupReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Group: {
      /** Format: int32 */
      id?: number;
      name: string;
      /** @description  Max length: 255; */
      publicDescription?: string;
      publicFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    GroupReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Holiday: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** @description Can be set to false to set a holiday for specific hours (Defaults to True) */
      allDayFlag?: boolean | null;
      /** Format: date */
      date: string;
      timeStart?: string;
      timeEnd?: string;
      holidayList?: components["schemas"]["HolidayListReference"];
      _info?: { [key: string]: string };
    };
    HolidayList: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      _info?: { [key: string]: string };
    };
    HolidayListInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    HolidayListReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    IdCollection: {
      ids?: number[];
    };
    Imap: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 200; */
      name: string;
      /** @description  Max length: 40; */
      imapName: string;
      /** @description  Max length: 40; */
      processedName: string;
      /** @description  Max length: 40; */
      failedFolder: string;
      /** @description  Max length: 200; */
      server: string;
      /** @description  Max length: 80; */
      userName: string;
      /** @description  Max length: 80; */
      password?: string;
      /** Format: int32 */
      port: number | null;
      sslFlag?: boolean | null;
      emailConnector?: components["schemas"]["EmailConnectorReference"];
      _info?: { [key: string]: string };
    };
    ImapInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      emailConnector?: components["schemas"]["EmailConnectorReference"];
      _info?: { [key: string]: string };
    };
    ImapSetupReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Impact: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** @description  Max length: 200; */
      description: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ImportMassMaintenance: {
      /** Format: int32 */
      deletedContactCount?: number;
      /** Format: int32 */
      deletedCompanyCount?: number;
      message?: string;
      success?: boolean;
    };
    InclusiveRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    Info: {
      version?: string;
      isCloud?: boolean;
      serverTimeZone?: string;
      licenseBits?: components["schemas"]["LicenseBit"][];
      cloudRegion?: string;
    };
    InOutBoard: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      inOutType?: components["schemas"]["InOutTypeReference"];
      /** @description  Max length: 100; */
      additionalInfo?: string;
      /** Format: date-time */
      dateBack: string;
      _info?: { [key: string]: string };
    };
    InOutType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      description: string;
      _info?: { [key: string]: string };
    };
    InOutTypeInfo: {
      /** Format: int32 */
      id?: number;
      description?: string;
      _info?: { [key: string]: string };
    };
    InOutTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    IntegratorLogin: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      username: string;
      /** @description The password will never be returned in response Max length: 50; */
      password?: string;
      /** @description This flag controls whether the integrator can access only the db records it created, or all system records */
      canAccessAllRecordsFlag?: boolean | null;
      /**
       * @description Setting this flag to true will create an integrator that can access all of the available apis in the system.
       *             If this field is set to true, both the member and board fields are required.
       */
      canAccessAllApisFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      /** Format: date-time */
      dateInactivated?: string;
      inactivatedBy?: components["schemas"]["MemberReference"];
      serviceTicketApiFlag?: boolean | null;
      board?: components["schemas"]["BoardReference"];
      /** @description  Max length: 1000; */
      serviceBoardCallbackUrl?: string;
      serviceBoardLegacyCallbackFlag?: boolean | null;
      timeEntryApiFlag?: boolean | null;
      member?: components["schemas"]["MemberReference"];
      /** @description  Max length: 1000; */
      timeEntryCallbackUrl?: string;
      timeEntryLegacyCallbackFlag?: boolean | null;
      managedServicesApiFlag?: boolean | null;
      managedServicesAutoChildFlag?: boolean | null;
      /** @description True if integrator is allowed to child configurations */
      managedServicesChildingFlag?: boolean | null;
      contactApiFlag?: boolean | null;
      /** @description  Max length: 1000; */
      contactCallbackUrl?: string;
      contactLegacyCallbackFlag?: boolean | null;
      companyApiFlag?: boolean | null;
      /** @description  Max length: 1000; */
      companyCallbackUrl?: string;
      companyLegacyCallbackFlag?: boolean | null;
      activityApiFlag?: boolean | null;
      /** @description  Max length: 1000; */
      activityCallbackUrl?: string;
      activityLegacyCallbackFlag?: boolean | null;
      invoiceApiFlag?: boolean | null;
      productApiFlag?: boolean | null;
      /** @description  Max length: 1000; */
      productCallbackUrl?: string;
      productLegacyCallbackFlag?: boolean | null;
      opportunityApiFlag?: boolean | null;
      /** @description  Max length: 1000; */
      opportunityCallbackUrl?: string;
      opportunityLegacyCallbackFlag?: boolean | null;
      /** @description True if the member has access to the Opportunity Conversion Api */
      opportunityConversionApiFlag?: boolean | null;
      memberApiFlag?: boolean | null;
      marketingApiFlag?: boolean | null;
      purchasingApiFlag?: boolean | null;
      /** @description  Max length: 1000; */
      purchasingCallbackUrl?: string;
      purchasingLegacyCallbackFlag?: boolean | null;
      reportingApiFlag?: boolean | null;
      systemApiFlag?: boolean | null;
      projectApiFlag?: boolean | null;
      /** @description  Max length: 1000; */
      projectCallbackUrl?: string;
      projectLegacyCallbackFlag?: boolean | null;
      configurationApiFlag?: boolean | null;
      configurationAutoChildFlag?: boolean | null;
      /** @description True if integrator is allowed to child configurations */
      configurationChildlingFlag?: boolean | null;
      /** @description  Max length: 1000; */
      configurationCallbackUrl?: string;
      configurationLegacyCallbackFlag?: boolean | null;
      scheduleApiFlag?: boolean | null;
      /** @description  Max length: 1000; */
      scheduleCallbackUrl?: string;
      scheduleLegacyCallbackFlag?: boolean | null;
      agreementApiFlag?: boolean | null;
      /** @description  Max length: 1000; */
      agreementCallbackUrl?: string;
      agreementCallbackLegacyFlag?: boolean | null;
      documentApiFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    IntegratorLoginReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    IntegratorTag: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      text: string;
      _info?: { [key: string]: string };
    };
    IntegratorTagCollection: {
      tags?: string[];
    };
    InventoryOnHand: {
      /** Format: int32 */
      id?: number;
      catalogItem?: components["schemas"]["CatalogItemReference"];
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      /** Format: int32 */
      onHand?: number | null;
      serialNumbers?: components["schemas"]["OnHandSerialNumberReference"][];
      _info?: { [key: string]: string };
    };
    Invoice: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 15; Required On Updates; */
      invoiceNumber?: string;
      /** @enum {string|null} */
      type:
        | (
            | "Agreement"
            | "CreditMemo"
            | "DownPayment"
            | "Miscellaneous"
            | "Progress"
            | "Standard"
          )
        | null;
      status?: components["schemas"]["BillingStatusReference"];
      company?: components["schemas"]["CompanyReference"];
      billToCompany?: components["schemas"]["CompanyReference"];
      shipToCompany?: components["schemas"]["CompanyReference"];
      accountNumber?: string;
      /** @enum {string|null} */
      applyToType?:
        | (
            | "All"
            | "Agreement"
            | "Project"
            | "ProjectPhase"
            | "SalesOrder"
            | "Ticket"
          )
        | null;
      /** Format: int32 */
      applyToId?: number | null;
      /** @description  Max length: 60; */
      attention?: string;
      /** @description  Max length: 60; */
      shipToAttention?: string;
      billingSite?: components["schemas"]["SiteReference"];
      billingSiteAddressLine1?: string;
      billingSiteAddressLine2?: string;
      billingSiteCity?: string;
      billingSiteState?: string;
      billingSiteZip?: string;
      billingSiteCountry?: string;
      shippingSite?: components["schemas"]["SiteReference"];
      shippingSiteAddressLine1?: string;
      shippingSiteAddressLine2?: string;
      shippingSiteCity?: string;
      shippingSiteState?: string;
      shippingSiteZip?: string;
      shippingSiteCountry?: string;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      /** @description  Max length: 50; */
      reference?: string;
      /** @description  Max length: 50; */
      customerPO?: string;
      /**
       * Format: int32
       * @description Can be obtained via InvoiceTemplate report
       */
      templateSetupId?: number | null;
      invoiceTemplate?: components["schemas"]["InvoiceTemplateDetailReference"];
      /**
       * Format: int32
       * @description Can be obtained via InvoiceEmailTemplate report
       */
      emailTemplateId?: number | null;
      addToBatchEmailList?: boolean | null;
      /** Format: date-time */
      date?: string;
      restrictDownpaymentFlag?: boolean | null;
      /**
       * Format: int32
       * @description  Required On Updates;
       */
      locationId?: number | null;
      /**
       * Format: int32
       * @description departmentId is only required for special invoices
       */
      departmentId?: number | null;
      /** Format: int32 */
      territoryId?: number | null;
      topComment?: string;
      bottomComment?: string;
      taxableFlag?: boolean | null;
      taxCode?: components["schemas"]["TaxCodeReference"];
      internalNotes?: string;
      downpaymentPreviouslyTaxedFlag?: boolean | null;
      /** Format: double */
      serviceTotal?: number | null;
      overrideDownPaymentAmountFlag?: boolean | null;
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: date-time */
      dueDate?: string;
      /** Format: double */
      expenseTotal?: number | null;
      /** Format: double */
      productTotal?: number | null;
      /** Format: double */
      previousProgressApplied?: number | null;
      /** Format: double */
      serviceAdjustmentAmount?: number | null;
      /** Format: double */
      agreementAmount?: number | null;
      /** Format: double */
      downpaymentApplied?: number | null;
      /** Format: double */
      subtotal?: number | null;
      /** Format: double */
      total?: number | null;
      /** Format: double */
      remainingDownpayment?: number | null;
      /** Format: double */
      salesTax?: number | null;
      adjustmentReason?: string;
      adjustedBy?: string;
      /** Format: double */
      payments?: number | null;
      /** Format: double */
      credits?: number | null;
      /** Format: double */
      balance?: number | null;
      specialInvoiceFlag?: boolean | null;
      billingSetupReference?: components["schemas"]["BillingSetupReference"];
      ticket?: components["schemas"]["TicketReference"];
      project?: components["schemas"]["ProjectReference"];
      phase?: components["schemas"]["ProjectPhaseReference"];
      salesOrder?: components["schemas"]["SalesOrderReference"];
      agreement?: components["schemas"]["AgreementReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    InvoiceEmailTemplate: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      serviceSurvey?: components["schemas"]["ServiceSurveyReference"];
      useSenderFlag?: boolean | null;
      /** @description From fields (first name, last name, email address) are required if useSenderFlag is false Max length: 100; */
      firstName?: string;
      /** @description From fields (first name, last name, email address) are required if useSenderFlag is false Max length: 100; */
      lastName?: string;
      /** @description From fields (first name, last name, email address) are required if useSenderFlag is false Max length: 100; */
      emailAddress?: string;
      /** @description  Max length: 200; */
      subject: string;
      body?: string;
      copySenderFlag?: boolean | null;
      invoiceStatus?: components["schemas"]["BillingStatusReference"];
      attachInvoiceFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    InvoiceEmailTemplateInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    InvoiceGroupingReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      description?: string;
      showPriceFlag?: boolean;
      showSubItemsFlag?: boolean;
      _info?: { [key: string]: string };
    };
    InvoiceInfo: {
      /** Format: int32 */
      id?: number;
      invoice?: components["schemas"]["Invoice"];
      invoiceTemplate?: components["schemas"]["InvoiceTemplate"];
      products?: components["schemas"]["ProductItem"][];
      bundledComponentsInfo?: components["schemas"]["ProductComponent"][];
      expenses?: components["schemas"]["ExpenseEntry"][];
      timeEntries?: components["schemas"]["TimeEntry"][];
      logo?: components["schemas"]["DocumentInfo"];
      billingSetup?: components["schemas"]["BillingSetup"];
      agreementBillingInfo?: components["schemas"]["AgreementBillingInfo"][];
      _info?: { [key: string]: string };
    };
    InvoiceReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      billingType?: string;
      applyToType?: string;
      _info?: { [key: string]: string };
    };
    InvoiceTemplate: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** Format: double */
      marginLeft?: number | null;
      /** Format: double */
      marginRight?: number | null;
      /** Format: double */
      marginTop?: number | null;
      /** Format: double */
      marginBottom?: number | null;
      logoVisibleFlag?: boolean | null;
      /** @enum {string|null} */
      headerLogoPosition?: ("Center" | "LeftSide" | "RightSide") | null;
      remitToVisibleFlag?: boolean | null;
      /** @enum {string|null} */
      headerAddressPosition?: ("Center" | "LeftSide" | "RightSide") | null;
      headerTitleVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      headerTitleCaption?: string;
      /** @enum {string|null} */
      headerTitlePosition?: ("Center" | "LeftSide" | "RightSide") | null;
      /** @enum {string|null} */
      headerTitleFont?:
        | (
            | "Regular"
            | "RegularBold"
            | "Large"
            | "LargeBold"
            | "ExtraLarge"
            | "ExtraLargeBold"
          )
        | null;
      headerTermsVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      headerTermsCaption?: string;
      headerDueDateVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      headerDueDateCaption?: string;
      headerPoNumberVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      headerPoNumberCaption?: string;
      headerReferenceVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      headerReferenceCaption?: string;
      headerAccountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      headerAccountCaption?: string;
      headerTaxIdVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      headerTaxIdCaption?: string;
      headerShipToVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      headerShipToCaption?: string;
      headerHoursBasedExtendedAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 1000; */
      payableCaption?: string;
      serviceHeaderTicketNumberVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      serviceHeaderTicketNumberCaption?: string;
      serviceHeaderCompanyNameVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      serviceHeaderCompanyNameCaption?: string;
      serviceHeaderSummaryVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      serviceHeaderSummaryCaption?: string;
      serviceHeaderContactNameVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      serviceHeaderContactNameCaption?: string;
      serviceHeaderDetailDescriptionVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      serviceHeaderDetailDescriptionCaption?: string;
      serviceHeaderResolutionVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      serviceHeaderResolutionCaption?: string;
      serviceHeaderAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      serviceHeaderAmountCaption?: string;
      serviceHeaderBillingMethodVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      serviceHeaderBillingMethodCaption?: string;
      serviceHeaderClosedTasksVisibleFlag?: boolean | null;
      serviceHeaderOpenTasksVisibleFlag?: boolean | null;
      serviceHeaderBundledTicketsVisibleFlag?: boolean | null;
      projectHeaderProjectNameVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      projectHeaderProjectNameCaption?: string;
      projectHeaderCompanyNameVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      projectHeaderCompanyNameCaption?: string;
      projectHeaderOriginalDownpaymentVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      projectHeaderOriginalDownpaymentCaption?: string;
      projectHeaderContactNameVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      projectHeaderContactNameCaption?: string;
      projectHeaderAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      projectHeaderAmountCaption?: string;
      projectHeaderBillingMethodVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      projectHeaderBillingMethodCaption?: string;
      projectHeaderBillingTypeVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      projectHeaderBillingTypeCaption?: string;
      invoicePaymentAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      invoicePaymentAmountCaption?: string;
      invoiceCreditAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      invoiceCreditAmountCaption?: string;
      invoiceBalanceDueVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      invoiceBalanceDueCaption?: string;
      creditCreditAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      creditCreditAmountCaption?: string;
      creditRemainingAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      creditRemainingAmountCaption?: string;
      timeDetailVisibleFlag?: boolean | null;
      timeDetailPrimarySortField?: string;
      timeDetailPrimarySortDirection?: string;
      timeDetailSecondarySortField?: string;
      timeDetailSecondarySortDirection?: string;
      timeDetailSubtotalVisibleFlag?: boolean | null;
      timeDetailStartEndTimeVisibleFlag?: boolean | null;
      timeDetailHoursVisibleFlag?: boolean | null;
      timeDetailMembersVisibleFlag?: boolean | null;
      timeDetailBillableVisibleFlag?: boolean | null;
      timeDetailExtendedAmountVisibleFlag?: boolean | null;
      timeDetailDollarAmountsOnHourseBasedVisibleFlag?: boolean | null;
      timeDetailHourlyRateVisibleFlag?: boolean | null;
      timeDetailContactsVisibleFlag?: boolean | null;
      timeDetailNotesVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      timeDetailNonBillableCaption?: string;
      timeDetailAgreementVisibleFlag?: boolean | null;
      timeDetailHoursBasedHoursVisibleFlag?: boolean | null;
      timeDetailHoursBasedExtAmountVisibleFlag?: boolean | null;
      timeDetailHoursbasedHourlyRateVisibleFlag?: boolean | null;
      timeDetailAmountBasedHoursVisibleFlag?: boolean | null;
      timeDetailAmountBasedExtAmountVisibleFlag?: boolean | null;
      timeDetailAmountBasedHourlyRateVisibleFlag?: boolean | null;
      timeDetailSRTicketSummaryVisibleFlag?: boolean | null;
      timeDetailSRContactVisibleFlag?: boolean | null;
      timeDetailSRAddressVisibleFlag?: boolean | null;
      timeDetailPmPhaseVisibleFlag?: boolean | null;
      timeDetailPmSummaryVisibleFlag?: boolean | null;
      timeDetailTicketNumberVisibleFlag?: boolean | null;
      timeDetailDatesVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      servicesStaffCaption?: string;
      servicesStaffVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      servicesAmountCaption?: string;
      servicesAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      servicesHoursCaption?: string;
      servicesHoursVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      servicesRateCaption?: string;
      servicesRateVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      servicesWorkRoleCaption?: string;
      servicesWorkRoleVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      servicesWorkTypeCaption?: string;
      servicesWorkTypeVisibleFlag?: boolean | null;
      servicesTotalVisibleFlag?: boolean | null;
      servicesMemberNameVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      servicesMemberNameCaption?: string;
      currencyIdVisibleFlag?: boolean | null;
      currencySymbolVisibleFlag?: boolean | null;
      portalFlag?: boolean | null;
      servicesCollapsedFlag?: boolean | null;
      expensesCollapsedFlag?: boolean | null;
      otherChargesCollapsedFlag?: boolean | null;
      /** @description  Max length: 50; */
      expensesTypeCaption?: string;
      /** @description  Max length: 50; */
      expensesStaffCaption?: string;
      /** @description  Max length: 50; */
      expensesAmountCaption?: string;
      expensesTypeVisibleFlag?: boolean | null;
      expensesStaffVisibleFlag?: boolean | null;
      expensesAmountVisibleFlag?: boolean | null;
      expensesTotalVisibleFlag?: boolean | null;
      expenseDetailSubtotalVisibleFlag?: boolean | null;
      expenseDetailMembersVisibleFlag?: boolean | null;
      expenseDetailContactsVisibleFlag?: boolean | null;
      expenseDetailBillableVisibleFlag?: boolean | null;
      expenseDetailExtAmountVisibleFlag?: boolean | null;
      expenseDetailNotesVisibleFlag?: boolean | null;
      expenseDetailPrimarySortField?: string;
      expenseDetailPrimarySortDirection?: string;
      expenseDetailSecondarySortField?: string;
      expenseDetailSecondarySortDirection?: string;
      /** @description  Max length: 50; */
      expenseDetailNonbillableCaption?: string;
      expenseDetailVisibleFlag?: boolean | null;
      expenseDetailAgreementVisibleFlag?: boolean | null;
      expenseDetailAgreementExtAmountVisibleFlag?: boolean | null;
      expenseDetailTicketNumberVisibleFlag?: boolean | null;
      expenseDetailSrTicketSummaryVisibleFlag?: boolean | null;
      expenseDetailSrContactVisibleFlag?: boolean | null;
      expenseDetailSrAddressVisibleFlag?: boolean | null;
      expenseDetailPmPhaseVisibleFlag?: boolean | null;
      expenseDetailPmSummaryVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      otherChargesAmountCaption?: string;
      otherChargesAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      otherChargesDescriptionCaption?: string;
      otherChargesDescriptionVisibleFlag?: boolean | null;
      otherChargesDisplaySixDecimals?: boolean | null;
      otherChargesItemIdVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      otherChargesPriceCaption?: string;
      otherChargesPriceVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      otherChargesQuantityCaption?: string;
      otherChargesQuantityVisibleFlag?: boolean | null;
      otherChargesSerialNumberVisibleFlag?: boolean | null;
      otherChargesTotalVisibleFlag?: boolean | null;
      adjustmentDescriptionVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      adjustmentDescriptionCaption?: string;
      adjustmentQuantityVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      adjustmentQuantityCaption?: string;
      adjustmentAmountVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      adjustmentAmountCaption?: string;
      adjustmentAgrTypeVisibleFlag?: boolean | null;
      adjustmentTotalVisibleFlag?: boolean | null;
      adjustmentPriceVisibleFlag?: boolean | null;
      /** @description  Max length: 50; */
      adjustmentPriceCaption?: string;
      _info?: { [key: string]: string };
    };
    InvoiceTemplateDetailReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    InvoiceTemplateReference: {
      /**
       * Format: int32
       * @description Invoice Template Setup Id
       */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    InvoiceTemplateSetup: {
      /** Format: int32 */
      id?: number;
      name?: string;
      customFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    IRestIdentifiedItem: {
      /** Format: int32 */
      id?: number;
    };
    IvItemReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      serializedFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    KBCategoryReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    KnowledgeBaseArticle: {
      /** Format: int32 */
      id?: number;
      title: string;
      issue: string;
      resolution: string;
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      board?: components["schemas"]["BoardReference"];
      /** Format: int32 */
      categoryId?: number | null;
      /** Format: int32 */
      subCategoryId?: number | null;
      dateCreated?: string;
      createdBy?: string;
      _info?: { [key: string]: string };
    };
    KnowledgeBaseCategory: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      approver?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    KnowledgeBaseSettings: {
      /** Format: int32 */
      id?: number;
      requireApproval: boolean | null;
      defaultApprover?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    KnowledgeBaseSubCategory: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      category: components["schemas"]["KBCategoryReference"];
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      _info?: { [key: string]: string };
    };
    KPI: {
      /** Format: int32 */
      id?: number;
      name?: string;
      category?: components["schemas"]["KPICategoryReference"];
      dateFilter?: string;
      /** Format: int32 */
      sortOrder?: number | null;
      inactiveFlag?: boolean | null;
    };
    KPICategory: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      sortOrder?: number | null;
    };
    KPICategoryReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    KPIReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    LdapConfiguration: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      name: string;
      /** @description FQDN of the Server. Max length: 200; */
      server: string;
      /** @description Domain Name of the server. Max length: 50; */
      domain: string;
      _info?: { [key: string]: string };
    };
    LdapConfigurationInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    LdapConfigurationReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      server?: string;
      _info?: { [key: string]: string };
    };
    LdapConfigurationTestLink: {
      /** @description  Max length: 200; */
      server?: string;
    } & {
      Server: unknown;
    };
    LegacySubCategory: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    LegacySubCategoryInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    LicenseBit: {
      name?: string;
      activeFlag?: boolean;
    };
    Link: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** Format: int32 */
      tableReferenceId?: number | null;
      /** @description  Max length: 1000; */
      url?: string;
      /** @enum {string|null} */
      screenLink?:
        | (
            | "Company"
            | "Contact"
            | "Service"
            | "Invoice"
            | "PurchaseOrder"
            | "SalesOrder"
          )
        | null;
      _info?: { [key: string]: string };
    };
    LinkClicked: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      campaignId?: number | null;
      /** Format: int32 */
      contactId: number | null;
      /** Format: date-time */
      dateClicked?: string;
      /** @description  Max length: 2083; */
      url: string;
      queryString?: string;
    };
    LinkInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** @enum {string|null} */
      screenLink?:
        | (
            | "Company"
            | "Contact"
            | "Service"
            | "Invoice"
            | "PurchaseOrder"
            | "SalesOrder"
          )
        | null;
      _info?: { [key: string]: string };
    };
    LinkResolveUrlInfo: {
      /** Format: int32 */
      referenceId: number | null;
      url?: string;
    };
    LocaleInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      localeCode?: string;
    };
    LocaleReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Location: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      ownerLevelId?: number | null;
      structureLevel?: components["schemas"]["CorporateStructureLevelReference"];
      /** @description  Max length: 50; */
      name: string;
      manager?: components["schemas"]["MemberReference"];
      reportsTo?: components["schemas"]["SystemLocationReference"];
      /** @description  Max length: 50; */
      salesRep?: string;
      timeZoneSetup?: components["schemas"]["TimeZoneSetupReference"];
      calendar?: components["schemas"]["CalendarReference"];
      /** @description  Max length: 50; */
      overrideAddressLine1?: string;
      /** @description  Max length: 50; */
      overrideAddressLine2?: string;
      /** @description  Max length: 50; */
      overrideCity?: string;
      /** @description  Max length: 50; */
      overrideState?: string;
      /** @description  Max length: 12; */
      overrideZip?: string;
      overrideCountry?: components["schemas"]["CountryReference"];
      /** @description  Max length: 15; */
      overridePhoneNumber?: string;
      /** @description  Max length: 15; */
      overrideFaxNumber?: string;
      /** @description  Max length: 100; */
      owaUrl?: string;
      /** @description  Max length: 10; */
      payrollXref?: string;
      locationFlag?: boolean | null;
      clientFlag?: boolean | null;
      workRoleIds?: number[];
      departmentIds?: number[];
      _info?: { [key: string]: string };
    };
    LocationDepartment: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      _info?: { [key: string]: string };
    };
    LocationInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      location_flag?: boolean;
      structureLevel?: components["schemas"]["CorporateStructureLevelReference"];
      _info?: { [key: string]: string };
    };
    LocationWorkRole: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      workRoleInactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    LostRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    ManagedDeviceAccount: {
      /** Format: int32 */
      id?: number;
      username?: string;
      password?: string;
      managedDevicesIntegration?: components["schemas"]["ManagedDevicesIntegrationReference"];
      _info?: { [key: string]: string };
    };
    ManagedDevicesIntegration: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      /** @description  Max length: 30; */
      solution: string;
      /** @description  Max length: 200; */
      portalUrl?: string;
      /** @enum {string|null} */
      loginBy: ("Global" | "Member") | null;
      /** @description This is only required when globalLoginFlag = true Max length: 50; */
      globalLoginUsername?: string;
      /** @description This is only required when globalLoginFlag = true Max length: 50; */
      globalLoginPassword?: string;
      /** @enum {string|null} */
      defaultBillingLevel: ("Detail" | "Summary") | null;
      managementItSetupType?: string;
      defaultLocation?: components["schemas"]["SystemLocationReference"];
      defaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      integratorLogin?: components["schemas"]["IntegratorLoginReference"];
      matchOnSerialNumberFlag?: boolean | null;
      disableNewCrossReferencesFlag?: boolean | null;
      configBillCustomerFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ManagedDevicesIntegrationCrossReference: {
      /** Format: int32 */
      id?: number;
      managedDevicesIntegration?: components["schemas"]["ManagedDevicesIntegrationReference"];
      /** @description  Max length: 255; */
      vendorType?: string;
      /** @description  Max length: 255; */
      vendorLevel?: string;
      agreementType?: components["schemas"]["AgreementTypeReference"];
      product?: components["schemas"]["IvItemReference"];
      configurationType?: components["schemas"]["ConfigurationTypeReference"];
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ManagedDevicesIntegrationInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      solution?: string;
      managementItSetupType?: string;
      _info?: { [key: string]: string };
    };
    ManagedDevicesIntegrationLogin: {
      /** Format: int32 */
      id?: number;
      managedDevicesIntegration?: components["schemas"]["ManagedDevicesIntegrationReference"];
      /** @description  Max length: 50; */
      username: string;
      /** @description  Max length: 50; */
      password?: string;
      member?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    ManagedDevicesIntegrationNotification: {
      /** Format: int32 */
      id?: number;
      managedDevicesIntegration?: components["schemas"]["ManagedDevicesIntegrationReference"];
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      member?: components["schemas"]["MemberReference"];
      /** @enum {string|null} */
      logType:
        | (
            | "All"
            | "Error"
            | "NewManagedSolution"
            | "NewDeviceType"
            | "NewConfiguration"
            | "NewAddition"
            | "Info"
          )
        | null;
      _info?: { [key: string]: string };
    };
    ManagedDevicesIntegrationReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ManagedInformation: {
      managementSolutionName?: string;
      managedIdentifier?: string;
      type?: string;
      level?: string;
      childConfigurationsMatchingOn?: string;
      inactivateConfigurationsMatchingOn?: string;
      /** Format: int32 */
      inactiveConfigurationStatusId?: number;
    };
    Management: {
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      runTime?: string;
      addedConfigurationStatus?: components["schemas"]["ConfigurationStatusReference"];
      deletedConfigurationStatus?: components["schemas"]["ConfigurationStatusReference"];
      integratorLogin?: components["schemas"]["IntegratorLoginReference"];
      scheduleExecutiveSummaryReportFlag: boolean | null;
      /**
       * Format: int32
       * @description This is only required when scheduleExecutiveSummaryReportFlag = true
       */
      executiveSummaryReportScheduleDay?: number | null;
      /**
       * Format: int32
       * @description This is only required when scheduleExecutiveSummaryReportFlag = true. Input should be in 24 hour format, ie 2pm is 14
       */
      executiveSummaryReportScheduleHour?: number | null;
      /**
       * Format: int32
       * @description This is only required when scheduleExecutiveSummaryReportFlag = true
       */
      executiveSummaryReportScheduleMinute?: number | null;
      _info?: { [key: string]: string };
    };
    ManagementBackup: {
      /** Format: int32 */
      id?: number;
      type?: components["schemas"]["AgreementTypeReference"];
      item?: components["schemas"]["CatalogItemReference"];
      /** @enum {string|null} */
      billingLevel: ("Detail" | "Summary") | null;
      _info?: { [key: string]: string };
    };
    ManagementItSolution: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      /** @enum {string|null} */
      managementItSolutionType:
        | ("LevelPlatforms" | "NAble" | "Continuum" | "Custom")
        | null;
      /** @description This is only required when managementItSolutionType is Custom Max length: 30; */
      managementSolutionName?: string;
      /** @description This is only required for Level Platforms Max length: 200; */
      managementServerUrl?: string;
      /** @description This is only required for Level Platforms when overrideWebServiceLocationFlag is true Max length: 200; */
      webserviceOverrideUrl?: string;
      /** @description This is only required for Level Platforms when overrideLoginLocationFlag is true Max length: 200; */
      portalOverrideLoginUrl?: string;
      globalLoginFlag?: boolean | null;
      /** @description This is only required when globalLoginFlag = true Max length: 50; */
      globalLoginUsername?: string;
      /** @description This is only required when globalLoginFlag = true Max length: 50; */
      globalLoginPassword?: string;
      usingSslFlag?: boolean | null;
      /** @description This is only required for N-Able solution Max length: 50; */
      nAbleUsername?: string;
      /** @description This is only required for N-Able solution Max length: 50; */
      nAblePassword?: string;
      overrideWebServiceLocationFlag?: boolean | null;
      overrideLoginLocationFlag?: boolean | null;
      /** @description This is only required for Continuum solution Max length: 100; */
      continuumApiUsername?: string;
      /** @description This is only required for Continuum solution Max length: 100; */
      continuumApiPassword?: string;
      /** @description This is only required for Level Platforms solution Max length: 100; */
      levelApiUsername?: string;
      /** @description This is only required for Level Platforms solution Max length: 100; */
      levelApiPassword?: string;
      /** @description This is only required for Level Platforms solution Max length: 100; */
      levelVarDomain?: string;
      noDisplayFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ManagementItSolutionAgreementInterfaceParameter: {
      /** Format: int32 */
      id?: number;
      managedDevicesIntegration?: components["schemas"]["ManagedDevicesIntegrationReference"];
      agreementType?: components["schemas"]["AgreementTypeReference"];
      serverProduct?: components["schemas"]["IvItemReference"];
      workstationProduct?: components["schemas"]["IvItemReference"];
      spamStatsProduct?: components["schemas"]["IvItemReference"];
      _info?: { [key: string]: string };
    };
    ManagementLogDocumentInfo: {
      fullPathFileName?: string;
      fileSize?: string;
    };
    ManagementNetworkSecurity: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      /** @description  Max length: 50; */
      username?: string;
      /** @description  Max length: 50; */
      password?: string;
      /** @description  Max length: 100; */
      site: string;
      _info?: { [key: string]: string };
    };
    ManagementReportNotification: {
      /** Format: int32 */
      id?: number;
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      member?: components["schemas"]["MemberReference"];
      /** @description  Max length: 50; */
      email?: string;
      globalFlag?: boolean | null;
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    ManagementReportSetup: {
      /** Format: int32 */
      id?: number;
      scheduledReportDisabledFlag: boolean;
      _info?: { [key: string]: string };
    };
    ManagementSolutionReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      setupName?: string;
      _info?: { [key: string]: string };
    };
    Manufacturer: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ManufacturerInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ManufacturerReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    MappedRecordReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
    };
    MappedType: {
      /** Format: int32 */
      id?: number;
      name?: string;
      table?: string;
      recIdField?: string;
      /** @enum {string|null} */
      glType?:
        | (
            | "AP"
            | "AR"
            | "EE"
            | "EI"
            | "EO"
            | "IA"
            | "IT"
            | "P"
            | "PF"
            | "R"
            | "RA"
            | "RD"
            | "RE"
            | "RP"
            | "ST"
            | "SD"
            | "ET"
            | "FT"
            | "PT"
          )
        | null;
      /** Format: int32 */
      sortOrder?: number;
    };
    MappedTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    MarketDescription: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      _info?: { [key: string]: string };
    };
    MarketDescriptionInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    MarketDescriptionReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    MarketingCompany: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      groupId?: number | null;
      defaultContactFlag?: boolean | null;
      allContactsFlag?: boolean | null;
      unsubscribeFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    MarketingContact: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      groupId?: number | null;
      /** @description  Max length: 50; */
      note?: string;
      unsubscribeFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    MarketplaceImport: {
      /** Format: int32 */
      id?: number;
      /** @enum {string} */
      marketplaceImportType?:
        | "Agreements"
        | "Configurations"
        | "CRMSurveys"
        | "CustomReports"
        | "CustomerPortalTypes"
        | "HTMLEmailTemplates"
        | "Products"
        | "ProjectBoards"
        | "ProjectTemplates"
        | "ReportWriterReports"
        | "ServiceBoards"
        | "TicketTemplates"
        | "Views";
      marketplaceObject?: unknown[];
      requiredFields?: string[];
    };
    Member: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 15; */
      identifier: string;
      /** @description ConditionallyRequired. API Member will get random password generated Max length: 60; */
      password?: string;
      /** @description  Max length: 30; */
      firstName: string;
      /** @description  Max length: 1; */
      middleInitial?: string;
      /** @description  Max length: 30; */
      lastName: string;
      /** @description  Max length: 50; */
      title?: string;
      reportCard?: components["schemas"]["ReportCardReference"];
      /**
       * @description F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
       * @enum {string|null}
       */
      licenseClass: ("A" | "C" | "F" | "X") | null;
      disableOnlineFlag?: boolean | null;
      enableMobileFlag?: boolean | null;
      type?: components["schemas"]["MemberTypeReference"];
      /** @description  Max length: 10; */
      employeeIdentifer?: string;
      vendorNumber?: string;
      notes?: string;
      timeZone?: components["schemas"]["TimeZoneSetupReference"];
      country?: components["schemas"]["CountryReference"];
      serviceBoardTeamIds?: number[];
      enableMobileGpsFlag?: boolean | null;
      /** Format: date-time */
      inactiveDate?: string;
      inactiveFlag?: boolean | null;
      lastLogin?: string;
      photo?: components["schemas"]["DocumentReference"];
      partnerPortalFlag?: boolean | null;
      clientId?: string;
      stsUserAdminUrl?: string;
      token?: string;
      toastNotificationFlag?: boolean | null;
      memberPersonas?: number[];
      office365?: components["schemas"]["MemberOffice365"];
      /** @description  Max length: 250; */
      officeEmail?: string;
      /** @description  Max length: 15; */
      officePhone?: string;
      /** @description  Max length: 10; */
      officeExtension?: string;
      /** @description  Max length: 250; */
      mobileEmail?: string;
      /** @description  Max length: 15; */
      mobilePhone?: string;
      /** @description  Max length: 10; */
      mobileExtension?: string;
      /** @description  Max length: 250; */
      homeEmail?: string;
      /** @description  Max length: 15; */
      homePhone?: string;
      /** @description  Max length: 10; */
      homeExtension?: string;
      /** @enum {string|null} */
      defaultEmail: ("Office" | "Mobile" | "Home") | null;
      /** @description  Max length: 250; */
      primaryEmail?: string;
      /** @enum {string|null} */
      defaultPhone: ("Office" | "Mobile" | "Home") | null;
      securityRole?: components["schemas"]["SecurityRoleReference"];
      adminFlag?: boolean | null;
      structureLevel?: components["schemas"]["StructureReference"];
      securityLocation?: components["schemas"]["SystemLocationReference"];
      defaultLocation?: components["schemas"]["SystemLocationReference"];
      defaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      reportsTo?: components["schemas"]["MemberReference"];
      restrictLocationFlag?: boolean | null;
      restrictDepartmentFlag?: boolean | null;
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      timeApprover?: components["schemas"]["MemberReference"];
      expenseApprover?: components["schemas"]["MemberReference"];
      /** Format: double */
      billableForecast?: number | null;
      /** Format: double */
      dailyCapacity?: number | null;
      /** Format: double */
      hourlyCost?: number | null;
      /** Format: double */
      hourlyRate?: number | null;
      includeInUtilizationReportingFlag?: boolean | null;
      requireExpenseEntryFlag?: boolean | null;
      requireTimeSheetEntryFlag?: boolean | null;
      requireStartAndEndTimeOnTimeEntryFlag?: boolean | null;
      allowInCellEntryOnTimeSheet?: boolean | null;
      enterTimeAgainstCompanyFlag?: boolean | null;
      allowExpensesEnteredAgainstCompaniesFlag?: boolean | null;
      timeReminderEmailFlag?: boolean | null;
      /** Format: int32 */
      daysTolerance?: number | null;
      /** Format: double */
      minimumHours?: number | null;
      /** Format: date-time */
      timeSheetStartDate?: string;
      /** Format: date-time */
      hireDate: string;
      serviceDefaultLocation?: components["schemas"]["SystemLocationReference"];
      serviceDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      serviceDefaultBoard?: components["schemas"]["BoardReference"];
      restrictServiceDefaultLocationFlag?: boolean | null;
      restrictServiceDefaultDepartmentFlag?: boolean | null;
      excludedServiceBoardIds?: number[];
      projectDefaultLocation?: components["schemas"]["SystemLocationReference"];
      projectDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      projectDefaultBoard?: components["schemas"]["ProjectBoardReference"];
      restrictProjectDefaultLocationFlag?: boolean | null;
      restrictProjectDefaultDepartmentFlag?: boolean | null;
      excludedProjectBoardIds?: number[];
      scheduleDefaultLocation?: components["schemas"]["SystemLocationReference"];
      scheduleDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      /** Format: double */
      scheduleCapacity?: number | null;
      serviceLocation?: components["schemas"]["ServiceLocationReference"];
      restrictScheduleFlag?: boolean | null;
      hideMemberInDispatchPortalFlag?: boolean | null;
      calendar?: components["schemas"]["CalendarReference"];
      salesDefaultLocation?: components["schemas"]["SystemLocationReference"];
      restrictDefaultSalesTerritoryFlag?: boolean | null;
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      restrictDefaultWarehouseFlag?: boolean | null;
      restrictDefaultWarehouseBinFlag?: boolean | null;
      mapiName?: string;
      calendarSyncIntegrationFlag?: boolean | null;
      enableLdapAuthenticationFlag?: boolean | null;
      ldapConfiguration?: components["schemas"]["LdapConfigurationReference"];
      /** @description  Max length: 50; */
      ldapUserName?: string;
      /** @enum {string|null} */
      companyActivityTabFormat: ("SummaryList" | "DetailList") | null;
      /** @enum {string|null} */
      invoiceTimeTabFormat: ("SummaryList" | "DetailList") | null;
      /** @enum {string|null} */
      invoiceScreenDefaultTabFormat:
        | ("ShowInvoicingTab" | "ShowAgreementInvoicingTab")
        | null;
      /** @enum {string|null} */
      invoicingDisplayOptions:
        | ("RemainOnInvoicingScreen" | "ShowRecentInvoices")
        | null;
      /** @enum {string|null} */
      agreementInvoicingDisplayOptions:
        | ("RemainOnInvoicingScreen" | "ShowRecentInvoices")
        | null;
      /** @enum {string|null} */
      authenticationServiceType?:
        | ("AuthAnvil" | "GoogleAuthenticator" | "Email")
        | null;
      timebasedOneTimePasswordActivated?: boolean | null;
      ssoSettings?: components["schemas"]["MemberSsoSettingsReference"];
      autoStartStopwatch?: boolean | null;
      autoPopupQuickNotesWithStopwatch?: boolean | null;
      signature?: string;
      /** @enum {string|null} */
      globalSearchDefaultTicketFilter?:
        | ("OpenRecords" | "ClosedRecords" | "AllRecords")
        | null;
      /** @enum {string|null} */
      globalSearchDefaultSort?:
        | (
            | "None"
            | "LastUpdatedDesc"
            | "LastUpdatedAsc"
            | "CreatedDesc"
            | "CreatedAsc"
          )
        | null;
      phoneSource?: string;
      /** @enum {string|null} */
      phoneIntegrationType?: ("TAPI" | "SKYPE" | "NONE") | null;
      useBrowserLanguageFlag?: boolean | null;
      _info?: { [key: string]: string };
      copyPodLayouts?: boolean;
      copySharedDefaultViews?: boolean;
      copyColumnLayoutsAndFilters?: boolean;
      /** Format: int32 */
      fromMemberRecId?: number;
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    MemberAccrual: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      accrualType: ("Holiday" | "PTO" | "Sick" | "Vacation") | null;
      /** Format: int32 */
      year: number | null;
      /** Format: double */
      hours: number | null;
      reason: string;
      member?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    MemberCertification: {
      /** Format: int32 */
      id?: number;
      certification: components["schemas"]["CertificationReference"];
      /** Format: int32 */
      percentComplete?: number | null;
      /** Format: date-time */
      dateReceived?: string;
      /** Format: date-time */
      dateExpires?: string;
      /** @description  Max length: 50; */
      certificationNumber?: string;
      notes?: string;
      member?: components["schemas"]["MemberReference"];
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    MemberDeactivation: {
      activity?: components["schemas"]["MemberDeactivationSalesActivity"];
      serviceTeam?: components["schemas"]["MemberDeactivationServiceTeam"];
      /** @description A list of customers for which the member holds a team role */
      companyTeam?: components["schemas"]["MemberDeactivationCompanyTeam"][];
      workflowEmail?: components["schemas"]["MemberDeactivationWorkflow"];
      serviceStatusWorkflow?: components["schemas"]["MemberDeactivationStatusWorkflow"][];
      ticketTemplate?: components["schemas"]["MemberDeactivationServiceTemplate"];
      opportunity?: components["schemas"]["MemberDeactivationOpportunity"];
      salesTeam?: components["schemas"]["MemberDeactivationSalesTeam"];
      projectManager?: components["schemas"]["MemberDeactivationProjectManager"];
      projectTimeApprover?: components["schemas"]["MemberDeactivationProjectManager"];
      projectExpenseApprover?: components["schemas"]["MemberDeactivationProjectManager"];
      knowledgeBaseArticle?: components["schemas"]["MemberDeactivationKnowledgebaseArticle"];
      myCompanyPresident?: components["schemas"]["MemberDeactivationMyCompanyPresidentRole"];
      myCompanyCOO?: components["schemas"]["MemberDeactivationMyCompanyCOORole"];
      myCompanyController?: components["schemas"]["MemberDeactivationMyCompanyControllerRole"];
      myCompanyDispatch?: components["schemas"]["MemberDeactivationMyCompanyDispatchRole"];
      myCompanyServiceManager?: components["schemas"]["MemberDeactivationMyCompanyServiceManagerRole"];
      myCompanyDutyManagerRole?: components["schemas"]["MemberDeactivationMyCompanyDutyManagerRole"];
      departmentManager?: components["schemas"]["MemberDeactivationDepartmentMananager"];
      dispatchMember?: components["schemas"]["MemberDeactivationDispatchMember"];
      serviceManager?: components["schemas"]["MemberDeactivationServiceManger"];
      dutyManager?: components["schemas"]["MemberDeactivationDutyManager"];
      sendFromEmailNotify?: components["schemas"]["MemberDeactivationSendFromEmailNotify"];
      /**
       * @description By default, this is set to false
       *             If there is any open timesheets, system will return error message
       *             that there is open timesheets still attached to this member
       *             If user would like to delete member with open timesheets, they can set this boolean to TRUE
       *             System will delete member and any associated open timesheets
       */
      deleteOpenTimeSheetsFlag?: boolean | null;
    };
    MemberDeactivationCompanyTeam: {
      /** Format: int32 */
      count?: number;
      /** Format: int32 */
      id?: number;
      name?: string;
      reAssignToMember?: components["schemas"]["MemberReference"];
      reAssignToContact?: components["schemas"]["ContactReference"];
    };
    MemberDeactivationDepartmentMananager: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationDispatchMember: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationDutyManager: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationKnowledgebaseArticle: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationMyCompanyControllerRole: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationMyCompanyCOORole: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationMyCompanyDispatchRole: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationMyCompanyDutyManagerRole: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationMyCompanyPresidentRole: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationMyCompanyServiceManagerRole: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationOpportunity: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationProjectManager: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationSalesActivity: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationSalesTeam: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationSendFromEmailNotify: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationServiceManger: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationServiceTeam: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationServiceTemplate: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationStatusWorkflow: {
      /** Format: int32 */
      count?: number;
      /** Format: int32 */
      id?: number;
      name?: string;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDeactivationWorkflow: {
      /** Format: int32 */
      count?: number;
      reAssignToMember?: components["schemas"]["MemberReference"];
    };
    MemberDelegation: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      delegationType: ("Approval" | "Project") | null;
      delegatedTo?: components["schemas"]["MemberReference"];
      /** Format: date-time */
      dateStart: string;
      /** Format: date-time */
      dateEnd: string;
      member?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    MemberInfo: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      firstName?: string;
      middleInitial?: string;
      lastName?: string;
      fullName?: string;
      defaultEmail?: string;
      photo?: components["schemas"]["DocumentReference"];
      /**
       * @description F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
       * @enum {string|null}
       */
      licenseClass?: ("A" | "C" | "F" | "X") | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    MemberLinkSsoUser: {
      /** @description  Max length: 100; */
      ssoUserId?: string;
    };
    MemberNotificationSetting: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      notificationType: ("Email" | "Push") | null;
      /** @enum {string|null} */
      notificationTrigger:
        | (
            | "ActivityStatusReq"
            | "CustomerUpdated"
            | "ExpenseReport"
            | "TicketStatusChange"
            | "TicketStatusRequest"
            | "TimeNagApprover"
            | "TimeNagMember"
            | "TimeSheet"
            | "WorkflowRules"
          )
        | null;
      _info?: { [key: string]: string };
    };
    MemberOffice365: {
      id?: string;
      name?: string;
    };
    MemberPersona: {
      /** Format: int32 */
      id?: number;
      name?: string;
      member?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    MemberReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    MemberSkill: {
      /** Format: int32 */
      id?: number;
      skill: components["schemas"]["SkillReference"];
      /** @enum {string|null} */
      skillLevel: ("Beginner" | "Intermediate" | "Advanced" | "Expert") | null;
      certifiedFlag?: boolean | null;
      /** Format: int32 */
      yearsExperience?: number | null;
      notes?: string;
      member?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    MemberSsoSettingsReference: {
      /** Format: int32 */
      id?: number | null;
      ssoUserId?: string;
      userName?: string;
      email?: string;
      _info?: { [key: string]: string };
    };
    MemberSsoToken: {
      token?: string;
    };
    MemberType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    MemberTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    MemberTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    MenuEntry: {
      /** Format: int32 */
      id?: number;
      menuLocation?: components["schemas"]["MenuLocationReference"];
      /** @description  Max length: 50; */
      caption: string;
      /** @description  Max length: 2000; */
      link: string;
      newWindowFlag: boolean | null;
      locationIds?: number[];
      /** @description  Max length: 2000; */
      origin?: string;
      /** @description Only required if not already set Max length: 36; */
      clientId?: string;
      addAllLocations?: boolean | null;
      removeAllLocations?: boolean | null;
      /** Format: int32 */
      smallMenuIconId?: number | null;
      /** Format: int32 */
      largeMenuIconId?: number | null;
      _info?: { [key: string]: string };
    };
    MenuEntryLocation: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      menuEntry?: components["schemas"]["SystemMenuEntryReference"];
      _info?: { [key: string]: string };
    };
    MenuLocationReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    MinimumStockByWarehouse: {
      /** Format: int32 */
      id?: number;
      warehouse: components["schemas"]["WarehouseReference"];
      /** Format: int32 */
      minimumStock: number | null;
      _info?: { [key: string]: string };
    };
    MyAccount: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 15; */
      identifier: string;
      /** @description ConditionallyRequired. API Member will get random password generated Max length: 60; */
      password?: string;
      /** @description  Max length: 30; */
      firstName: string;
      /** @description  Max length: 1; */
      middleInitial?: string;
      /** @description  Max length: 30; */
      lastName: string;
      /** @description  Max length: 50; */
      title?: string;
      reportCard?: components["schemas"]["ReportCardReference"];
      /**
       * @description F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
       * @enum {string|null}
       */
      licenseClass: ("A" | "C" | "F" | "X") | null;
      disableOnlineFlag?: boolean | null;
      enableMobileFlag?: boolean | null;
      type?: components["schemas"]["MemberTypeReference"];
      /** @description  Max length: 10; */
      employeeIdentifer?: string;
      vendorNumber?: string;
      notes?: string;
      timeZone?: components["schemas"]["TimeZoneSetupReference"];
      country?: components["schemas"]["CountryReference"];
      serviceBoardTeamIds?: number[];
      enableMobileGpsFlag?: boolean | null;
      /** Format: date-time */
      inactiveDate?: string;
      inactiveFlag?: boolean | null;
      lastLogin?: string;
      photo?: components["schemas"]["DocumentReference"];
      partnerPortalFlag?: boolean | null;
      clientId?: string;
      stsUserAdminUrl?: string;
      token?: string;
      toastNotificationFlag?: boolean | null;
      memberPersonas?: number[];
      office365?: components["schemas"]["MemberOffice365"];
      /** @description  Max length: 250; */
      officeEmail?: string;
      /** @description  Max length: 15; */
      officePhone?: string;
      /** @description  Max length: 10; */
      officeExtension?: string;
      /** @description  Max length: 250; */
      mobileEmail?: string;
      /** @description  Max length: 15; */
      mobilePhone?: string;
      /** @description  Max length: 10; */
      mobileExtension?: string;
      /** @description  Max length: 250; */
      homeEmail?: string;
      /** @description  Max length: 15; */
      homePhone?: string;
      /** @description  Max length: 10; */
      homeExtension?: string;
      /** @enum {string|null} */
      defaultEmail: ("Office" | "Mobile" | "Home") | null;
      /** @description  Max length: 250; */
      primaryEmail?: string;
      /** @enum {string|null} */
      defaultPhone: ("Office" | "Mobile" | "Home") | null;
      defaultLocation?: components["schemas"]["SystemLocationReference"];
      defaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      reportsTo?: components["schemas"]["MemberReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      timeApprover?: components["schemas"]["MemberReference"];
      expenseApprover?: components["schemas"]["MemberReference"];
      /** Format: double */
      billableForecast?: number | null;
      /** Format: double */
      dailyCapacity?: number | null;
      includeInUtilizationReportingFlag?: boolean | null;
      requireExpenseEntryFlag?: boolean | null;
      requireTimeSheetEntryFlag?: boolean | null;
      requireStartAndEndTimeOnTimeEntryFlag?: boolean | null;
      allowInCellEntryOnTimeSheet?: boolean | null;
      enterTimeAgainstCompanyFlag?: boolean | null;
      allowExpensesEnteredAgainstCompaniesFlag?: boolean | null;
      timeReminderEmailFlag?: boolean | null;
      /** Format: int32 */
      daysTolerance?: number | null;
      /** Format: double */
      minimumHours?: number | null;
      /** Format: date-time */
      timeSheetStartDate?: string;
      /** Format: date-time */
      hireDate: string;
      serviceDefaultLocation?: components["schemas"]["SystemLocationReference"];
      serviceDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      serviceDefaultBoard?: components["schemas"]["BoardReference"];
      projectDefaultLocation?: components["schemas"]["SystemLocationReference"];
      projectDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      projectDefaultBoard?: components["schemas"]["ProjectBoardReference"];
      scheduleDefaultLocation?: components["schemas"]["SystemLocationReference"];
      scheduleDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      /** Format: double */
      scheduleCapacity?: number | null;
      serviceLocation?: components["schemas"]["ServiceLocationReference"];
      hideMemberInDispatchPortalFlag?: boolean | null;
      calendar?: components["schemas"]["CalendarReference"];
      salesDefaultLocation?: components["schemas"]["SystemLocationReference"];
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      mapiName?: string;
      calendarSyncIntegrationFlag?: boolean | null;
      /** @enum {string|null} */
      companyActivityTabFormat: ("SummaryList" | "DetailList") | null;
      /** @enum {string|null} */
      invoiceTimeTabFormat: ("SummaryList" | "DetailList") | null;
      /** @enum {string|null} */
      invoiceScreenDefaultTabFormat:
        | ("ShowInvoicingTab" | "ShowAgreementInvoicingTab")
        | null;
      /** @enum {string|null} */
      invoicingDisplayOptions:
        | ("RemainOnInvoicingScreen" | "ShowRecentInvoices")
        | null;
      /** @enum {string|null} */
      agreementInvoicingDisplayOptions:
        | ("RemainOnInvoicingScreen" | "ShowRecentInvoices")
        | null;
      /** @enum {string|null} */
      authenticationServiceType?:
        | ("AuthAnvil" | "GoogleAuthenticator" | "Email")
        | null;
      timebasedOneTimePasswordActivated?: boolean | null;
      autoStartStopwatch?: boolean | null;
      autoPopupQuickNotesWithStopwatch?: boolean | null;
      signature?: string;
      /** @enum {string|null} */
      globalSearchDefaultTicketFilter?:
        | ("OpenRecords" | "ClosedRecords" | "AllRecords")
        | null;
      /** @enum {string|null} */
      globalSearchDefaultSort?:
        | (
            | "None"
            | "LastUpdatedDesc"
            | "LastUpdatedAsc"
            | "CreatedDesc"
            | "CreatedAsc"
          )
        | null;
      phoneSource?: string;
      /** @enum {string|null} */
      phoneIntegrationType?: ("TAPI" | "SKYPE" | "NONE") | null;
      useBrowserLanguageFlag?: boolean | null;
      _info?: { [key: string]: string };
      copyPodLayouts?: boolean;
      copySharedDefaultViews?: boolean;
      copyColumnLayoutsAndFilters?: boolean;
      /** Format: int32 */
      fromMemberRecId?: number;
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    MyMember: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      /** @description ConditionallyRequired. API Member will get random password generated */
      password?: string;
      firstName?: string;
      middleInitial?: string;
      lastName?: string;
      title?: string;
      reportCard?: components["schemas"]["ReportCardReference"];
      /**
       * @description F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
       * @enum {string|null}
       */
      licenseClass?: ("A" | "C" | "F" | "X") | null;
      disableOnlineFlag?: boolean | null;
      enableMobileFlag?: boolean | null;
      type?: components["schemas"]["MemberTypeReference"];
      employeeIdentifer?: string;
      vendorNumber?: string;
      notes?: string;
      timeZone?: components["schemas"]["TimeZoneSetupReference"];
      country?: components["schemas"]["CountryReference"];
      serviceBoardTeamIds?: number[];
      enableMobileGpsFlag?: boolean | null;
      inactiveDate?: string;
      inactiveFlag?: boolean | null;
      lastLogin?: string;
      photo?: components["schemas"]["DocumentReference"];
      toastNotificationFlag?: boolean | null;
      officeEmail?: string;
      officePhone?: string;
      officeExtension?: string;
      mobileEmail?: string;
      mobilePhone?: string;
      mobileExtension?: string;
      homeEmail?: string;
      homePhone?: string;
      homeExtension?: string;
      /** @enum {string|null} */
      defaultEmail?: ("Office" | "Mobile" | "Home") | null;
      /** @enum {string|null} */
      defaultPhone?: ("Office" | "Mobile" | "Home") | null;
      securityRole?: components["schemas"]["SecurityRoleReference"];
      adminFlag?: boolean | null;
      structureLevel?: components["schemas"]["StructureReference"];
      securityLocation?: components["schemas"]["SystemLocationReference"];
      defaultLocation?: components["schemas"]["SystemLocationReference"];
      defaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      reportsTo?: components["schemas"]["MemberReference"];
      restrictLocationFlag?: boolean | null;
      restrictDepartmentFlag?: boolean | null;
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      timeApprover?: components["schemas"]["MemberReference"];
      expenseApprover?: components["schemas"]["MemberReference"];
      /** Format: double */
      billableForecast?: number | null;
      /** Format: double */
      dailyCapacity?: number | null;
      /** Format: double */
      hourlyCost?: number | null;
      /** Format: double */
      hourlyRate?: number | null;
      includeInUtilizationReportingFlag?: boolean | null;
      requireExpenseEntryFlag?: boolean | null;
      requireTimeSheetEntryFlag?: boolean | null;
      requireStartAndEndTimeOnTimeEntryFlag?: boolean | null;
      allowInCellEntryOnTimeSheet?: boolean | null;
      enterTimeAgainstCompanyFlag?: boolean | null;
      allowExpensesEnteredAgainstCompaniesFlag?: boolean | null;
      timeReminderEmailFlag?: boolean | null;
      /** Format: int32 */
      daysTolerance?: number | null;
      /** Format: double */
      minimumHours?: number | null;
      timeSheetStartDate?: string;
      hireDate?: string;
      serviceDefaultLocation?: components["schemas"]["SystemLocationReference"];
      serviceDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      serviceDefaultBoard?: components["schemas"]["BoardReference"];
      restrictServiceDefaultLocationFlag?: boolean | null;
      restrictServiceDefaultDepartmentFlag?: boolean | null;
      excludedServiceBoardIds?: number[];
      projectDefaultLocation?: components["schemas"]["SystemLocationReference"];
      projectDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      projectDefaultBoard?: components["schemas"]["ProjectBoardReference"];
      restrictProjectDefaultLocationFlag?: boolean | null;
      restrictProjectDefaultDepartmentFlag?: boolean | null;
      excludedProjectBoardIds?: number[];
      scheduleDefaultLocation?: components["schemas"]["SystemLocationReference"];
      scheduleDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      /** Format: double */
      scheduleCapacity?: number | null;
      serviceLocation?: components["schemas"]["ServiceLocationReference"];
      restrictScheduleFlag?: boolean | null;
      hideMemberInDispatchPortalFlag?: boolean | null;
      calendar?: components["schemas"]["CalendarReference"];
      salesDefaultLocation?: components["schemas"]["SystemLocationReference"];
      restrictDefaultSalesTerritoryFlag?: boolean | null;
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      restrictDefaultWarehouseFlag?: boolean | null;
      restrictDefaultWarehouseBinFlag?: boolean | null;
      mapiName?: string;
      calendarSyncIntegrationFlag?: boolean | null;
      enableLdapAuthenticationFlag?: boolean | null;
      ldapConfiguration?: components["schemas"]["LdapConfigurationReference"];
      ldapUserName?: string;
      /** @enum {string|null} */
      companyActivityTabFormat?: ("SummaryList" | "DetailList") | null;
      /** @enum {string|null} */
      invoiceTimeTabFormat?: ("SummaryList" | "DetailList") | null;
      /** @enum {string|null} */
      invoiceScreenDefaultTabFormat?:
        | ("ShowInvoicingTab" | "ShowAgreementInvoicingTab")
        | null;
      /** @enum {string|null} */
      invoicingDisplayOptions?:
        | ("RemainOnInvoicingScreen" | "ShowRecentInvoices")
        | null;
      /** @enum {string|null} */
      agreementInvoicingDisplayOptions?:
        | ("RemainOnInvoicingScreen" | "ShowRecentInvoices")
        | null;
      corelyticsUsername?: string;
      corelyticsPassword?: string;
      /** @enum {string|null} */
      authenticationServiceType?:
        | ("AuthAnvil" | "GoogleAuthenticator" | "Email")
        | null;
      timebasedOneTimePasswordActivated?: boolean | null;
      ssoSessionFlag?: boolean | null;
      ssoClientId?: string;
      _info?: { [key: string]: string };
    };
    MyMemberInfo: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      firstName?: string;
      middleInitial?: string;
      lastName?: string;
      fullName?: string;
      defaultEmail?: string;
      photo?: components["schemas"]["DocumentReference"];
      /**
       * @description F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
       * @enum {string|null}
       */
      licenseClass?: ("A" | "C" | "F" | "X") | null;
      inactiveFlag?: boolean | null;
      timeZone?: components["schemas"]["TimeZoneSetupReference"];
      useBrowserLanguageFlag?: boolean | null;
      defaultLocation?: components["schemas"]["SystemLocationReference"];
      defaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      /** Format: double */
      dailyCapacity?: number | null;
      requireExpenseEntryFlag?: boolean | null;
      requireTimeSheetEntryFlag?: boolean | null;
      requireStartAndEndTimeOnTimeEntryFlag?: boolean | null;
      enterTimeAgainstCompanyFlag?: boolean | null;
      allowExpensesEnteredAgainstCompaniesFlag?: boolean | null;
      serviceDefaultBoard?: components["schemas"]["BoardReference"];
      serviceDefaultLocation?: components["schemas"]["SystemLocationReference"];
      serviceDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      restrictServiceDefaultLocationFlag?: boolean | null;
      restrictServiceDefaultDepartmentFlag?: boolean | null;
      excludedServiceBoardIds?: number[];
      projectDefaultLocation?: components["schemas"]["SystemLocationReference"];
      projectDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      projectDefaultBoard?: components["schemas"]["ProjectBoardReference"];
      restrictProjectDefaultLocationFlag?: boolean | null;
      restrictProjectDefaultDepartmentFlag?: boolean | null;
      excludedProjectBoardIds?: number[];
      scheduleDefaultLocation?: components["schemas"]["SystemLocationReference"];
      scheduleDefaultDepartment?: components["schemas"]["SystemDepartmentReference"];
      /** Format: double */
      scheduleCapacity?: number | null;
      serviceLocation?: components["schemas"]["ServiceLocationReference"];
      salesDefaultLocation?: components["schemas"]["SystemLocationReference"];
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      restrictDefaultWarehouseFlag?: boolean | null;
      restrictDefaultWarehouseBinFlag?: boolean | null;
      ssoSessionFlag?: boolean | null;
      ssoClientId?: string;
      _info?: { [key: string]: string };
    };
    MySecurity: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      addLevel?: ("None" | "My" | "All") | null;
      /** @enum {string|null} */
      editLevel?: ("None" | "My" | "All") | null;
      /** @enum {string|null} */
      deleteLevel?: ("None" | "My" | "All") | null;
      /** @enum {string|null} */
      inquireLevel?: ("None" | "My" | "All") | null;
      moduleFunctionName?: string;
      moduleFunctionDescription?: string;
      myAllFlag?: boolean | null;
      moduleFunctionIdentifier?: string;
      reportFlag?: boolean | null;
      restrictFlag?: boolean | null;
      customFlag?: boolean | null;
      moduleDescription?: string;
      moduleIdentifier?: string;
      moduleName?: string;
      /** Format: int32 */
      sortOrder?: number | null;
      member?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    MySecurityCustomizeItem: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      customizeIdentifier?:
        | (
            | "CompanyReports"
            | "FinanceReports"
            | "MarketingReports"
            | "ProcurementReports"
            | "ProjectReports"
            | "SalesReports"
            | "ServiceReports"
            | "SystemReports"
            | "TimeAndExpenseReports"
            | "CompanyConfigurations"
            | "FinanceAgreements"
            | "ProjectScheduling"
            | "ServiceResourceScheduling"
            | "SystemManageHostedApi"
            | "SystemMyAccount"
            | "SystemCustomMenuEntry"
            | "SystemMassMaintenance"
            | "SystemTableSetup"
          )
        | null;
      itemIdentifier?: string;
    };
    NoteTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    NotificationRecipient: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      name?: string;
      externalFlag?: boolean | null;
      serviceFlag?: boolean | null;
      salesFlag?: boolean | null;
      invoiceFlag?: boolean | null;
      agreementFlag?: boolean | null;
      memberFlag?: boolean | null;
      configFlag?: boolean | null;
      mspFlag?: boolean | null;
      trackFlag?: boolean | null;
      projectFlag?: boolean | null;
      procurementFlag?: boolean | null;
      knowledgeBaseFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    NotificationRecipientReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    NotifyTypeReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    Office365EmailSetup: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 200; */
      name: string;
      /** @description  Max length: 100; */
      username: string;
      /** @description  Max length: 40; */
      inboxFolder: string;
      /** @description  Max length: 40; */
      processedFolder: string;
      /** @description  Max length: 40; */
      failedFolder: string;
      /** @description  Max length: 36; */
      tenantId?: string;
      /** @description  Max length: 36; */
      clientId?: string;
      /** @description  Max length: 4000; */
      clientSecret?: string;
      authorizedFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      emailConnector?: components["schemas"]["EmailConnectorReference"];
      _info?: { [key: string]: string };
    };
    Office365EmailSetupReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OnHandSerialNumber: {
      /** Format: int32 */
      id?: number;
      serial?: string;
      catalogItem?: components["schemas"]["CatalogItemReference"];
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      _info?: { [key: string]: string };
    };
    OnHandSerialNumberReference: {
      /** Format: int32 */
      id?: number | null;
      serialNumber?: string;
      _info?: { [key: string]: string };
    };
    OpenRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    Opportunity: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      name: string;
      /**
       * Format: date-time
       * @description  Required On Updates;
       */
      expectedCloseDate?: string;
      type?: components["schemas"]["OpportunityTypeReference"];
      stage?: components["schemas"]["OpportunityStageReference"];
      status?: components["schemas"]["OpportunityStatusReference"];
      priority?: components["schemas"]["OpportunityPriorityReference"];
      notes?: string;
      probability?: components["schemas"]["OpportunityProbabilityReference"];
      /** @description  Max length: 50; */
      source?: string;
      rating?: components["schemas"]["OpportunityRatingReference"];
      campaign?: components["schemas"]["CampaignReference"];
      primarySalesRep?: components["schemas"]["MemberReference"];
      secondarySalesRep?: components["schemas"]["MemberReference"];
      /**
       * Format: int32
       * @description  Required On Updates;
       */
      locationId?: number | null;
      /**
       * Format: int32
       * @description  Required On Updates;
       */
      businessUnitId?: number | null;
      company?: components["schemas"]["CompanyReference"];
      contact?: components["schemas"]["ContactReference"];
      site?: components["schemas"]["SiteReference"];
      /** @description  Max length: 25; */
      customerPO?: string;
      /** Format: date-time */
      pipelineChangeDate?: string;
      /** Format: date-time */
      dateBecameLead?: string;
      /** Format: date-time */
      closedDate?: string;
      closedBy?: components["schemas"]["MemberReference"];
      /** Format: double */
      totalSalesTax?: number | null;
      shipToCompany?: components["schemas"]["CompanyReference"];
      shipToContact?: components["schemas"]["ContactReference"];
      shipToSite?: components["schemas"]["SiteReference"];
      billToCompany?: components["schemas"]["CompanyReference"];
      billToContact?: components["schemas"]["ContactReference"];
      billToSite?: components["schemas"]["SiteReference"];
      billingTerms?: components["schemas"]["BillingTermsReference"];
      taxCode?: components["schemas"]["TaxCodeReference"];
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: int32 */
      companyLocationId?: number | null;
      technicalContact?: components["schemas"]["ContactReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    OpportunityContact: {
      /** Format: int32 */
      id?: number;
      contact?: components["schemas"]["ContactReference"];
      company?: components["schemas"]["CompanyReference"];
      role?: components["schemas"]["OpportunitySalesRoleReference"];
      notes?: string;
      referralFlag?: boolean | null;
      /** Format: int32 */
      opportunityId?: number | null;
      phoneNumber?: string;
      emailAddress?: string;
      _info?: { [key: string]: string };
    };
    OpportunityNote: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      opportunityId?: number | null;
      type?: components["schemas"]["NoteTypeReference"];
      text: string;
      flagged?: boolean | null;
      enteredBy?: string;
      /** Format: uuid */
      mobileGuid?: string | null;
      _info?: { [key: string]: string };
    };
    OpportunityPriorityReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OpportunityProbabilityReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OpportunityRating: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** Format: int32 */
      sortOrder?: number | null;
      _info?: { [key: string]: string };
    };
    OpportunityRatingInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      sortOrder?: number | null;
      _info?: { [key: string]: string };
    };
    OpportunityRatingReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OpportunityReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OpportunitySalesRoleReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OpportunityStage: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      probability?: components["schemas"]["OpportunityProbabilityReference"];
      /** @description  Max length: 25; */
      color?: string;
      /** Format: int32 */
      sequenceNumber?: number | null;
      _info?: { [key: string]: string };
    };
    OpportunityStageInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      probability?: components["schemas"]["OpportunityProbabilityReference"];
      color?: string;
      /** Format: int32 */
      sequenceNumber?: number | null;
      _info?: { [key: string]: string };
    };
    OpportunityStageReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OpportunityStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      wonFlag?: boolean | null;
      lostFlag?: boolean | null;
      closedFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
      enteredBy?: string;
      /** Format: date-time */
      dateEntered?: string;
    };
    OpportunityStatusInfo: {
      /** Format: int32 */
      id?: number;
      closedFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OpportunityStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OpportunityToAgreementConversion: {
      /** Format: int32 */
      agreementId?: number;
      name?: string;
      type?: components["schemas"]["AgreementTypeReference"];
      startDate?: string;
      endDate?: string;
      noEndingDateFlag?: boolean | null;
      /** Format: int32 */
      billCycleId?: number | null;
      billOneTimeFlag?: boolean | null;
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      includeAllNotesFlag?: boolean | null;
      includeAllDocumentsFlag?: boolean | null;
      includeAllProductsFlag?: boolean | null;
      includeNoteIds?: number[];
      includeDocumentIds?: number[];
      includeProductIds?: number[];
    };
    OpportunityToProjectConversion: {
      /** Format: int32 */
      projectId?: number;
      name?: string;
      status?: components["schemas"]["ProjectStatusReference"];
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      board?: components["schemas"]["ProjectBoardReference"];
      manager?: components["schemas"]["MemberReference"];
      estimatedStart?: string;
      estimatedEnd?: string;
      includeAllNotesFlag?: boolean | null;
      includeAllDocumentsFlag?: boolean | null;
      includeAllProductsFlag?: boolean | null;
      includeNoteIds?: number[];
      includeDocumentIds?: number[];
      includeProductIds?: number[];
    };
    OpportunityToSalesOrderConversion: {
      /** Format: int32 */
      salesOrderId?: number;
      name?: string;
      includeAllNotesFlag?: boolean | null;
      includeAllDocumentsFlag?: boolean | null;
      includeAllProductsFlag?: boolean | null;
      includeNoteIds?: number[];
      includeDocumentIds?: number[];
      includeProductIds?: number[];
    };
    OpportunityToServiceTicketConversion: {
      /** Format: int32 */
      ticketId?: number;
      summary?: string;
      includeAllNotesFlag?: boolean | null;
      includeAllDocumentsFlag?: boolean | null;
      includeAllProductsFlag?: boolean | null;
      includeNoteIds?: number[];
      includeDocumentIds?: number[];
      includeProductIds?: number[];
    };
    OpportunityType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      description: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    OpportunityTypeInfo: {
      /** Format: int32 */
      id?: number;
      description?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    OpportunityTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Order: {
      /** Format: int32 */
      id?: number;
      company?: components["schemas"]["CompanyReference"];
      contact?: components["schemas"]["ContactReference"];
      phone?: string;
      phoneExt?: string;
      email?: string;
      site?: components["schemas"]["SiteReference"];
      status?: components["schemas"]["OrderStatusReference"];
      opportunity?: components["schemas"]["OpportunityReference"];
      /** Format: date-time */
      orderDate?: string;
      /** Format: date-time */
      dueDate?: string;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      taxCode?: components["schemas"]["TaxCodeReference"];
      /** @description  Max length: 50; */
      poNumber?: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      salesRep?: components["schemas"]["MemberReference"];
      notes?: string;
      billClosedFlag?: boolean | null;
      billShippedFlag?: boolean | null;
      restrictDownpaymentFlag?: boolean | null;
      description?: string;
      topCommentFlag?: boolean | null;
      bottomCommentFlag?: boolean | null;
      shipToCompany?: components["schemas"]["CompanyReference"];
      shipToContact?: components["schemas"]["ContactReference"];
      shipToSite?: components["schemas"]["SiteReference"];
      billToCompany?: components["schemas"]["CompanyReference"];
      billToContact?: components["schemas"]["ContactReference"];
      billToSite?: components["schemas"]["SiteReference"];
      productIds?: number[];
      documentIds?: number[];
      invoiceIds?: number[];
      configIds?: number[];
      /** Format: double */
      total?: number | null;
      /** Format: double */
      taxTotal?: number | null;
      currency?: components["schemas"]["CurrencyReference"];
      companyLocation?: components["schemas"]["SystemLocationReference"];
      /** Format: double */
      subTotal?: number;
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    OrderStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      /** Format: int32 */
      sortOrder?: number | null;
      closedFlag?: boolean | null;
      emailTemplate?: components["schemas"]["OrderStatusEmailTemplateReference"];
      _info?: { [key: string]: string };
    };
    OrderStatusEmailTemplate: {
      /** Format: int32 */
      id?: number;
      status?: components["schemas"]["OrderStatusReference"];
      useSenderFlag?: boolean | null;
      /** @description  Max length: 100; */
      firstName?: string;
      /** @description  Max length: 100; */
      lastName?: string;
      /** @description  Max length: 100; */
      emailAddress?: string;
      /** @description  Max length: 200; */
      subject: string;
      body: string;
      copySenderFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    OrderStatusEmailTemplateReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OrderStatusInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    OrderStatusNotification: {
      /** Format: int32 */
      id?: number;
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      status?: components["schemas"]["OrderStatusReference"];
      member?: components["schemas"]["MemberReference"];
      /** @description Order Status Notification sendEmail must be entered if the notify type is "Email Address" Max length: 50; */
      email?: string;
      /** Format: int32 */
      workflowStep?: number | null;
      _info?: { [key: string]: string };
    };
    OrderStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    OsGradeWeight: {
      /** Format: int32 */
      id?: number;
      /** Format: double */
      osGradeWeight?: number;
      osName?: string;
      _info?: { [key: string]: string };
    };
    Other: {
      /** Format: int32 */
      id?: number;
      defaultLdap?: components["schemas"]["LdapConfigurationReference"];
      /** @description  Max length: 50; */
      defaultFromAddress: string;
      /** @description  Max length: 100; */
      portalUrlOverride: string;
      /** @description  Max length: 100; */
      siteUrl: string;
      /** @description  Max length: 200; */
      logoPath?: string;
      /** @enum {string|null} */
      contactSync?: ("FL" | "LF" | "CFL" | "CLF") | null;
      serverTimeZone?: components["schemas"]["TimeZoneSetupReference"];
      defaultCalendar?: components["schemas"]["CalendarReference"];
      defaultAddressFormat?: components["schemas"]["AddressFormatReference"];
      useSslFlag?: boolean | null;
      syncLeadsFlag?: boolean | null;
      includePortalLinkFlag?: boolean | null;
      useExpandedFormatTimeFlag?: boolean | null;
      useExpandedFormatActivityFlag?: boolean | null;
      disableZAdminLoginFlag?: boolean | null;
      locale?: components["schemas"]["LocaleReference"];
      /** @description If true, all Members time zone will also be set to serverTimeZone. Otherwise, only My Company time zone will be updated. */
      updateMemberTimeZonesFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    Other1RevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    Other2RevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    OwnershipType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 200; */
      name: string;
      _info?: { [key: string]: string };
    };
    OwnershipTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    OwnershipTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    PageValues: {
      /** Format: int32 */
      page?: number | null;
      /** Format: int32 */
      pageSize?: number | null;
      /** Format: int32 */
      pageId?: number | null;
    };
    ParsingType: {
      /** Format: int32 */
      id?: number;
      name?: string;
      parseRule?: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ParsingVariable: {
      /** Format: int32 */
      id?: number;
      name?: string;
      code?: string;
      _info?: { [key: string]: string };
    };
    PatchOperation: {
      op?: string;
      path?: string;
      value?: { [key: string]: unknown };
    };
    Payment: {
      /** Format: int32 */
      id?: number;
      type?: string;
      invoice?: components["schemas"]["InvoiceReference"];
      credit?: components["schemas"]["InvoiceReference"];
      /** Format: double */
      amount?: number | null;
      /** Format: date-time */
      paymentDate?: string;
      appliedBy?: string;
      _info?: { [key: string]: string };
    };
    PaymentMethodReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    PaymentType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      classification?: components["schemas"]["ClassificationReference"];
      defaultFlag?: boolean | null;
      companyFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    PaymentTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    PersonasInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
    };
    PhaseStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      collapsedFlag?: boolean | null;
      closedFlag?: boolean | null;
      boardAssociationIds?: number[];
      statusIndicator?: components["schemas"]["StatusIndicatorReference"];
      /** @description Required when statusIndicator is Custom Max length: 30; */
      customStatusIndicatorName?: string;
      _info?: { [key: string]: string };
    };
    PhaseStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    PortalCalendar: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      weekStart:
        | (
            | "Sunday"
            | "Monday"
            | "Tuesday"
            | "Wednesday"
            | "Thursday"
            | "Friday"
            | "Saturday"
          )
        | null;
      adjust1Start?: string;
      adjust1End?: string;
      /** Format: double */
      adjust1Hours?: number | null;
      adjust2Start?: string;
      adjust2End?: string;
      /** Format: double */
      adjust2Hours?: number | null;
      adjust3Start?: string;
      adjust3End?: string;
      /** Format: double */
      adjust3Hours?: number | null;
      _info?: { [key: string]: string };
    };
    PortalConfiguration: {
      /**
       * Format: int32
       * @description An existing Portal Configuration id is required when copying a Portal Configuration.
       */
      id?: number;
      /** @description  Max length: 150; */
      name: string;
      defaultFlag?: boolean | null;
      company?: components["schemas"]["CompanyReference"];
      /** @description  Max length: 7; */
      loginBackgroundColor?: string;
      /** @description  Max length: 7; */
      portalBackgroundColor?: string;
      /** @description  Max length: 7; */
      menuColor?: string;
      /** @description  Max length: 7; */
      buttonColor?: string;
      /** @description  Max length: 7; */
      headerColor?: string;
      /** @description  Max length: 1000; */
      url?: string;
      /** @enum {string|null} */
      language?:
        | (
            | "English"
            | "Spanish"
            | "French"
            | "British"
            | "Australian"
            | "BrazilianPortuguese"
            | "CanadianFrench"
            | "German"
            | "NewZealand"
            | "Dutch"
          )
        | null;
      /** @description  Max length: 4000; */
      welcomeText?: string;
      boardIds?: number[];
      agreementTypeIds?: number[];
      configTypeIds?: number[];
      locationIds?: number[];
      portalImageCopySuccessFlag?: boolean | null;
      displayVendorFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    PortalConfigurationInvoiceSetup: {
      /** Format: int32 */
      id?: number;
      portalConfiguration?: components["schemas"]["PortalConfigurationReference"];
      displayInvPmtFlag?: boolean | null;
      allowInvPmtFlag?: boolean | null;
      location?: components["schemas"]["SystemLocationReference"];
      paymentProcessor?: components["schemas"]["PortalConfigurationPaymentProcessorReference"];
      login?: string;
      password?: string;
      urlOverride?: string;
      billingStatusIds?: number[];
      addAllStatuses?: boolean | null;
      removeAllStatuses?: boolean | null;
      _info?: { [key: string]: string };
    };
    PortalConfigurationOpportunitySetup: {
      /** Format: int32 */
      id?: number;
      opportunityStatusRecIDs?: number[];
      addAllOpportunityStatuses?: boolean | null;
      removeAllOpportunityStatuses?: boolean | null;
      opportunityTypeRecIDs?: number[];
      addAllOpportunityTypes?: boolean | null;
      removeAllOpportunityTypes?: boolean | null;
      restrictViewByOpportunityStatusFlag?: boolean | null;
      restrictViewByOpportunityTypeFlag?: boolean | null;
      acceptanceChangeStatusFlag?: boolean | null;
      acceptanceCreateActivityFlag?: boolean | null;
      acceptanceOpportunityStatus?: components["schemas"]["OpportunityStatusReference"];
      acceptanceSendEmailFlag?: boolean | null;
      acceptanceEmailFromFirstName?: string;
      acceptanceEmailFromLastName?: string;
      acceptanceEmailSubject?: string;
      acceptanceEmailBody?: string;
      /** @description Required when acceptanceSendEmailFlag is true */
      acceptanceFromEmail?: string;
      acceptanceEmailActivityType?: components["schemas"]["ActivityTypeReference"];
      acceptanceEmailAssignedByMember?: components["schemas"]["MemberReference"];
      rejectionChangeStatusFlag?: boolean | null;
      rejectionCreateActivityFlag?: boolean | null;
      rejectionOpportunityStatus?: components["schemas"]["OpportunityStatusReference"];
      rejectionSendEmailFlag?: boolean | null;
      rejectionEmailFromFirstName?: string;
      rejectionEmailFromLastName?: string;
      /** @description Required when rejectionSendEmailFlag is true */
      rejectionFromEmail?: string;
      rejectionEmailSubject?: string;
      rejectionEmailBody?: string;
      rejectionEmailActivityType?: components["schemas"]["ActivityTypeReference"];
      rejectionEmailAssignedByMember?: components["schemas"]["MemberReference"];
      confirmationSendEmailFlag?: boolean | null;
      confirmationEmailUseDefaultCompanyEmailAddressFlag?: boolean | null;
      confirmationEmailFromFirstName?: string;
      confirmationEmailFromLastName?: string;
      /** @description Required when confirmationSendEmailFlag is true */
      confirmationFromEmail?: string;
      confirmationEmailSubject?: string;
      confirmationEmailBody?: string;
      _info?: { [key: string]: string };
    };
    PortalConfigurationPasswordEmailSetup: {
      /** Format: int32 */
      id?: number;
      validPasswordEmailUseCustomEmailFlag?: boolean | null;
      validPasswordEmailFromFirstName?: string;
      validPasswordEmailFromLastName?: string;
      /** @description Required when validPasswordEmailUseCustomEmailFlag is true */
      validPasswordEmailFromEmail?: string;
      validPasswordEmailSubject?: string;
      validPasswordEmailBody?: string;
      invalidPasswordEmailUseCustomEmailFlag?: boolean | null;
      invalidPasswordEmailFromFirstName?: string;
      invalidPasswordEmailFromLastName?: string;
      /** @description Required when invalidPasswordEmailUseCustomEmailFlag is true */
      invalidPasswordEmailFromEmail?: string;
      invalidPasswordEmailSubject?: string;
      invalidPasswordEmailBody?: string;
      _info?: { [key: string]: string };
    };
    PortalConfigurationPaymentProcessor: {
      /** Format: int32 */
      id?: number;
      name?: string;
      testURL?: string;
    };
    PortalConfigurationPaymentProcessorReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    PortalConfigurationProjectSetup: {
      /** Format: int32 */
      id?: number;
      portalConfig?: components["schemas"]["PortalConfigurationReference"];
      projectNameFlag?: boolean | null;
      projectTypeFlag?: boolean | null;
      statusFlag?: boolean | null;
      projectManagerFlag?: boolean | null;
      billingMethodFlag?: boolean | null;
      contactFlag?: boolean | null;
      estimatedStartFlag?: boolean | null;
      estimatedEndFlag?: boolean | null;
      descriptionFlag?: boolean | null;
      lastUpdatedFlag?: boolean | null;
      /** @enum {string|null} */
      onlyDisplay:
        | (
            | "DoNotDisplay"
            | "Closed30Days"
            | "Closed60Days"
            | "Closed90Days"
            | "Closed120Days"
            | "AllClosed"
          )
        | null;
      timeMaterialBudgetHrsFlag?: boolean | null;
      timeMaterialScheduledStartFlag?: boolean | null;
      timeMaterialScheduledFinishFlag?: boolean | null;
      timeMaterialScheduledHrsFlag?: boolean | null;
      timeMaterialActualStartFlag?: boolean | null;
      timeMaterialActualFinishFlag?: boolean | null;
      timeMaterialActualHrsFlag?: boolean | null;
      timeMaterialBillFlag?: boolean | null;
      timeMaterialStatusFlag?: boolean | null;
      timeMaterialAssignedFlag?: boolean | null;
      fixedFeeBudgetHrsFlag?: boolean | null;
      fixedFeeScheduledStartFlag?: boolean | null;
      fixedFeeScheduledFinishFlag?: boolean | null;
      fixedFeeScheduledHrsFlag?: boolean | null;
      fixedFeeActualStartFlag?: boolean | null;
      fixedFeeActualFinishFlag?: boolean | null;
      fixedFeeActualHrsFlag?: boolean | null;
      fixedFeeBillFlag?: boolean | null;
      fixedFeeStatusFlag?: boolean | null;
      fixedFeeAssignedFlag?: boolean | null;
      projectIssueBudgetHrsFlag?: boolean | null;
      projectIssueScheduledStartFlag?: boolean | null;
      projectIssueScheduledFinishFlag?: boolean | null;
      projectIssueScheduledHrsFlag?: boolean | null;
      projectIssueActualStartFlag?: boolean | null;
      projectIssueActualFinishFlag?: boolean | null;
      projectIssueActualHrsFlag?: boolean | null;
      projectIssueBillFlag?: boolean | null;
      projectIssueStatusFlag?: boolean | null;
      projectIssueAssignedFlag?: boolean | null;
      projectDetailTotalHoursFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    PortalConfigurationReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    PortalConfigurationServiceSetup: {
      /** Format: int32 */
      id?: number;
      serviceTypeFlag?: boolean | null;
      serviceSubTypeFlag?: boolean | null;
      serviceSubTypeItemFlag?: boolean | null;
      statusFlag?: boolean | null;
      siteNameFlag?: boolean | null;
      enteredDateFlag?: boolean | null;
      lastUpdateFlag?: boolean | null;
      requiredDateFlag?: boolean | null;
      contactFlag?: boolean | null;
      assignedResourcesFlag?: boolean | null;
      slaInfoFlag?: boolean | null;
      serviceBoardFlag?: boolean | null;
      budgetHoursFlag?: boolean | null;
      actualHoursFlag?: boolean | null;
      approvalStatusFlag?: boolean | null;
      openTasksFlag?: boolean | null;
      closedTasksFlag?: boolean | null;
      enableChatAssistFlag?: boolean | null;
      /** @enum {string|null} */
      displayClosedTicketsOption:
        | (
            | "DoNotDisplay"
            | "Closed30Days"
            | "Closed60Days"
            | "Closed90Days"
            | "Closed120Days"
            | "AllClosed"
          )
        | null;
      timeMaterialsTicketTemplate?: components["schemas"]["ServiceSignoffReference"];
      fixedFeeTicketTemplate?: components["schemas"]["ServiceSignoffReference"];
      _info?: { [key: string]: string };
    };
    PortalReport: {
      /** Format: int32 */
      id?: number;
      portalConfiguration?: components["schemas"]["PortalConfigurationReference"];
      /** @description  Max length: 255; */
      name: string;
      /** @description  Max length: 255; */
      url: string;
      openSameWindowFlag?: boolean | null;
      customFlag?: boolean | null;
      displayFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    PortalSecurity: {
      identifier?: string;
      enabled?: boolean | null;
    };
    PortalSecurityLevel: {
      /** Format: int32 */
      id?: number;
      captionIdentifier?: string;
      isDefaultFlag?: boolean | null;
      /** @description  Max length: 50; */
      caption?: string;
      _info?: { [key: string]: string };
    };
    PortalSecuritySetting: {
      /** Format: int32 */
      id?: number;
      functionIdentifier?: string;
      functionDescription?: string;
      levelOne?: boolean | null;
      levelTwo?: boolean | null;
      levelThree?: boolean | null;
      levelFour?: boolean | null;
      levelFive?: boolean | null;
      levelSix?: boolean | null;
      _info?: { [key: string]: string };
    };
    PricingBreak: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      detailId?: number | null;
      /** Format: double */
      amount?: number | null;
      /** Format: double */
      quantityStart: number | null;
      /** Format: double */
      quantityEnd?: number | null;
      unlimited?: boolean;
      /** @enum {string|null} */
      priceMethod:
        | (
            | "FlatRateForRange"
            | "PercentMarkupFromCost"
            | "PercentMarkdownFromPrice"
            | "PricePerUnit"
          )
        | null;
      _info?: { [key: string]: string };
    };
    PricingDetail: {
      /** Format: int32 */
      id?: number;
      product?: components["schemas"]["CatalogItemReference"];
      category?: components["schemas"]["ProductCategoryReference"];
      subCategory?: components["schemas"]["ProductSubCategoryReference"];
      /** Format: date-time */
      startDate: string;
      /** Format: date-time */
      endDate?: string;
      noEndDate?: boolean;
      _info?: { [key: string]: string };
    };
    PricingSchedule: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      inactiveFlag?: boolean | null;
      defaultFlag?: boolean | null;
      currency?: components["schemas"]["CurrencyReference"];
      companies?: number[];
      setAllCompaniesFlag?: boolean | null;
      removeAllCompaniesFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    PricingScheduleReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Priority: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** @enum {string|null} */
      color:
        | (
            | "Black"
            | "Blue"
            | "Cyan"
            | "Gray"
            | "Green"
            | "Lime"
            | "Orange"
            | "Pink"
            | "Purple"
            | "Red"
            | "White"
            | "Yellow"
            | "Custom"
          )
        | null;
      /** Format: int32 */
      sortOrder?: number | null;
      defaultFlag?: boolean | null;
      imageLink?: string;
      _info?: { [key: string]: string };
    };
    PriorityInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      sortOrder?: number | null;
      _info?: { [key: string]: string };
    };
    PriorityReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      /** Format: int32 */
      sort?: number | null;
      _info?: { [key: string]: string };
    };
    ProcurementAdjustment: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      identifier: string;
      type?: components["schemas"]["AdjustmentTypeReference"];
      /** @description  Max length: 100; */
      reason?: string;
      notes?: string;
      closedFlag?: boolean | null;
      closedBy?: string;
      /** Format: date-time */
      closedDate?: string;
      adjustmentDetails?: components["schemas"]["AdjustmentDetail"][];
      _info?: { [key: string]: string };
    };
    ProcurementSetting: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      startingPurchaseOrderNum: number;
      /** @description  Max length: 5; */
      purchaseOrderPrefix?: string;
      /** @description  Max length: 5; */
      purchaseOrderSuffix?: string;
      /** @enum {string|null} */
      prefixSuffixType?: ("Prefix" | "Suffix") | null;
      disableCostUpdatesFlag?: boolean | null;
      disableNegativeInventoryFlag?: boolean | null;
      /** @enum {string|null} */
      costingMethod: ("FIFO" | "LIFO" | "AverageCosting") | null;
      autoClosePurchaseOrderFlag?: boolean | null;
      autoClosePurchaseOrderItemFlag?: boolean | null;
      autoApprovePurchaseOrderFlag?: boolean | null;
      taxPurchaseOrderFlag?: boolean | null;
      taxFreightFlag?: boolean | null;
      useVendorTaxCodeFlag?: boolean | null;
      /** Format: int32 */
      numDecimalPlaces?: number | null;
      disableAutoPickFlag?: boolean | null;
      defaultProductTaxableFlag?: boolean | null;
      /** @description  Max length: 50; */
      eoriNumber?: string;
      _info?: { [key: string]: string };
    };
    ProductCategoryReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ProductComponent: {
      /** Format: int32 */
      id?: number;
      /**
       * Format: int32
       * @description  Required On Updates;
       */
      sequenceNumber?: number | null;
      /** Format: double */
      quantity: number | null;
      catalogItem?: components["schemas"]["CatalogItemReference"];
      hidePriceFlag?: boolean | null;
      hideItemIdentifierFlag?: boolean | null;
      hideDescriptionFlag?: boolean | null;
      hideQuantityFlag?: boolean | null;
      hideExtendedPriceFlag?: boolean | null;
      vendor?: components["schemas"]["CompanyReference"];
      parentProductItem?: components["schemas"]["ProductItemReference"];
      productItem?: components["schemas"]["ProductItemReference"];
      /** Format: double */
      price?: number | null;
      /** Format: double */
      cost?: number | null;
      _info?: { [key: string]: string };
    };
    ProductDemand: {
      /** Format: int32 */
      productRecId?: number;
      /** Format: int32 */
      quantity?: number;
      /** Format: double */
      cost?: number | null;
    };
    ProductDetach: {
      removeFromTicket?: boolean;
      removeFromInvoice?: boolean;
      removeFromOpportunity?: boolean;
      removeFromSalesOrder?: boolean;
      removeFromProject?: boolean;
    };
    ProductItem: {
      /** Format: int32 */
      id?: number;
      catalogItem?: components["schemas"]["CatalogItemReference"];
      /** @description  Max length: 2000; */
      description?: string;
      /** Format: double */
      sequenceNumber?: number | null;
      /** Format: double */
      quantity?: number | null;
      /** Format: double */
      price?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      discount?: number | null;
      /** Format: double */
      agreementAmount?: number | null;
      /** @enum {string|null} */
      priceMethod?:
        | (
            | "FlatRateForRange"
            | "PercentMarkupFromCost"
            | "PercentMarkdownFromPrice"
            | "PricePerUnit"
          )
        | null;
      /** @enum {string|null} */
      billableOption: ("Billable" | "DoNotBill" | "NoCharge") | null;
      agreement?: components["schemas"]["AgreementReference"];
      /**
       * Format: int32
       * @description  Required On Updates;
       */
      locationId?: number | null;
      /**
       * Format: int32
       * @description  Required On Updates;
       */
      businessUnitId?: number | null;
      vendor?: components["schemas"]["CompanyReference"];
      /** @description  Max length: 50; */
      vendorSku?: string;
      taxableFlag?: boolean | null;
      dropshipFlag?: boolean | null;
      specialOrderFlag?: boolean | null;
      phaseProductFlag?: boolean | null;
      cancelledFlag?: boolean | null;
      /** Format: double */
      quantityCancelled?: number | null;
      /** @description  Max length: 100; */
      cancelledReason?: string;
      /** @description  Max length: 6000; Required On Updates; */
      customerDescription?: string;
      /** @description  Max length: 1000; */
      internalNotes?: string;
      productSuppliedFlag?: boolean | null;
      /** Format: int32 */
      subContractorShipToId?: number | null;
      /** Format: double */
      subContractorAmountLimit?: number | null;
      recurring?: components["schemas"]["ProductRecurring"];
      sla?: components["schemas"]["SLAReference"];
      entityType?: components["schemas"]["EntityTypeReference"];
      ticket?: components["schemas"]["TicketReference"];
      project?: components["schemas"]["ProjectReference"];
      phase?: components["schemas"]["ProjectPhaseReference"];
      salesOrder?: components["schemas"]["SalesOrderReference"];
      opportunity?: components["schemas"]["OpportunityReference"];
      invoice?: components["schemas"]["InvoiceReference"];
      /** Format: int32 */
      warehouseId?: number | null;
      /** Format: int32 */
      warehouseBinId?: number | null;
      calculatedPriceFlag?: boolean | null;
      calculatedCostFlag?: boolean | null;
      /** Format: int32 */
      forecastDetailId?: number | null;
      /** Format: int32 */
      cancelledBy?: number | null;
      /** Format: date-time */
      cancelledDate?: string;
      warehouse?: string;
      warehouseBin?: string;
      /** Format: date-time */
      purchaseDate?: string;
      integrationXRef?: string;
      /** Format: double */
      listPrice?: number | null;
      serialNumberIds?: number[];
      company?: components["schemas"]["CompanyReference"];
      forecastStatus?: components["schemas"]["OpportunityStatusReference"];
      /** @enum {string|null} */
      productClass?:
        | ("Agreement" | "Bundle" | "Inventory" | "NonInventory" | "Service")
        | null;
      needToPurchaseFlag?: boolean | null;
      /** Format: int32 */
      needToOrderQuantity?: number | null;
      minimumStockFlag?: boolean | null;
      /** @description  Max length: 10; */
      shipSet?: string;
      /** Format: double */
      calculatedPrice?: number | null;
      /** Format: double */
      calculatedCost?: number | null;
      invoiceGrouping?: components["schemas"]["InvoiceGroupingReference"];
      poApprovedFlag?: boolean | null;
      addComponentsFlag?: boolean | null;
      ignorePricingSchedulesFlag?: boolean | null;
      _info?: { [key: string]: string };
      bypassForecastUpdate?: boolean | null;
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    ProductItemReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ProductPickingShippingDetail: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      pickedQuantity?: number | null;
      /** Format: int32 */
      shippedQuantity?: number | null;
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      shipmentMethod?: components["schemas"]["ShipmentMethodReference"];
      serialNumber?: string;
      serialNumberIds?: number[];
      trackingNumber?: string;
      productItem?: components["schemas"]["ProductItemReference"];
      /** Format: int32 */
      lineNumber?: number | null;
      /** Format: int32 */
      quantity?: number | null;
      _info?: { [key: string]: string };
    };
    ProductRecurring: {
      /** Format: double */
      recurringRevenue?: number | null;
      /** Format: double */
      recurringCost?: number | null;
      startDate?: string;
      /**
       * @description The Recurring End Date is calculated based on the
       *             start date, number of cycles, and cycle type.
       */
      endDate?: string;
      /** Format: int32 */
      billCycleId?: number | null;
      /** Format: int32 */
      cycles?: number | null;
      /** @enum {string|null} */
      cycleType?: ("ContractYear" | "CalendarYear") | null;
    };
    ProductReference: {
      /** Format: int32 */
      id?: number | null;
      description?: string;
      _info?: { [key: string]: string };
    };
    ProductRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    ProductSubCategoryReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ProductType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      /** @enum {string|null} */
      typeXref?:
        | ("InventoryPart" | "NonInventoryPart" | "OtherCharge" | "Service")
        | null;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ProductTypeExemption: {
      /** Format: int32 */
      id?: number;
      productType: components["schemas"]["ProductTypeReference"];
      taxableLevels?: number[];
      _info?: { [key: string]: string };
    };
    ProductTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ProductTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Project: {
      /** Format: int32 */
      id?: number;
      _info?: { [key: string]: string };
      /** Format: date-time */
      actualEnd?: string;
      /** Format: double */
      actualHours?: number | null;
      /** Format: date-time */
      actualStart?: string;
      agreement?: components["schemas"]["AgreementReference"];
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billExpenses?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** Format: double */
      billingAmount?: number | null;
      /** @description  Max length: 50; */
      billingAttention?: string;
      /** @enum {string|null} */
      billingMethod:
        | ("ActualRates" | "FixedFee" | "NotToExceed" | "OverrideRate")
        | null;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billingRateType?: ("StaffMember" | "WorkRole") | null;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billProducts?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      billProjectAfterClosedFlag?: boolean | null;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billTime?: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      billToCompany?: components["schemas"]["CompanyReference"];
      billToContact?: components["schemas"]["ContactReference"];
      billToSite?: components["schemas"]["SiteReference"];
      billUnapprovedTimeAndExpense?: boolean | null;
      board?: components["schemas"]["ProjectBoardReference"];
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      budgetAnalysis?: ("ActualHours" | "BillableHours") | null;
      budgetFlag?: boolean | null;
      /** Format: double */
      budgetHours?: number | null;
      company?: components["schemas"]["CompanyReference"];
      contact?: components["schemas"]["ContactReference"];
      /** @description  Max length: 50; */
      customerPO?: string;
      description?: string;
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      downpayment?: number | null;
      /** Format: date-time */
      estimatedEnd: string;
      /** Format: double */
      percentComplete?: number | null;
      /** Format: double */
      estimatedExpenseRevenue?: number | null;
      /** Format: double */
      estimatedHours?: number | null;
      /** Format: double */
      estimatedProductRevenue?: number | null;
      /** Format: date-time */
      estimatedStart: string;
      /** Format: double */
      estimatedTimeRevenue?: number | null;
      expenseApprover?: components["schemas"]["MemberReference"];
      includeDependenciesFlag?: boolean | null;
      includeEstimatesFlag?: boolean | null;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      manager?: components["schemas"]["MemberReference"];
      /** @description  Max length: 100; */
      name: string;
      opportunity?: components["schemas"]["OpportunityReference"];
      /** Format: int32 */
      projectTemplateId?: number | null;
      restrictDownPaymentFlag?: boolean | null;
      /** Format: date-time */
      scheduledEnd?: string;
      /** Format: double */
      scheduledHours?: number | null;
      /** Format: date-time */
      scheduledStart?: string;
      shipToCompany?: components["schemas"]["CompanyReference"];
      shipToContact?: components["schemas"]["ContactReference"];
      shipToSite?: components["schemas"]["SiteReference"];
      site?: components["schemas"]["SiteReference"];
      status?: components["schemas"]["ProjectStatusReference"];
      closedFlag?: boolean;
      timeApprover?: components["schemas"]["MemberReference"];
      type?: components["schemas"]["ProjectTypeReference"];
      doNotDisplayInPortalFlag?: boolean | null;
      /** Format: date-time */
      billingStartDate?: string;
      /** Format: double */
      estimatedTimeCost?: number | null;
      /** Format: double */
      estimatedExpenseCost?: number | null;
      /** Format: double */
      estimatedProductCost?: number | null;
      taxCode?: components["schemas"]["TaxCodeReference"];
      companyLocation?: components["schemas"]["SystemLocationReference"];
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    ProjectBoardReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ProjectBoardTeam: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ProjectBoardTeamInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    ProjectBoardTeamMember: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      projectRole?: components["schemas"]["ProjectRoleReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      _info?: { [key: string]: string };
    };
    ProjectContact: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      projectId?: number;
      contact?: components["schemas"]["ContactReference"];
      _info?: { [key: string]: string };
    };
    ProjectNote: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      projectId?: number | null;
      text: string;
      type?: components["schemas"]["NoteTypeReference"];
      flagged?: boolean | null;
      _info?: { [key: string]: string };
    };
    ProjectPhase: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      projectId?: number | null;
      /** @description  Max length: 100; */
      description: string;
      board?: components["schemas"]["ProjectBoardReference"];
      status?: components["schemas"]["PhaseStatusReference"];
      agreement?: components["schemas"]["AgreementReference"];
      opportunity?: components["schemas"]["OpportunityReference"];
      parentPhase?: components["schemas"]["ProjectPhaseReference"];
      /** @description  Max length: 50; */
      wbsCode?: string;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billTime?: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billExpenses?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billProducts?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      markAsMilestoneFlag?: boolean | null;
      notes?: string;
      /** Format: date-time */
      deadlineDate?: string;
      billSeparatelyFlag?: boolean | null;
      /**
       * @description billingMethod is required if the phase billSeparatelyFlag is true
       * @enum {string|null}
       */
      billingMethod?:
        | ("ActualRates" | "FixedFee" | "NotToExceed" | "OverrideRate")
        | null;
      /** Format: double */
      scheduledHours?: number | null;
      scheduledStart?: string;
      scheduledEnd?: string;
      /** Format: double */
      actualHours?: number | null;
      actualStart?: string;
      actualEnd?: string;
      /** Format: double */
      budgetHours?: number | null;
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      /** Format: double */
      hourlyRate?: number | null;
      /** Format: date-time */
      billingStartDate?: string;
      /** @description This phase can only be billed after it has been closed */
      billPhaseClosedFlag?: boolean | null;
      /** @description This phase can only be billed after the project has been closed */
      billProjectClosedFlag?: boolean | null;
      /** Format: double */
      downpayment?: number | null;
      /** @description  Max length: 25; */
      poNumber?: string;
      /** Format: double */
      poAmount?: number | null;
      /** Format: double */
      estimatedTimeCost?: number | null;
      /** Format: double */
      estimatedExpenseCost?: number | null;
      /** Format: double */
      estimatedProductCost?: number | null;
      /** Format: double */
      estimatedTimeRevenue?: number | null;
      /** Format: double */
      estimatedExpenseRevenue?: number | null;
      /** Format: double */
      estimatedProductRevenue?: number | null;
      currency?: components["schemas"]["CurrencyReference"];
      billToCompany?: components["schemas"]["CompanyReference"];
      billToContact?: components["schemas"]["ContactReference"];
      billToSite?: components["schemas"]["SiteReference"];
      shipToCompany?: components["schemas"]["CompanyReference"];
      shipToContact?: components["schemas"]["ContactReference"];
      shipToSite?: components["schemas"]["SiteReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    ProjectPhaseReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ProjectReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ProjectRoleReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      _info?: { [key: string]: string };
    };
    ProjectSecurityRole: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      managerRoleFlag?: boolean | null;
      defaultContactFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ProjectSecurityRoleSetting: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      addLevel?: ("None" | "My" | "All") | null;
      /** @enum {string|null} */
      editLevel?: ("None" | "My" | "All") | null;
      /** @enum {string|null} */
      deleteLevel?: ("None" | "My" | "All") | null;
      /** @enum {string|null} */
      inquireLevel?: ("None" | "My" | "All") | null;
      /** @description  Max length: 50; */
      moduleIdentifier?: string;
      myFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ProjectStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      noTimeFlag?: boolean | null;
      closedFlag?: boolean | null;
      statusIndicator?: components["schemas"]["StatusIndicatorReference"];
      /** @description Required when statusIndicator is Custom Max length: 30; */
      customStatusIndicatorName?: string;
      _info?: { [key: string]: string };
    };
    ProjectStatusInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ProjectStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ProjectTeamMember: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      projectId?: number | null;
      /** Format: double */
      hours?: number | null;
      member?: components["schemas"]["MemberReference"];
      projectRole?: components["schemas"]["ProjectRoleReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      _info?: { [key: string]: string };
    };
    ProjectTicket: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      summary: string;
      isIssueFlag?: boolean | null;
      board?: components["schemas"]["BoardReference"];
      status?: components["schemas"]["ServiceStatusReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      project?: components["schemas"]["ProjectReference"];
      phase?: components["schemas"]["ProjectPhaseReference"];
      /** @description  Max length: 50; */
      wbsCode?: string;
      company?: components["schemas"]["CompanyReference"];
      site?: components["schemas"]["SiteReference"];
      /** @description  Max length: 50; */
      siteName?: string;
      /** @description  Max length: 50; */
      addressLine1?: string;
      /** @description  Max length: 50; */
      addressLine2?: string;
      /** @description  Max length: 50; */
      city?: string;
      /** @description  Max length: 50; */
      stateIdentifier?: string;
      /** @description  Max length: 12; */
      zip?: string;
      country?: components["schemas"]["CountryReference"];
      contact?: components["schemas"]["ContactReference"];
      /** @description  Max length: 62; */
      contactName?: string;
      /** @description  Max length: 20; */
      contactPhoneNumber?: string;
      /** @description  Max length: 15; */
      contactPhoneExtension?: string;
      /** @description  Max length: 250; */
      contactEmailAddress?: string;
      type?: components["schemas"]["ServiceTypeReference"];
      subType?: components["schemas"]["ServiceSubTypeReference"];
      item?: components["schemas"]["ServiceItemReference"];
      owner?: components["schemas"]["MemberReference"];
      priority?: components["schemas"]["PriorityReference"];
      serviceLocation?: components["schemas"]["ServiceLocationReference"];
      source?: components["schemas"]["ServiceSourceReference"];
      /** Format: date-time */
      requiredDate?: string;
      /** Format: double */
      budgetHours?: number | null;
      opportunity?: components["schemas"]["OpportunityReference"];
      agreement?: components["schemas"]["AgreementReference"];
      /** Format: int32 */
      knowledgeBaseCategoryId?: number | null;
      /** Format: int32 */
      knowledgeBaseSubCategoryId?: number | null;
      /** Format: int32 */
      knowledgeBaseLinkId?: number | null;
      /** @enum {string|null} */
      knowledgeBaseLinkType?:
        | (
            | "Activity"
            | "ProjectIssue"
            | "KnowledgeBaseArticle"
            | "ProjectTicket"
            | "ServiceTicket"
            | "Time"
          )
        | null;
      allowAllClientsPortalView?: boolean | null;
      customerUpdatedFlag?: boolean | null;
      automaticEmailContactFlag?: boolean | null;
      automaticEmailResourceFlag?: boolean | null;
      automaticEmailCcFlag?: boolean | null;
      /** @description  Max length: 1000; */
      automaticEmailCc?: string;
      closedDate?: string;
      closedBy?: string;
      closedFlag?: boolean | null;
      /** Format: double */
      actualHours?: number | null;
      approved?: boolean | null;
      /** @enum {string|null} */
      subBillingMethod?:
        | ("ActualRates" | "FixedFee" | "NotToExceed" | "OverrideRate")
        | null;
      /** Format: double */
      subBillingAmount?: number | null;
      subDateAccepted?: string;
      resources?: string;
      /** @enum {string|null} */
      billTime?: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      /** @enum {string|null} */
      billExpenses?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** @enum {string|null} */
      billProducts?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** @enum {string|null} */
      predecessorType?: ("Ticket" | "Phase") | null;
      /** Format: int32 */
      predecessorId?: number | null;
      predecessorClosedFlag?: boolean | null;
      /** Format: int32 */
      lagDays?: number | null;
      lagNonworkingDaysFlag?: boolean | null;
      /** Format: date-time */
      estimatedStartDate?: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      /** Format: int32 */
      duration?: number | null;
      /** Format: uuid */
      mobileGuid?: string | null;
      currency?: components["schemas"]["CurrencyReference"];
      _info?: { [key: string]: string };
      /** @description Only available for POST, will not be returned in the response */
      initialDescription?: string;
      /** @description Only available for POST, will not be returned in the response */
      initialInternalAnalysis?: string;
      /** @description Only available for POST, will not be returned in the response */
      initialResolution?: string;
      contactEmailLookup?: string;
      /** @description Can be set to false to skip notification processing when adding or updating a ticket (Defaults to True) */
      processNotifications?: boolean | null;
      skipCallback?: boolean | null;
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    ProjectTicketNote: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      noteType?: ("TicketNote" | "TimeEntryNote" | "MeetingNote") | null;
      ticket?: components["schemas"]["TicketReference"];
      text?: string;
      detailDescriptionFlag?: boolean | null;
      internalAnalysisFlag?: boolean | null;
      resolutionFlag?: boolean | null;
      /** Format: date-time */
      timeStart?: string;
      /** Format: date-time */
      timeEnd?: string;
      bundledFlag?: boolean | null;
      mergedFlag?: boolean | null;
      issueFlag?: boolean | null;
      originalAuthor?: string;
      member?: components["schemas"]["MemberReference"];
      contact?: components["schemas"]["ContactReference"];
      _info?: { [key: string]: string };
    };
    ProjectType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      /** @description  Max length: 50; */
      integrationXref?: string;
      _info?: { [key: string]: string };
    };
    ProjectTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    ProjectTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    PurchaseOrder: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      businessUnitId?: number | null;
      cancelReason?: string;
      /** @description The closed flag can only be updated via updating the purchase order status to a closed/open status. */
      closedFlag?: boolean | null;
      customerCity?: string;
      customerCompany?: components["schemas"]["CompanyReference"];
      customerContact?: components["schemas"]["ContactReference"];
      customerCountry?: components["schemas"]["CountryReference"];
      customerExtension?: string;
      customerName?: string;
      customerPhone?: string;
      customerSite?: components["schemas"]["SiteReference"];
      customerSiteName?: string;
      customerState?: string;
      customerStreetLine1?: string;
      customerStreetLine2?: string;
      customerZip?: string;
      /** Format: date-time */
      dateClosed?: string;
      dropShipCustomerFlag?: boolean | null;
      enteredBy?: string;
      /** Format: double */
      freightCost?: number | null;
      freightPackingSlip?: string;
      /** Format: double */
      freightTaxTotal?: number | null;
      internalNotes?: string;
      /** Format: int32 */
      locationId?: number | null;
      /**
       * Format: date-time
       * @description  Required On Updates;
       */
      poDate?: string;
      /** @description  Required On Updates; Max length: 50; */
      poNumber?: string;
      /** Format: double */
      salesTax?: number | null;
      /** Format: date-time */
      shipmentDate?: string;
      shipmentMethod?: components["schemas"]["ShipmentMethodReference"];
      shippingInstructions?: string;
      status?: components["schemas"]["PurchaseOrderStatusReference"];
      /** Format: double */
      subTotal?: number | null;
      taxCode?: components["schemas"]["TaxCodeReference"];
      taxFreightFlag?: boolean | null;
      taxPoFlag?: boolean | null;
      terms?: components["schemas"]["BillingTermsReference"];
      /** Format: double */
      total?: number | null;
      /** @description  Max length: 50; */
      trackingNumber?: string;
      /** @description Determines whether or not to update all of the shipment info for each associated line item when new shipment info is passed in */
      updateShipmentInfo?: boolean | null;
      /** @description Determines whether or not to update vendor order number for each associated line item when new vendor order number is passed in */
      updateVendorOrderNumber?: boolean | null;
      vendorCompany?: components["schemas"]["CompanyReference"];
      vendorContact?: components["schemas"]["ContactReference"];
      /** Format: date-time */
      vendorInvoiceDate?: string;
      /** @description  Max length: 50; */
      vendorInvoiceNumber?: string;
      /** @description  Max length: 50; */
      vendorOrderNumber?: string;
      vendorSite?: components["schemas"]["SiteReference"];
      warehouse?: components["schemas"]["WarehouseReference"];
      currency?: components["schemas"]["CurrencyReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    PurchaseOrderLineItem: {
      /** Format: int32 */
      id?: number;
      backorderedFlag?: boolean | null;
      canceledBy?: string;
      canceledFlag?: boolean | null;
      /** @description  Max length: 100; */
      canceledReason?: string;
      closedFlag?: boolean | null;
      /** Format: date-time */
      dateCanceled?: string;
      /** Format: date-time */
      dateCanceledUtc?: string;
      /** @description  Max length: 6000; */
      description: string;
      displayInternalNotesFlag?: boolean | null;
      /** Format: date-time */
      expectedShipDate?: string;
      /** @description  Max length: 1000; */
      internalNotes?: string;
      /** Format: int32 */
      lineNumber: number | null;
      /** @description  Max length: 50; */
      packingSlip?: string;
      product?: components["schemas"]["IvItemReference"];
      /** Format: int32 */
      purchaseOrderId?: number | null;
      /** Format: double */
      quantity: number | null;
      /** Format: int32 */
      receivedQuantity?: number | null;
      serialNumbers?: string;
      /** Format: date-time */
      shipDate?: string;
      shipmentMethod?: components["schemas"]["ShipmentMethodReference"];
      /** Format: double */
      tax?: number | null;
      /** @description  Max length: 50; */
      trackingNumber?: string;
      /** Format: double */
      unitCost?: number | null;
      unitOfMeasure?: components["schemas"]["UnitOfMeasureReference"];
      /** @description  Max length: 50; */
      vendorOrderNumber?: string;
      /** @description  Max length: 50; */
      vendorSku?: string;
      warehouse?: components["schemas"]["WarehouseReference"];
      warehouseBin?: components["schemas"]["WarehouseBinReference"];
      /** @description  Max length: 10; */
      shipSet?: string;
      /** Format: date-time */
      dateReceived?: string;
      /** @enum {string|null} */
      receivedStatus?:
        | (
            | "Waiting"
            | "FullyReceived"
            | "PartiallyReceiveCancelRest"
            | "PartiallyReceiveCloneRest"
          )
        | null;
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    PurchaseOrderLineItemReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      _info?: { [key: string]: string };
    };
    PurchaseOrderReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    PurchaseOrderStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      closedFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      defaultClosedFlag?: boolean | null;
      /** Format: int32 */
      sortOrder?: number | null;
      emailTemplate?: components["schemas"]["PurchaseOrderStatusEmailTemplateReference"];
      _info?: { [key: string]: string };
    };
    PurchaseOrderStatusEmailTemplate: {
      /** Format: int32 */
      id?: number;
      status?: components["schemas"]["PurchaseOrderStatusReference"];
      useSenderFlag?: boolean | null;
      /** @description  Max length: 100; */
      firstName?: string;
      /** @description  Max length: 100; */
      lastName?: string;
      /** @description  Max length: 100; */
      emailAddress?: string;
      /** @description  Max length: 200; */
      subject: string;
      body?: string;
      copySenderFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    PurchaseOrderStatusEmailTemplateReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    PurchaseOrderStatusNotification: {
      /** Format: int32 */
      id?: number;
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      status?: components["schemas"]["PurchaseOrderStatusReference"];
      member?: components["schemas"]["MemberReference"];
      /** @description Purchase Order Status Notification email must be entered if the notify type is "Email Address" Max length: 50; */
      email?: string;
      /** Format: int32 */
      workflowStep?: number | null;
      _info?: { [key: string]: string };
    };
    PurchaseOrderStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    PurchasingDemand: {
      warehouse?: components["schemas"]["WarehouseReference"];
      vendor?: components["schemas"]["CompanyReference"];
      products?: components["schemas"]["ProductDemand"][];
      purchaseOrder?: components["schemas"]["PurchaseOrder"];
    };
    QuoteLink: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      /** @description  Max length: 2000; */
      link: string;
      allLocationsFlag?: boolean | null;
      newWindowFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    RelationshipReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ReminderReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Report: {
      name?: string;
    };
    ReportCard: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      _info?: { [key: string]: string };
    };
    ReportCardDetail: {
      /** Format: int32 */
      id?: number;
      kpi?: components["schemas"]["KPIReference"];
      /** Format: int32 */
      sortOrder?: number | null;
      reportCard?: components["schemas"]["ReportCardReference"];
      _info?: { [key: string]: string };
    };
    ReportCardInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    ReportCardReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ReportColumnDefinition: {
      type?: string;
      isNullable?: boolean;
      identityColumn?: boolean;
    };
    ReportDataResponse: {
      column_definitions?: {
        [key: string]: components["schemas"]["ReportColumnDefinition"];
      }[];
      row_values?: { [key: string]: unknown }[][];
    };
    ReportingService: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      reportingUserName?: string;
      /** @description To blank out the password, enter an empty string here. Max length: 50; */
      reportingPassword?: string;
      /** @description  Max length: 50; */
      reportingDomain?: string;
      /** @description  Max length: 100; */
      reportingUrl?: string;
      _info?: { [key: string]: string };
    };
    RequestPasswordRequest: {
      email: string;
    };
    ResultInfo: {
      success?: boolean;
      /** Format: int32 */
      originalIndex?: number;
      /** Format: int32 */
      statusCode?: number;
      data?: components["schemas"]["IRestIdentifiedItem"];
      error?: components["schemas"]["ErrorResponseMessage"];
    };
    RmaAction: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    RmaActionInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    RmaActionReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    RmaDisposition: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    RmaDispositionInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    RmaDispositionReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    RmaStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      /** Format: int32 */
      sortOrder?: number | null;
      closedFlag?: boolean | null;
      emailTemplate?: components["schemas"]["RmaStatusEmailTemplateReference"];
      _info?: { [key: string]: string };
    };
    RmaStatusEmailTemplate: {
      /** Format: int32 */
      id?: number;
      status?: components["schemas"]["RmaStatusReference"];
      useSenderFlag?: boolean | null;
      /** @description  Max length: 100; */
      firstName?: string;
      /** @description  Max length: 100; */
      lastName?: string;
      /** @description  Max length: 100; */
      emailAddress?: string;
      /** @description  Max length: 200; */
      subject: string;
      body: string;
      copySenderFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    RmaStatusEmailTemplateReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    RmaStatusInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: int32 */
      sortOrder?: number | null;
      _info?: { [key: string]: string };
    };
    RmaStatusNotification: {
      /** Format: int32 */
      id?: number;
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      status?: components["schemas"]["RmaStatusReference"];
      member?: components["schemas"]["MemberReference"];
      /** @description RMA Status Notification sendEmail must be entered if the notify type is "Email Address" Max length: 50; */
      email?: string;
      /** Format: int32 */
      workflowStep?: number | null;
      _info?: { [key: string]: string };
    };
    RmaStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    RmaTag: {
      /** Format: int32 */
      id?: number;
      serviceTicket?: components["schemas"]["TicketReference"];
      salesOrder?: components["schemas"]["SalesOrderReference"];
      invoice?: components["schemas"]["InvoiceReference"];
      project?: components["schemas"]["ProjectReference"];
      /** @description  Max length: 150; */
      summary?: string;
      product?: components["schemas"]["IvItemReference"];
      ivDescription?: string;
      /** @description  Max length: 200; */
      productDescription: string;
      serialNumber?: string;
      /** @description  Max length: 100; */
      mfgItemID?: string;
      status?: components["schemas"]["RmaStatusReference"];
      /** Format: double */
      listPrice?: number;
      /** Format: double */
      unitPrice?: number | null;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      /** @description  Max length: 1000; */
      problemDescription?: string;
      returnedCompany?: components["schemas"]["CompanyReference"];
      returnedContact?: components["schemas"]["ContactReference"];
      returnedContactType?: string;
      returnedContactPhone?: string;
      returnedContactExtension?: string;
      returnedContactEmail?: string;
      /** @description  Max length: 50; */
      returnedContactAddressLine1?: string;
      /** @description  Max length: 50; */
      returnedContactAddressLine2?: string;
      /** @description  Max length: 50; */
      returnedContactCity?: string;
      /** @description  Max length: 50; */
      returnedContactState?: string;
      /** @description  Max length: 12; */
      returnedContactZip?: string;
      returnedContactCountry?: components["schemas"]["CountryReference"];
      rmaDisposition?: components["schemas"]["RmaDispositionReference"];
      returnedSite?: components["schemas"]["SiteReference"];
      purchasedCompany?: components["schemas"]["CompanyReference"];
      purchasedContact?: components["schemas"]["ContactReference"];
      purchasedContactType?: string;
      purchasedContactPhone?: string;
      purchasedContactExtension?: string;
      purchasedContactEmail?: string;
      /** @description  Max length: 50; */
      purchasedContactAddressLine1?: string;
      /** @description  Max length: 50; */
      purchasedContactAddressLine2?: string;
      /** @description  Max length: 50; */
      purchasedContactCity?: string;
      /** @description  Max length: 50; */
      purchasedContactState?: string;
      /** @description  Max length: 12; */
      purchasedContactZip?: string;
      purchasedContactCountry?: components["schemas"]["CountryReference"];
      /** @description  Max length: 50; */
      purchasedInvoiceNumber?: string;
      /** Format: date */
      purchasedInvoiceDate?: string;
      /** @description  Max length: 50; */
      purchasedOrderNumber?: string;
      purchasedVendorAction?: components["schemas"]["RmaActionReference"];
      /** @description  Max length: 50; */
      purchasedVendorRmaNumber?: string;
      purchasedSite?: components["schemas"]["SiteReference"];
      /** @description  Max length: 1000; */
      purchasedNotes?: string;
      warrantyCompany?: components["schemas"]["CompanyReference"];
      warrantyContact?: components["schemas"]["ContactReference"];
      warrantyContactType?: string;
      warrantyContactPhone?: string;
      warrantyContactEmail?: string;
      warrantyContactExtension?: string;
      /** @description  Max length: 50; */
      warrantyContactAddressLine1?: string;
      /** @description  Max length: 50; */
      warrantyContactAddressLine2?: string;
      /** @description  Max length: 50; */
      warrantyContactCity?: string;
      /** @description  Max length: 50; */
      warrantyContactState?: string;
      /** @description  Max length: 12; */
      warrantyContactZip?: string;
      warrantyContactCountry?: components["schemas"]["CountryReference"];
      warrantySite?: components["schemas"]["SiteReference"];
      /** @description  Max length: 1000; */
      warrantyNotes?: string;
      repairCompany?: components["schemas"]["CompanyReference"];
      repairContact?: components["schemas"]["ContactReference"];
      repairContactType?: string;
      repairContactPhone?: string;
      repairContactExtension?: string;
      repairContactEmail?: string;
      /** @description  Max length: 50; */
      repairContactAddressLine1?: string;
      /** @description  Max length: 50; */
      repairContactAddressLine2?: string;
      /** @description  Max length: 50; */
      repairContactCity?: string;
      /** @description  Max length: 50; */
      repairContactState?: string;
      /** @description  Max length: 12; */
      repairContactZip?: string;
      repairContactCountry?: components["schemas"]["CountryReference"];
      /** @description  Max length: 50; */
      repairOrderNumber?: string;
      repairSite?: components["schemas"]["SiteReference"];
      /** @description  Max length: 1000; */
      repairNotes?: string;
      dropShipFlag?: boolean | null;
      shipMethod?: components["schemas"]["ShipmentMethodReference"];
      /** Format: date */
      shippingDate?: string;
      /** @description  Max length: 50; */
      shippingTrackingNumber?: string;
      /** @description  Max length: 1000; */
      internalNotes?: string;
      /** @description  Max length: 1000; */
      closingNotes?: string;
      dateClosed?: string;
      accountManager?: components["schemas"]["MemberReference"];
      technicalContact?: components["schemas"]["MemberReference"];
      currency?: components["schemas"]["CurrencyReference"];
      closedBy?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    Role: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      _info?: { [key: string]: string };
    };
    SalesOrderReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      _info?: { [key: string]: string };
    };
    SalesProbability: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      probability: number;
      _info?: { [key: string]: string };
    };
    SalesProbabilityInfo: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      probability?: number;
      _info?: { [key: string]: string };
    };
    SalesQuota: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      /** Format: int32 */
      forecastYear?: number | null;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      category?: components["schemas"]["ProductCategoryReference"];
      subCategory?: components["schemas"]["ProductSubCategoryReference"];
      /** Format: double */
      januaryRevenue?: number | null;
      /** Format: double */
      januaryMargin?: number | null;
      /** Format: double */
      februaryRevenue?: number | null;
      /** Format: double */
      februaryMargin?: number | null;
      /** Format: double */
      marchRevenue?: number | null;
      /** Format: double */
      marchMargin?: number | null;
      /** Format: double */
      aprilRevenue?: number | null;
      /** Format: double */
      aprilMargin?: number | null;
      /** Format: double */
      mayRevenue?: number | null;
      /** Format: double */
      mayMargin?: number | null;
      /** Format: double */
      juneRevenue?: number | null;
      /** Format: double */
      juneMargin?: number | null;
      /** Format: double */
      julyRevenue?: number | null;
      /** Format: double */
      julyMargin?: number | null;
      /** Format: double */
      augustRevenue?: number | null;
      /** Format: double */
      augustMargin?: number | null;
      /** Format: double */
      septemberRevenue?: number | null;
      /** Format: double */
      septemberMargin?: number | null;
      /** Format: double */
      octoberRevenue?: number | null;
      /** Format: double */
      octoberMargin?: number | null;
      /** Format: double */
      novemberRevenue?: number | null;
      /** Format: double */
      novemberMargin?: number | null;
      /** Format: double */
      decemberRevenue?: number | null;
      /** Format: double */
      decemberMargin?: number | null;
      currency?: components["schemas"]["CurrencyReference"];
      _info?: { [key: string]: string };
    };
    SalesTeam: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 20; */
      salesTeamIdentifier: string;
      /** @description  Max length: 50; */
      salesTeamDescription: string;
      salesTeamLocation?: components["schemas"]["SystemLocationReference"];
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SalesTeamMember: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      allowAccessFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SalesTeamReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      _info?: { [key: string]: string };
    };
    ScheduleColor: {
      /** Format: int32 */
      id?: number;
      /**
       * Format: int32
       * @description A startPercent (0 or higher) is required if endPercent has value
       */
      startPercent?: number | null;
      /**
       * Format: int32
       * @description A endPercent is required if startPercent has value
       */
      endPercent?: number | null;
      /** @description Must be a valid Hexadecimal Color Code */
      color: string;
      _info?: { [key: string]: string };
    };
    ScheduleDetail: {
      /** Format: int32 */
      id?: number;
      scheduleEntry?: components["schemas"]["ScheduleEntryReference"];
      dateStart?: string;
      dateEnd?: string;
      member?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    ScheduleEntry: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      objectId?: number | null;
      /** @description  Max length: 250; */
      name?: string;
      member?: components["schemas"]["MemberReference"];
      where?: components["schemas"]["ServiceLocationReference"];
      /** Format: date-time */
      dateStart?: string;
      /** Format: date-time */
      dateEnd?: string;
      reminder?: components["schemas"]["ReminderReference"];
      status?: components["schemas"]["ScheduleStatusReference"];
      type?: components["schemas"]["ScheduleTypeReference"];
      span?: components["schemas"]["ScheduleSpanReference"];
      doneFlag?: boolean | null;
      acknowledgedFlag?: boolean | null;
      ownerFlag?: boolean | null;
      meetingFlag?: boolean | null;
      allowScheduleConflictsFlag?: boolean | null;
      addMemberToProjectFlag?: boolean | null;
      /** Format: int32 */
      projectRoleId?: number | null;
      /** Format: uuid */
      mobileGuid?: string | null;
      /** Format: date-time */
      acknowledgedDate?: string;
      /** Format: date-time */
      closeDate?: string;
      /** Format: double */
      hours?: number | null;
      _info?: { [key: string]: string };
    };
    ScheduleEntryDetail: {
      /** Format: int32 */
      id?: number;
      scheduleEntry?: components["schemas"]["ScheduleEntryReference"];
      dateStart?: string;
      dateEnd?: string;
      /** Format: double */
      hoursScheduled?: number;
      _info?: { [key: string]: string };
    };
    ScheduleEntryReference: {
      /** Format: int32 */
      id?: number | null;
      description?: string;
      _info?: { [key: string]: string };
    };
    ScheduleReminderTime: {
      /** Format: int32 */
      id?: number;
      /**
       * Format: int32
       * @description Time is calculated in minutes
       */
      time?: number | null;
      /** @description  Max length: 10; */
      name?: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ScheduleSpanReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      _info?: { [key: string]: string };
    };
    ScheduleStatus: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      defaultFlag?: boolean | null;
      showAsTentativeFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ScheduleStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ScheduleStopwatch: {
      _info?: { [key: string]: string };
      agreement?: components["schemas"]["AgreementReference"];
      /** @enum {string|null} */
      billableOption?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      /** Format: date-time */
      dateEntered?: string;
      /** Format: date-time */
      endTime?: string;
      /** Format: int32 */
      id?: number;
      internalNotes?: string;
      /** Format: int32 */
      locationId?: number | null;
      member?: components["schemas"]["MemberReference"];
      /** Format: uuid */
      mobileGuid?: string | null;
      /** @description  Max length: 4000; */
      notes?: string;
      /** Format: int32 */
      scheduleId: number | null;
      /** Format: uuid */
      scheduleMobileGuid?: string | null;
      /** Format: date-time */
      startTime?: string;
      /** @enum {string|null} */
      status: ("Reset" | "Running" | "Paused" | "Stopped") | null;
      /** Format: int32 */
      totalPauseTime?: number | null;
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
    };
    ScheduleType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** @description  Max length: 1; */
      identifier: string;
      chargeCode?: components["schemas"]["ChargeCodeReference"];
      where?: components["schemas"]["ServiceLocationReference"];
      systemFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ScheduleTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      identifier?: string;
      chargeCode?: components["schemas"]["ChargeCodeReference"];
      where?: components["schemas"]["ServiceLocationReference"];
      systemFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ScheduleTypeReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      _info?: { [key: string]: string };
    };
    SchedulingMemberInfo: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      firstName?: string;
      middleInitial?: string;
      lastName?: string;
      fullName?: string;
      defaultEmail?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SecurityRole: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      adminFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SecurityRoleInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SecurityRoleReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SecurityRoleSetting: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      addLevel?: ("None" | "My" | "All") | null;
      /** @enum {string|null} */
      editLevel?: ("None" | "My" | "All") | null;
      /** @enum {string|null} */
      deleteLevel?: ("None" | "My" | "All") | null;
      /** @enum {string|null} */
      inquireLevel?: ("None" | "My" | "All") | null;
      moduleFunctionName?: string;
      moduleFunctionDescription?: string;
      myAllFlag?: boolean | null;
      moduleFunctionIdentifier?: string;
      reportFlag?: boolean | null;
      restrictFlag?: boolean | null;
      customFlag?: boolean | null;
      moduleDescription?: string;
      moduleIdentifier?: string;
      moduleName?: string;
      /** Format: int32 */
      sortOrder?: number | null;
      _info?: { [key: string]: string };
    };
    Service: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      srNotify:
        | (
            | "All"
            | "NewAndClosedRequests"
            | "ClosedRequestsOnly"
            | "NewRequestsOnly"
            | "None"
          )
        | null;
      /** @enum {string} */
      scheduleSpan: "Standard" | "OfficeHours" | "Overnight";
      hideDelimiterFlag?: boolean | null;
      allowCCFlag?: boolean | null;
      allowTOFlag?: boolean | null;
      /** @description  Max length: 50; */
      headerColor?: string;
      /** @description  Max length: 50; */
      memberColor?: string;
      /** @description  Max length: 50; */
      contactColor?: string;
      /** @description  Max length: 50; */
      unknownColor?: string;
      calendarSetup?: components["schemas"]["CalendarSetupReference"];
      headerColorDisableFlag?: boolean | null;
      memberColorDisableFlag?: boolean | null;
      contactColorDisableFlag?: boolean | null;
      unknownColorDisableFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ServiceCodeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ServiceEmailTemplate: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      type:
        | (
            | "Any"
            | "Closed"
            | "Invoice"
            | "New"
            | "SalesOrder"
            | "PurchaseOrder"
            | "RMA"
            | "Specific"
          )
        | null;
      serviceSurvey?: components["schemas"]["ServiceSurveyReference"];
      serviceBoard?: components["schemas"]["BoardReference"];
      useSenderFlag?: boolean | null;
      /** @description From fields (first name, last name, email address) are required if useSenderFlag is false. Max length: 100; */
      firstName?: string;
      /** @description From fields (first name, last name, email address) are required if useSenderFlag is false. Max length: 100; */
      lastName?: string;
      /** @description From fields (first name, last name, email address) are required if useSenderFlag is false. Max length: 100; */
      emailAddress?: string;
      /** @description  Max length: 200; */
      subject?: string;
      body?: string;
      copySenderFlag?: boolean | null;
      tasksFlag?: boolean | null;
      resourceRecordsFlag?: boolean | null;
      externalContactNotifications?: boolean | null;
      internalContactNotifications?: boolean | null;
      serviceStatus?: components["schemas"]["ServiceStatusReference"];
      _info?: { [key: string]: string };
    };
    ServiceEmailTemplateReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      type?: string;
      _info?: { [key: string]: string };
    };
    ServiceInfo: {
      /** Format: int32 */
      id?: number;
      headerColor?: string;
      memberColor?: string;
      contactColor?: string;
      unknownColor?: string;
      _info?: { [key: string]: string };
    };
    ServiceItemReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ServiceLocation: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      /** @enum {string|null} */
      where: ("OnSite" | "Remote" | "InHouse") | null;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ServiceLocationInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ServiceLocationReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ServiceNote: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      ticketId?: number | null;
      text?: string;
      detailDescriptionFlag?: boolean | null;
      internalAnalysisFlag?: boolean | null;
      resolutionFlag?: boolean | null;
      issueFlag?: boolean | null;
      member?: components["schemas"]["MemberReference"];
      contact?: components["schemas"]["ContactReference"];
      customerUpdatedFlag?: boolean | null;
      processNotifications?: boolean | null;
      dateCreated?: string;
      createdBy?: string;
      internalFlag?: boolean | null;
      externalFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ServiceRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    ServiceSignoff: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      visibleLogoFlag?: boolean | null;
      companyInfoFlag?: boolean | null;
      billingTermsFlag?: boolean | null;
      summaryFlag?: boolean | null;
      discussionFlag?: boolean | null;
      /** @description On add/post, if this is set to true but no value is set for task, task is defaulted to ServiceTasks.All */
      taskFlag?: boolean | null;
      /**
       * @description On add/post, if this is set but no value is set for taskFlag, taskFlag is set to true
       * @enum {string|null}
       */
      task?: ("All" | "Closed" | "Open") | null;
      configurationsFlag?: boolean | null;
      internalNotesFlag?: boolean | null;
      resolutionFlag?: boolean | null;
      /** @description On add/post, if any time related flag is set to true, this is also set to true */
      timeFlag?: boolean | null;
      timeMemberFlag?: boolean | null;
      timeDateFlag?: boolean | null;
      timeStartEndFlag?: boolean | null;
      timeBillFlag?: boolean | null;
      timeHoursFlag?: boolean | null;
      timeRateFlag?: boolean | null;
      timeExtendedAmountFlag?: boolean | null;
      timeWorkTypeFlag?: boolean | null;
      timeAgreementFlag?: boolean | null;
      timeNotesFlag?: boolean | null;
      timeManualFlag?: boolean | null;
      /** Format: int32 */
      timeManualEntry?: number | null;
      timeTaxFlag?: boolean | null;
      /** @description On add/post, if any expense related flag is set to true, this is also set to true */
      expenseFlag?: boolean | null;
      expenseDateFlag?: boolean | null;
      expenseMemberFlag?: boolean | null;
      expenseTypeFlag?: boolean | null;
      expenseBillFlag?: boolean | null;
      expenseAmountFlag?: boolean | null;
      expenseAgreementFlag?: boolean | null;
      expenseNotesFlag?: boolean | null;
      expenseTaxFlag?: boolean | null;
      expenseManualFlag?: boolean | null;
      /** Format: int32 */
      expenseManualEntry?: number | null;
      /** @description On add/post, if any product related flag is set to true, this is also set to true */
      productFlag?: boolean | null;
      productDescriptionFlag?: boolean | null;
      productBillFlag?: boolean | null;
      productQuantityFlag?: boolean | null;
      productPriceFlag?: boolean | null;
      productExtendedAmountFlag?: boolean | null;
      productAgreementFlag?: boolean | null;
      productManualFlag?: boolean | null;
      /** Format: int32 */
      productManualEntry?: number | null;
      productTaxFlag?: boolean | null;
      technicianSignoffFlag?: boolean | null;
      /** @description On add/post, if customerSignoffText.Length > 0, this is set to true */
      customerSignoffTextFlag?: boolean | null;
      /** @description  Max length: 4000; */
      customerSignoffText?: string;
      customerSignoffFieldsFlag?: boolean | null;
      /** @description On add/post, if billingMethodsText.Length > 0, this is set to true */
      billingMethodsTextFlag?: boolean | null;
      /** @description  Max length: 2000; */
      billingMethodsText?: string;
      creditCardFieldsFlag?: boolean | null;
      defaultFFFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ServiceSignoffInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ServiceSignoffReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ServiceSourceReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ServiceStatusReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ServiceSubTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ServiceSurvey: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      headerIncludeLogoFlag?: boolean | null;
      /** @description  Max length: 4000; */
      headerText?: string;
      headerTextVisibleFlag?: boolean | null;
      /** @description  Max length: 500; */
      footerText?: string;
      footerTextVisibleFlag?: boolean | null;
      /** @description  Max length: 4000; */
      thankYouText?: string;
      notifyWho?: components["schemas"]["GenericIdIdentifierReference"];
      notifyWhoVisibleFlag?: boolean | null;
      notifyMember?: components["schemas"]["MemberReference"];
      _info?: { [key: string]: string };
    };
    ServiceSurveyQuestion: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      sequenceNumber?: number | null;
      /** @enum {string|null} */
      type: ("OpenEnded" | "Selection") | null;
      /** @description  Max length: 1000; */
      question: string;
      options?: components["schemas"]["ServiceSurveyQuestionOption"][];
      includeFlag?: boolean | null;
      requiredFlag?: boolean | null;
      /** Format: int32 */
      noAnswerPoints?: number | null;
      /** Format: int32 */
      surveyId?: number | null;
      _info?: { [key: string]: string };
    };
    ServiceSurveyQuestionOption: {
      includeFlag?: boolean | null;
      caption?: string;
      /** Format: int32 */
      points?: number | null;
    };
    ServiceSurveyReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ServiceTeam: {
      /** Format: int32 */
      id?: number;
      name?: string;
      leader?: components["schemas"]["MemberReference"];
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      deleteNotifyFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ServiceTeamReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ServiceTemplate: {
      /** Format: int32 */
      id?: number;
      name?: string;
      board?: components["schemas"]["BoardReference"];
      type?: components["schemas"]["ServiceTypeReference"];
      item?: components["schemas"]["ServiceItemReference"];
      subtype?: components["schemas"]["ServiceSubTypeReference"];
      serviceLocation?: components["schemas"]["ServiceLocationReference"];
      status?: components["schemas"]["ServiceStatusReference"];
      source?: components["schemas"]["ServiceSourceReference"];
      priority?: components["schemas"]["PriorityReference"];
      team?: components["schemas"]["ServiceTeamReference"];
      company?: components["schemas"]["CompanyReference"];
      contact?: components["schemas"]["ContactReference"];
      site?: components["schemas"]["SiteReference"];
      assignedNotifyFlag?: boolean | null;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      summary?: string;
      problem?: string;
      /** Format: double */
      hoursBudget?: number | null;
      internalAnalysis?: string;
      timeBillableFlag?: boolean | null;
      expenseBillableFlag?: boolean | null;
      purchaseOrderNumber?: string;
      reference?: string;
      billComplete_Flag?: boolean | null;
      billServiceSeparatelyFlag?: boolean | null;
      /** Format: double */
      billingAmount?: number | null;
      billUnapprovedTimeAndExpensesFlag?: boolean | null;
      overrideFlag?: boolean | null;
      timeInvoiceFlag?: boolean | null;
      expenseInvoiceFlag?: boolean | null;
      productInvoiceFlag?: boolean | null;
      agreement?: components["schemas"]["AgreementReference"];
      /** @enum {string} */
      billingMethod?:
        | "ActualRates"
        | "FixedFee"
        | "NotToExceed"
        | "OverrideRate";
      /** @enum {string} */
      severity?: "Low" | "Medium" | "High";
      /** @enum {string} */
      impact?: "Low" | "Medium" | "High";
      assignedBy?: components["schemas"]["MemberReference"];
      /** Format: int32 */
      scheduleDaysBefore?: number | null;
      /** Format: int32 */
      serviceDaysBefore?: number | null;
      attachScheduleToNewServiceFlag?: boolean | null;
      templateFlag?: boolean | null;
      emailContactFlag?: boolean | null;
      emailResourceFlag?: boolean | null;
      emailCCFlag?: boolean | null;
      emailCC?: string;
      restrictDownpaymentFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ServiceTemplateInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      templateFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ServiceTemplateReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      summary?: string;
      _info?: { [key: string]: string };
    };
    ServiceTicketLink: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      enabledFlag?: boolean | null;
      /** @description  Max length: 50; */
      linkText: string;
      /** @description  Max length: 1000; */
      url: string;
      _info?: { [key: string]: string };
    };
    ServiceTicketLinkInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      linkText?: string;
      url?: string;
      _info?: { [key: string]: string };
    };
    ServiceTicketNote: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      noteType?: ("TicketNote" | "TimeEntryNote" | "MeetingNote") | null;
      ticket?: components["schemas"]["TicketReference"];
      text?: string;
      isMarkdownFlag?: boolean | null;
      detailDescriptionFlag?: boolean | null;
      internalAnalysisFlag?: boolean | null;
      resolutionFlag?: boolean | null;
      timeStart?: string;
      timeEnd?: string;
      bundledFlag?: boolean | null;
      mergedFlag?: boolean | null;
      issueFlag?: boolean | null;
      originalAuthor?: string;
      member?: components["schemas"]["MemberReference"];
      contact?: components["schemas"]["ContactReference"];
      _info?: { [key: string]: string };
    };
    ServiceTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SetupScreen: {
      /** Format: int32 */
      id?: number;
      category?: string;
      name?: string;
      description?: string;
      moduleDescription?: string;
      moduleIdentifier?: string;
      moduleName?: string;
      _info?: { [key: string]: string };
    };
    Severity: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** @description  Max length: 200; */
      description: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    ShipmentMethod: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      /** @description  Max length: 200; */
      trackingUrl?: string;
      _info?: { [key: string]: string };
    };
    ShipmentMethodInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    ShipmentMethodReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SicCodeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SiteReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Skill: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      category?: components["schemas"]["SkillCategoryReference"];
      _info?: { [key: string]: string };
    };
    SkillCategory: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      _info?: { [key: string]: string };
    };
    SkillCategoryReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SkillInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    SkillReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SLA: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 25; */
      name: string;
      /** @enum {string|null} */
      basedOn: ("AllHours" | "Customer" | "MyCalendar" | "Custom") | null;
      customCalendar?: components["schemas"]["CalendarReference"];
      defaultFlag?: boolean | null;
      /** Format: int32 */
      applicationOrder?: number | null;
      hiImpactHiUrgency?: components["schemas"]["PriorityReference"];
      hiImpactMedUrgency?: components["schemas"]["PriorityReference"];
      hiImpactLowUrgency?: components["schemas"]["PriorityReference"];
      medImpactHiUrgency?: components["schemas"]["PriorityReference"];
      medImpactMedUrgency?: components["schemas"]["PriorityReference"];
      medImpactLowUrgency?: components["schemas"]["PriorityReference"];
      lowImpactHiUrgency?: components["schemas"]["PriorityReference"];
      lowImpactMedUrgency?: components["schemas"]["PriorityReference"];
      lowImpactLowUrgency?: components["schemas"]["PriorityReference"];
      /** Format: double */
      respondHours?: number | null;
      /** Format: int32 */
      respondPercent?: number | null;
      /** Format: double */
      planWithin?: number | null;
      /** Format: int32 */
      planWithinPercent?: number | null;
      /** Format: double */
      resolutionHours?: number | null;
      /** Format: int32 */
      resolutionPercent?: number | null;
      _info?: { [key: string]: string };
    };
    SLAInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    SLAPriority: {
      /** Format: int32 */
      id?: number;
      priority?: components["schemas"]["PriorityReference"];
      /** Format: double */
      respondHours?: number | null;
      /** Format: int32 */
      respondPercent?: number | null;
      /** Format: double */
      planWithin?: number | null;
      /** Format: int32 */
      planWithinPercent?: number | null;
      /** Format: double */
      resolutionHours?: number | null;
      /** Format: int32 */
      resolutionPercent?: number | null;
      sla?: components["schemas"]["SLAReference"];
      _info?: { [key: string]: string };
    };
    SLAReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    Source: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
      enteredBy?: string;
      /** Format: date-time */
      dateEntered?: string;
    };
    SourceInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    SsoConfiguration: {
      /**
       * Format: int32
       * @description Unique identifier of the SSO Configuration
       */
      id?: number;
      /** @description Descriptor of the SSO Configuration Max length: 100; */
      name: string;
      /**
       * @description Type of SSO Configuration
       * @enum {string|null}
       */
      ssoType: ("CWSSO" | "SAML") | null;
      /** @description Whether the SSO configuration is not active */
      inactiveFlag?: boolean | null;
      /** @description SAML Identity Provider Id Max length: 1000; */
      samlEntityId?: string;
      /** @description Sign in url for the SAML Identity Provider Max length: 1000; */
      samlSignInUrl?: string;
      /** @description Public certificate for Identity Provider signatures */
      samlIdpCertificate?: string;
      /** @description Name of the SAML certificate. Metadata on SAML_Idp_Certificate */
      samlCertificateName?: string;
      /** @description Who the SAML certificate was issued to. Metadata on SAML_Idp_Certificate */
      samlCertificateIssuedTo?: string;
      /** @description Thumbprint of the SAML certificate. Metadata on SAML_Idp_Certificate */
      samlCertificateThumbprint?: string;
      /**
       * Format: date-time
       * @description Date when the SAML certificate becomes valid. Metadata on SAML_Idp_Certificate
       */
      samlCertificateValidFrom?: string;
      /**
       * Format: date-time
       * @description Date when the SAML certificate is no longer valid. Metadata on SAML_Idp_Certificate
       */
      samlCertificateValidTo?: string;
      /** @description The locations where the SAML Idp Configuration is used */
      locationIds: number[];
      /** @description Client identity for this configuration of ConnectWise SSO Max length: 1000; */
      clientId?: string;
      /** @description Sign in URL for ConnectWise SSO */
      stsBaseUrl?: string;
      /** @description User Admin Url for ConnectWise SSO */
      stsUserAdminUrl?: string;
      token?: string;
      /** Format: int32 */
      submittedMemberCount?: number;
      allMembersSubmitted?: boolean;
      _info?: { [key: string]: string };
      isSsoOnByDefault?: boolean;
    };
    SsoUser: {
      /** Format: int32 */
      id?: number;
      ssoUserId?: string;
      userName?: string;
      firstName?: string;
      lastName?: string;
      email?: string;
      emailConfirmed?: boolean | null;
      disabledFlag?: boolean | null;
      linkedFlag?: boolean | null;
      dateEntered?: string;
      lastUpdated?: string;
      linkedMember?: components["schemas"]["MemberReference"];
    };
    StandardNote: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      contents: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      board?: components["schemas"]["BoardReference"];
      _info?: { [key: string]: string };
    };
    StandardNoteInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      contents?: string;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      board?: components["schemas"]["BoardReference"];
      _info?: { [key: string]: string };
    };
    State: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      identifier: string;
      /** @description  Max length: 50; */
      name: string;
      country?: components["schemas"]["CountryReference"];
      _info?: { [key: string]: string };
    };
    StateInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      identifier?: string;
      country?: components["schemas"]["CountryReference"];
      _info?: { [key: string]: string };
    };
    StateReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    StatusIndicator: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      name?: string;
      color?: string;
      icon?: string;
      _info?: { [key: string]: string };
    };
    StatusIndicatorReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    StructureReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SubCategory: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      /** @description  Max length: 50; */
      integrationXref?: string;
      defaultFlag?: boolean | null;
      category: components["schemas"]["ProductCategoryReference"];
      _info?: { [key: string]: string };
    };
    SubCategoryInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      category?: components["schemas"]["ProductCategoryReference"];
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SuccessResponse: {
      success?: boolean;
      message?: string;
    };
    Survey: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** @description  Max length: 1000; */
      instructions?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SurveyInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SurveyOption: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      caption: string;
      /** Format: int32 */
      points: number | null;
      visibleflag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SurveyQuestion: {
      /** Format: int32 */
      id?: number;
      survey?: components["schemas"]["SurveyReference"];
      /** @enum {string|null} */
      fieldType:
        | (
            | "TextArea"
            | "Button"
            | "Currency"
            | "Date"
            | "Hyperlink"
            | "IPAddress"
            | "Checkbox"
            | "Number"
            | "Percent"
            | "Text"
            | "Password"
          )
        | null;
      /** @enum {string|null} */
      entryType: ("Date" | "EntryField" | "List" | "Option") | null;
      /** Format: double */
      sequenceNumber: number | null;
      /** @description  Max length: 1000; */
      question: string;
      /** Format: int32 */
      numberOfDecimals?: number | null;
      requiredFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SurveyQuestionReference: {
      /** Format: int32 */
      id?: number | null;
      question?: string;
      _info?: { [key: string]: string };
    };
    SurveyQuestionValue: {
      /** Format: int32 */
      id?: number;
      survey?: components["schemas"]["SurveyReference"];
      question?: components["schemas"]["SurveyQuestionReference"];
      /** @description  Max length: 1000; */
      value: string;
      defaultFlag?: boolean | null;
      /** Format: int32 */
      pointValue?: number | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    SurveyReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SurveyResult: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      ticketId: number | null;
      emailAddress?: string;
      footerResponse?: string;
      contactMeFlag?: boolean | null;
      contact?: components["schemas"]["ContactReference"];
      results?: components["schemas"]["SurveyResultDetail"][];
      /** Format: int32 */
      totalPoints?: number | null;
      company?: components["schemas"]["CompanyReference"];
      /** Format: int32 */
      surveyId?: number | null;
      _info?: { [key: string]: string };
    };
    SurveyResultDetail: {
      /** Format: int32 */
      questionId?: number | null;
      /** @description If question type is Selection, this should be the option array index */
      answer?: { [key: string]: unknown };
    };
    SystemDepartmentReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    SystemLocationReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SystemMenuEntryReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    SystemSetting: {
      /** Format: int32 */
      id?: number;
      description?: string;
      value: string;
      valueType?: string;
      _info?: { [key: string]: string };
    };
    Task: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      ticketId?: number | null;
      notes?: string;
      closedFlag?: boolean | null;
      /** Format: int32 */
      priority?: number | null;
      schedule?: components["schemas"]["ScheduleEntryReference"];
      code?: components["schemas"]["ServiceCodeReference"];
      resolution?: string;
      /** @enum {string|null} */
      childScheduleAction?: ("Transfer" | "Delete" | "Done") | null;
      /** Format: int32 */
      childTicketId?: number | null;
      _info?: { [key: string]: string };
    };
    TaxableExpenseTypeLevel: {
      /** Format: int32 */
      id?: number;
      taxCodeLevel?: components["schemas"]["TaxCodeLevelReference"];
      _info?: { [key: string]: string };
    };
    TaxableProductTypeLevel: {
      /** Format: int32 */
      id?: number;
      taxCodeLevel?: components["schemas"]["TaxCodeLevelReference"];
      _info?: { [key: string]: string };
    };
    TaxableWorkRoleLevel: {
      /** Format: int32 */
      id?: number;
      taxCodeLevel?: components["schemas"]["TaxCodeLevelReference"];
      _info?: { [key: string]: string };
    };
    TaxableXRefLevel: {
      /** Format: int32 */
      id?: number;
      taxCodeLevel?: components["schemas"]["TaxCodeLevelReference"];
      _info?: { [key: string]: string };
    };
    TaxCode: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 8; */
      identifier: string;
      /** @description  Max length: 50; */
      description: string;
      /** @description  Max length: 25; */
      invoiceCaption: string;
      country?: components["schemas"]["CountryReference"];
      /** Format: date-time */
      effectiveDate: string;
      defaultFlag?: boolean | null;
      displayOnInvoiceFlag?: boolean | null;
      canadaCalculateGSTFlag?: boolean | null;
      /** Format: date-time */
      cancelDate?: string;
      /** Format: double */
      levelOneRate?: number | null;
      /** @enum {string|null} */
      levelOneRateType?: ("Amount" | "Percent") | null;
      /** Format: double */
      levelOneTaxableMax?: number | null;
      /** @description  Max length: 25; */
      levelOneCaption?: string;
      /** @description  Max length: 50; */
      levelOneTaxCodeXref?: string;
      /** @description  Max length: 100; */
      levelOneAgencyXref?: string;
      levelOneServicesFlag?: boolean | null;
      levelOneExpensesFlag?: boolean | null;
      levelOneProductsFlag?: boolean | null;
      levelOneApplySingleUnitFlag?: boolean | null;
      /** Format: double */
      levelOneApplySingleUnitMin?: number | null;
      /** Format: double */
      levelOneApplySingleUnitMax?: number | null;
      /** Format: double */
      levelTwoRate?: number | null;
      /** @enum {string|null} */
      levelTwoRateType?: ("Amount" | "Percent") | null;
      /** Format: double */
      levelTwoTaxableMax?: number | null;
      /** @description  Max length: 25; */
      levelTwoCaption?: string;
      /** @description  Max length: 50; */
      levelTwoTaxCodeXref?: string;
      /** @description  Max length: 100; */
      levelTwoAgencyXref?: string;
      levelTwoServicesFlag?: boolean | null;
      levelTwoExpensesFlag?: boolean | null;
      levelTwoProductsFlag?: boolean | null;
      levelTwoApplySingleUnitFlag?: boolean | null;
      /** Format: double */
      levelTwoApplySingleUnitMin?: number | null;
      /** Format: double */
      levelTwoApplySingleUnitMax?: number | null;
      /** Format: double */
      levelThreeRate?: number | null;
      /** @enum {string|null} */
      levelThreeRateType?: ("Amount" | "Percent") | null;
      /** Format: double */
      levelThreeTaxableMax?: number | null;
      /** @description  Max length: 25; */
      levelThreeCaption?: string;
      /** @description  Max length: 50; */
      levelThreeTaxCodeXref?: string;
      /** @description  Max length: 100; */
      levelThreeAgencyXref?: string;
      levelThreeServicesFlag?: boolean | null;
      levelThreeExpensesFlag?: boolean | null;
      levelThreeProductsFlag?: boolean | null;
      levelThreeApplySingleUnitFlag?: boolean | null;
      /** Format: double */
      levelThreeApplySingleUnitMin?: number | null;
      /** Format: double */
      levelThreeApplySingleUnitMax?: number | null;
      /** Format: double */
      levelFourRate?: number | null;
      /** @enum {string|null} */
      levelFourRateType?: ("Amount" | "Percent") | null;
      /** Format: double */
      levelFourTaxableMax?: number | null;
      /** @description  Max length: 25; */
      levelFourCaption?: string;
      /** @description  Max length: 50; */
      levelFourTaxCodeXref?: string;
      /** @description  Max length: 100; */
      levelFourAgencyXref?: string;
      levelFourServicesFlag?: boolean | null;
      levelFourExpensesFlag?: boolean | null;
      levelFourProductsFlag?: boolean | null;
      levelFourApplySingleUnitFlag?: boolean | null;
      /** Format: double */
      levelFourApplySingleUnitMin?: number | null;
      /** Format: double */
      levelFourApplySingleUnitMax?: number | null;
      /** Format: double */
      levelFiveRate?: number | null;
      /** @enum {string|null} */
      levelFiveRateType?: ("Amount" | "Percent") | null;
      /** Format: double */
      levelFiveTaxableMax?: number | null;
      /** @description  Max length: 25; */
      levelFiveCaption?: string;
      /** @description  Max length: 50; */
      levelFiveTaxCodeXref?: string;
      /** @description  Max length: 100; */
      levelFiveAgencyXref?: string;
      levelFiveServicesFlag?: boolean | null;
      levelFiveExpensesFlag?: boolean | null;
      levelFiveProductsFlag?: boolean | null;
      levelFiveApplySingleUnitFlag?: boolean | null;
      /** Format: double */
      levelFiveApplySingleUnitMin?: number | null;
      /** Format: double */
      levelFiveApplySingleUnitMax?: number | null;
      /** Format: double */
      levelSixRate?: number | null;
      /** @enum {string|null} */
      levelSixRateType?: ("Amount" | "Percent") | null;
      /** Format: double */
      levelSixTaxableMax?: number | null;
      /** @description  Max length: 25; */
      levelSixCaption?: string;
      /** @description  Max length: 50; */
      levelSixTaxCodeXref?: string;
      /** @description  Max length: 100; */
      levelSixAgencyXref?: string;
      levelSixServicesFlag?: boolean | null;
      levelSixExpensesFlag?: boolean | null;
      levelSixProductsFlag?: boolean | null;
      levelSixApplySingleUnitFlag?: boolean | null;
      /** Format: double */
      levelSixApplySingleUnitMin?: number | null;
      /** Format: double */
      levelSixApplySingleUnitMax?: number | null;
      /** @description Array of work role exemptions for the tax code */
      workRoleIds?: number[];
      addAllWorkRoles?: boolean | null;
      removeAllWorkRoles?: boolean | null;
      /** @description Array of expense type exemptions for the tax code */
      expenseTypeIds?: number[];
      addAllExpenseTypes?: boolean | null;
      removeAllExpenseTypes?: boolean | null;
      /** @description Array of product type exemptions for the tax code */
      productTypeIds?: number[];
      addAllProductTypes?: boolean | null;
      removeAllProductTypes?: boolean | null;
      _info?: { [key: string]: string };
    };
    TaxCodeInfo: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      description?: string;
      effectiveDate?: string;
      cancelDate?: string;
      _info?: { [key: string]: string };
    };
    TaxCodeLevel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      taxLevel?: number;
      /** Format: double */
      taxRate: number | null;
      /** @enum {string|null} */
      rateType: ("Amount" | "Percent") | null;
      /** Format: double */
      taxableMax?: number | null;
      /** @description  Max length: 25; */
      caption?: string;
      /** @description  Max length: 50; */
      taxCodeXref?: string;
      /** @description  Max length: 100; */
      agencyXref?: string;
      taxServicesFlag?: boolean | null;
      taxExpensesFlag?: boolean | null;
      taxProductsFlag?: boolean | null;
      singleUnitFlag?: boolean | null;
      /** Format: double */
      singleUnitMinimum?: number | null;
      /** Format: double */
      singleUnitMaximum?: number | null;
      _info?: { [key: string]: string };
    };
    TaxCodeLevelReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    TaxCodeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    TaxCodeXRef: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      description: string;
      defaultFlag?: boolean | null;
      /** @enum {string|null} */
      levelOne?: ("NonTaxable" | "Taxable") | null;
      /** @enum {string|null} */
      levelTwo?: ("NonTaxable" | "Taxable") | null;
      /** @enum {string|null} */
      levelThree?: ("NonTaxable" | "Taxable") | null;
      /** @enum {string|null} */
      levelFour?: ("NonTaxable" | "Taxable") | null;
      /** @enum {string|null} */
      levelFive?: ("NonTaxable" | "Taxable") | null;
      /** @enum {string|null} */
      levelSix?: ("NonTaxable" | "Taxable") | null;
      taxCode?: components["schemas"]["TaxCodeReference"];
      taxableLevels?: number[];
      _info?: { [key: string]: string };
    };
    TaxIntegration: {
      /** @enum {string} */
      taxIntegrationType?: "Avalara";
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      accountNumber?: string;
      /** @description  Max length: 50; */
      licenseKey?: string;
      /** @description  Max length: 250; */
      serviceUrl?: string;
      /** @description  Max length: 50; */
      companyCode?: string;
      /** @description  Max length: 50; */
      timeTaxCode?: string;
      /** @description  Max length: 50; */
      expenseTaxCode?: string;
      /** @description  Max length: 50; */
      productTaxCode?: string;
      /** @description  Max length: 50; */
      invoiceAmountTaxCode?: string;
      enabledFlag?: boolean | null;
      commitTransactionsFlag?: boolean | null;
      salesInvoiceFlag?: boolean | null;
      /** @description  Max length: 50; */
      freightTaxCode?: string;
      accountingIntegrationFlag?: boolean | null;
      taxLineFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    TaxIntegrationInfo: {
      /** Format: int32 */
      id?: number;
      enabledFlag?: boolean;
      /** @enum {string} */
      taxIntegrationType?: "Avalara";
      _info?: { [key: string]: string };
    };
    Team: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      type: ("Individual" | "Team") | null;
      member?: components["schemas"]["MemberReference"];
      salesTeam?: components["schemas"]["SalesTeamReference"];
      /** Format: int32 */
      commissionPercent?: number | null;
      referralFlag?: boolean | null;
      /** Format: int32 */
      opportunityId?: number | null;
      responsibleFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    TeamMember: {
      /** Format: int32 */
      id?: number;
      board?: components["schemas"]["BoardReference"];
      team?: components["schemas"]["ServiceTeamReference"];
      member?: components["schemas"]["MemberReference"];
      teamLeaderFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    TeamRole: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 20; */
      name: string;
      accountManagerFlag?: boolean | null;
      techFlag?: boolean | null;
      salesFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    TeamRoleInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    TeamRoleReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    TemplateGeneratedCountsModel: {
      /** Format: int32 */
      serviceCount?: number;
      /** Format: int32 */
      scheduleCount?: number;
    };
    Ticket: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      summary: string;
      /** @enum {string|null} */
      recordType?: ("ProjectIssue" | "ProjectTicket" | "ServiceTicket") | null;
      board?: components["schemas"]["BoardReference"];
      status?: components["schemas"]["ServiceStatusReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      company?: components["schemas"]["CompanyReference"];
      site?: components["schemas"]["SiteReference"];
      /** @description  Max length: 50; */
      siteName?: string;
      /** @description  Max length: 50; */
      addressLine1?: string;
      /** @description  Max length: 50; */
      addressLine2?: string;
      /** @description  Max length: 50; */
      city?: string;
      /** @description  Max length: 50; */
      stateIdentifier?: string;
      /** @description  Max length: 12; */
      zip?: string;
      country?: components["schemas"]["CountryReference"];
      contact?: components["schemas"]["ContactReference"];
      /** @description  Max length: 62; */
      contactName?: string;
      /** @description  Max length: 20; */
      contactPhoneNumber?: string;
      /** @description  Max length: 15; */
      contactPhoneExtension?: string;
      /** @description  Max length: 250; */
      contactEmailAddress?: string;
      type?: components["schemas"]["ServiceTypeReference"];
      subType?: components["schemas"]["ServiceSubTypeReference"];
      item?: components["schemas"]["ServiceItemReference"];
      team?: components["schemas"]["ServiceTeamReference"];
      owner?: components["schemas"]["MemberReference"];
      priority?: components["schemas"]["PriorityReference"];
      serviceLocation?: components["schemas"]["ServiceLocationReference"];
      source?: components["schemas"]["ServiceSourceReference"];
      /** Format: date-time */
      requiredDate?: string;
      /** Format: double */
      budgetHours?: number | null;
      opportunity?: components["schemas"]["OpportunityReference"];
      agreement?: components["schemas"]["AgreementReference"];
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      severity?: ("Low" | "Medium" | "High") | null;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      impact?: ("Low" | "Medium" | "High") | null;
      /** @description  Max length: 100; */
      externalXRef?: string;
      /** @description  Max length: 50; */
      poNumber?: string;
      /** Format: int32 */
      knowledgeBaseCategoryId?: number | null;
      /** Format: int32 */
      knowledgeBaseSubCategoryId?: number | null;
      allowAllClientsPortalView?: boolean | null;
      customerUpdatedFlag?: boolean | null;
      automaticEmailContactFlag?: boolean | null;
      automaticEmailResourceFlag?: boolean | null;
      automaticEmailCcFlag?: boolean | null;
      /** @description  Max length: 1000; */
      automaticEmailCc?: string;
      /** @description Only available for POST, will not be returned in the response */
      initialDescription?: string;
      /** @description Only available for POST, will not be returned in the response */
      initialInternalAnalysis?: string;
      /** @description Only available for POST, will not be returned in the response */
      initialResolution?: string;
      initialDescriptionFrom?: string;
      contactEmailLookup?: string;
      /** @description Can be set to false to skip notification processing when adding or updating a ticket (Defaults to True) */
      processNotifications?: boolean | null;
      skipCallback?: boolean | null;
      closedDate?: string;
      closedBy?: string;
      closedFlag?: boolean | null;
      /** Format: double */
      actualHours?: number | null;
      approved?: boolean | null;
      /** Format: double */
      estimatedExpenseCost?: number | null;
      /** Format: double */
      estimatedExpenseRevenue?: number | null;
      /** Format: double */
      estimatedProductCost?: number | null;
      /** Format: double */
      estimatedProductRevenue?: number | null;
      /** Format: double */
      estimatedTimeCost?: number | null;
      /** Format: double */
      estimatedTimeRevenue?: number | null;
      /** @enum {string|null} */
      billingMethod?:
        | ("ActualRates" | "FixedFee" | "NotToExceed" | "OverrideRate")
        | null;
      /** Format: double */
      billingAmount?: number | null;
      /** Format: double */
      hourlyRate?: number | null;
      /** @enum {string|null} */
      subBillingMethod?:
        | ("ActualRates" | "FixedFee" | "NotToExceed" | "OverrideRate")
        | null;
      /** Format: double */
      subBillingAmount?: number | null;
      subDateAccepted?: string;
      dateResolved?: string;
      dateResplan?: string;
      dateResponded?: string;
      /** Format: int32 */
      resolveMinutes?: number | null;
      /** Format: int32 */
      resPlanMinutes?: number | null;
      /** Format: int32 */
      respondMinutes?: number | null;
      isInSla?: boolean | null;
      /** Format: int32 */
      knowledgeBaseLinkId?: number | null;
      resources?: string;
      /** Format: int32 */
      parentTicketId?: number | null;
      hasChildTicket?: boolean | null;
      hasMergedChildTicketFlag?: boolean | null;
      /** @enum {string|null} */
      knowledgeBaseLinkType?:
        | (
            | "Activity"
            | "ProjectIssue"
            | "KnowledgeBaseArticle"
            | "ProjectTicket"
            | "ServiceTicket"
            | "Time"
          )
        | null;
      /** @enum {string|null} */
      billTime?: ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault") | null;
      /** @enum {string|null} */
      billExpenses?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** @enum {string|null} */
      billProducts?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** @enum {string|null} */
      predecessorType?: ("Ticket" | "Phase") | null;
      /** Format: int32 */
      predecessorId?: number | null;
      predecessorClosedFlag?: boolean | null;
      /** Format: int32 */
      lagDays?: number | null;
      lagNonworkingDaysFlag?: boolean | null;
      /** Format: date-time */
      estimatedStartDate?: string;
      /** Format: int32 */
      duration?: number | null;
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      /** Format: uuid */
      mobileGuid?: string | null;
      sla?: components["schemas"]["SLAReference"];
      slaStatus?: string;
      currency?: components["schemas"]["CurrencyReference"];
      mergedParentTicket?: components["schemas"]["TicketReference"];
      integratorTags?: string[];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    TicketBundle: {
      childTicketIds?: number[];
    };
    TicketInfo: {
      /** Format: int32 */
      id?: number;
      summary?: string;
      company?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    TicketMerge: {
      mergeTicketIds: number[];
      status?: components["schemas"]["ServiceStatusReference"];
    };
    TicketNote: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      ticketId?: number | null;
      text?: string;
      detailDescriptionFlag?: boolean | null;
      internalAnalysisFlag?: boolean | null;
      resolutionFlag?: boolean | null;
      issueFlag?: boolean | null;
      member?: components["schemas"]["MemberReference"];
      contact?: components["schemas"]["ContactReference"];
      customerUpdatedFlag?: boolean | null;
      processNotifications?: boolean | null;
      internalFlag?: boolean | null;
      externalFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    TicketReference: {
      /** Format: int32 */
      id?: number | null;
      summary?: string;
      _info?: { [key: string]: string };
    };
    TicketStopwatch: {
      _info?: { [key: string]: string };
      agreement?: components["schemas"]["AgreementReference"];
      /** @enum {string|null} */
      billableOption?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      /** Format: date-time */
      dateEntered?: string;
      /** Format: date-time */
      endTime?: string;
      /** Format: int32 */
      id?: number;
      internalNotes?: string;
      /** Format: int32 */
      locationId?: number | null;
      member?: components["schemas"]["MemberReference"];
      /** Format: uuid */
      mobileGuid?: string | null;
      /** @description  Max length: 4000; */
      notes?: string;
      serviceStatus?: components["schemas"]["ServiceStatusReference"];
      /** Format: date-time */
      startTime?: string;
      /** @enum {string|null} */
      status: ("Reset" | "Running" | "Paused" | "Stopped") | null;
      ticket?: components["schemas"]["TicketReference"];
      /** Format: uuid */
      ticketMobileGuid?: string | null;
      /** Format: int32 */
      totalPauseTime?: number | null;
      workRole?: components["schemas"]["WorkRoleReference"];
      workType?: components["schemas"]["WorkTypeReference"];
      showNotesInDiscussionFlag?: boolean | null;
      showNotesInInternalFlag?: boolean | null;
      showNotesInResolutionFlag?: boolean | null;
      emailNotesToContactFlag?: boolean | null;
      emailNotesToResourcesFlag?: boolean | null;
    };
    TicketSync: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 80; */
      name: string;
      /** @enum {string|null} */
      vendorType: "Zenith" | null;
      integratorLogin?: components["schemas"]["IntegratorLoginReference"];
      company?: components["schemas"]["CompanyReference"];
      url: string;
      userName?: string;
      password?: string;
      psg?: string;
      problemDescriptionFlag?: boolean | null;
      internalAnalysisFlag?: boolean | null;
      resolutionFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    TicketTask: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      ticketId?: number | null;
      notes?: string;
      closedFlag?: boolean | null;
      /** Format: int32 */
      priority?: number | null;
      schedule?: components["schemas"]["ScheduleEntryReference"];
      code?: components["schemas"]["ServiceCodeReference"];
      resolution?: string;
      /** @enum {string|null} */
      childScheduleAction?: ("Transfer" | "Delete" | "Done") | null;
      /** Format: int32 */
      childTicketId?: number | null;
      _info?: { [key: string]: string };
    };
    TimeAccrual: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      /** @description if vacationFlag is set to false, system will clear out or ingore the values of vacationAvailableType, vacationCarryoverAllowedFlag, vacationCarryoverLimit */
      vacationFlag?: boolean | null;
      /** @enum {string|null} */
      vacationAvailableType?: ("AnniversaryYear" | "CalendarYear") | null;
      vacationCarryoverAllowedFlag?: boolean | null;
      /** Format: double */
      vacationCarryoverLimit?: number | null;
      /** @description if sickFlag is set to false, system will clear out or ignore the values of sickAvailableType, sickCarryoverAllowedFlag, sickCarryoverLimit */
      sickFlag?: boolean | null;
      /** @enum {string|null} */
      sickAvailableType?: ("AnniversaryYear" | "CalendarYear") | null;
      sickCarryoverAllowedFlag?: boolean | null;
      /** Format: double */
      sickCarryoverLimit?: number | null;
      /** @description if ptoFlag is set to false, system will clear out or ignore the values of ptoAvailableType, ptoCarryoverAllowedFlag, ptoCarryoverLimit */
      ptoFlag?: boolean | null;
      /** @enum {string|null} */
      ptoAvailableType?: ("AnniversaryYear" | "CalendarYear") | null;
      ptoCarryoverAllowedFlag?: boolean | null;
      /** Format: double */
      ptoCarryoverLimit?: number | null;
      /** @description if holidayFlag is set to false, system will clear out or ignore the values of holidayAvailableType, holidayCarryoverAllowedFlag, holidayCarryoverLimit */
      holidayFlag?: boolean | null;
      /** @enum {string|null} */
      holidayAvailableType?: ("AnniversaryYear" | "CalendarYear") | null;
      holidayCarryoverAllowedFlag?: boolean | null;
      /** Format: double */
      holidayCarryoverLimit?: number | null;
      _info?: { [key: string]: string };
    };
    TimeAccrualDetail: {
      /** Format: int32 */
      id?: number;
      /**
       * @description Available types are: Holiday, PTO, Sick and Vacation.
       * @enum {string|null}
       */
      accrualType: ("Holiday" | "PTO" | "Sick" | "Vacation") | null;
      /** Format: int32 */
      startYear: number | null;
      /** Format: int32 */
      endYear: number | null;
      /** Format: double */
      hours: number | null;
      timeAccrual?: components["schemas"]["TimeAccrualReference"];
      _info?: { [key: string]: string };
    };
    TimeAccrualReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    TimeEntry: {
      /** Format: int32 */
      id?: number;
      company?: components["schemas"]["CompanyReference"];
      /**
       * Format: int32
       * @description If chargeToId is not specified, we asume you enter time against the company specified
       */
      chargeToId?: number | null;
      /**
       * @description If chargeToId is not specified, we asume you enter time against the company specified
       * @enum {string|null}
       */
      chargeToType?:
        | ("ServiceTicket" | "ProjectTicket" | "ChargeCode" | "Activity")
        | null;
      member?: components["schemas"]["MemberReference"];
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      businessUnitId?: number | null;
      workType?: components["schemas"]["WorkTypeReference"];
      workRole?: components["schemas"]["WorkRoleReference"];
      agreement?: components["schemas"]["AgreementReference"];
      /** Format: date-time */
      timeStart: string;
      /** Format: date-time */
      timeEnd?: string;
      /** Format: double */
      hoursDeduct?: number | null;
      /** Format: double */
      actualHours?: number | null;
      /**
       * @description  Required On Updates;
       * @enum {string|null}
       */
      billableOption?:
        | ("Billable" | "DoNotBill" | "NoCharge" | "NoDefault")
        | null;
      notes?: string;
      internalNotes?: string;
      addToDetailDescriptionFlag?: boolean | null;
      addToInternalAnalysisFlag?: boolean | null;
      addToResolutionFlag?: boolean | null;
      /** @description This is an action flag. To update this value use the /service/tickets endpoint automaticEmailResourceFlag field */
      emailResourceFlag?: boolean | null;
      /** @description This is an action flag. To update this value use the /service/tickets endpoint automaticEmailContactFlag field */
      emailContactFlag?: boolean | null;
      /** @description This is an action flag. To update this value use the /service/tickets endpoint automaticEmailCcFlag field */
      emailCcFlag?: boolean | null;
      /** @description To update this value use the /service/tickets endpoint automaticEmailCc field */
      emailCc?: string;
      /** Format: double */
      hoursBilled?: number | null;
      /** Format: double */
      invoiceHours?: number | null;
      enteredBy?: string;
      /** Format: date-time */
      dateEntered?: string;
      invoice?: components["schemas"]["InvoiceReference"];
      /** Format: uuid */
      mobileGuid?: string | null;
      /**
       * Format: double
       * @description This field may only be Updated, it is defaulted on Create
       */
      hourlyRate?: number | null;
      /** Format: double */
      overageRate?: number | null;
      /** Format: double */
      agreementHours?: number | null;
      /** Format: double */
      agreementAmount?: number | null;
      timeSheet?: components["schemas"]["TimeSheetReference"];
      /** @enum {string|null} */
      status?:
        | (
            | "Open"
            | "Rejected"
            | "PendingApproval"
            | "ErrorsCorrected"
            | "PendingProjectApproval"
            | "ApprovedByTierOne"
            | "RejectBySecondTier"
            | "ApprovedByTierTwo"
            | "ReadyToBill"
            | "Billed"
            | "WrittenOff"
            | "BilledAgreement"
          )
        | null;
      ticket?: components["schemas"]["TicketReference"];
      project?: components["schemas"]["ProjectReference"];
      phase?: components["schemas"]["ProjectPhaseReference"];
      _info?: { [key: string]: string };
      customFields?: components["schemas"]["CustomFieldValue"][];
    };
    TimeEntryAudit: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      /** @enum {string|null} */
      source?:
        | (
            | "None"
            | "Member"
            | "API"
            | "Workflow"
            | "Portal"
            | "Mobile"
            | "Network"
            | "EmailConnector"
            | "MassMaintenance"
            | "Application"
            | "SystemAPI"
            | "Conversion"
          )
        | null;
      /** @enum {string|null} */
      type?:
        | (
            | "Activity"
            | "CloseDate"
            | "Company"
            | "Contact"
            | "Conversion"
            | "Document"
            | "Forecast"
            | "Note"
            | "Notes"
            | "Opportunity"
            | "Products"
            | "Stage"
            | "Status"
            | "Surveys"
            | "Team"
            | "Tracks"
            | "Configuration"
            | "ConfigurationQuestions"
            | "DeviceBackupDetails"
            | "Tickets"
            | "Subject"
            | "ActivityOverview"
            | "Schedule"
            | "Resources"
            | "ExpenseEntry"
            | "Member"
            | "Date"
            | "Classification"
            | "Amount"
            | "ExpenseType"
            | "WorkType"
            | "WorkRole"
            | "Mileage"
            | "Billing"
            | "ExpenseHeader"
            | "Project"
            | "TimeEntry"
            | "TicketStatus"
            | "DateTime"
            | "DeductHours"
            | "ActualHours"
            | "Invoice"
            | "CompanyFinance"
            | "Billable"
            | "SalesOrder"
            | "Shipping"
            | "Profile"
            | "Group"
            | "GroupContact"
            | "GroupCompany"
            | "Options"
            | "Site"
            | "Agreement"
            | "Addition"
            | "Adjustment"
            | "API"
            | "ProjectFinance"
            | "CompanyProfile"
            | "CompanyTeam"
            | "CompanyMgmt"
            | "InvoiceTotal"
            | "BillingInformation"
            | "ShippingInformation"
            | "BillingStatus"
            | "Location"
            | "Department"
            | "Territory"
            | "Payment"
            | "Credit"
            | "SubcontractorInformation"
            | "InvoicingParameters"
            | "ApplicationParameters"
            | "Finance"
            | "Invoicing"
            | "Email"
            | "Batching"
            | "KnowledgeBase"
            | "KbArticle"
            | "KnowledgeBaseApproval"
            | "KnowledgeBaseTicket"
            | "ManageNetwork"
            | "Tasks"
            | "CustomField"
            | "ScreenConnect"
            | "SLA"
            | "Ticket"
            | "Workflow"
            | "Record"
            | "CombinedTickets"
            | "Template"
            | "PurchaseOrder"
            | "Meeting"
            | "RmaOverview"
            | "ReturnedBy"
            | "PurchasedFromVendor"
            | "WarrantyVendor"
            | "RepairVendor"
            | "AdditionalDetails"
            | "TicketTemplate"
            | "AutoGeneration"
            | "TimeInternalNote"
            | "TimeDiscussion"
            | "TimeInternal"
            | "TimeResolution"
          )
        | null;
      message?: string;
      oldValue?: string;
      newValue?: string;
      value?: string;
      _info?: { [key: string]: string };
    };
    TimeEntryReference: {
      /** Format: int32 */
      id?: number | null;
      _info?: { [key: string]: string };
    };
    TimeExpense: {
      /** Format: int32 */
      id?: number;
      tier1ApprovalFlag?: boolean | null;
      tier2ApprovalFlag?: boolean | null;
      disableTimeEntryFlag?: boolean | null;
      requireTimeNoteFlag?: boolean | null;
      requireExpenseNoteFlag?: boolean | null;
      /** Format: double */
      roundingFactor?: number | null;
      /** Format: int32 */
      invoiceStart?: number | null;
      /** @enum {string|null} */
      defaultSpecialInvoiceType?:
        | (
            | "Agreement"
            | "CreditMemo"
            | "DownPayment"
            | "Miscellaneous"
            | "Progress"
            | "Standard"
          )
        | null;
      internalCompany?: components["schemas"]["CompanyReference"];
      _info?: { [key: string]: string };
    };
    TimePeriod: {
      /** Format: int32 */
      id?: number;
      timePeriodSetup?: components["schemas"]["TimePeriodSetupReference"];
      /** Format: int32 */
      period?: number | null;
      startDate?: string;
      endDate?: string;
      deadlineDate?: string;
      _info?: { [key: string]: string };
    };
    TimePeriodSetup: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      periodApplyTo: ("Both" | "Expense" | "Time") | null;
      /** Format: int32 */
      year: number | null;
      /** Format: int32 */
      numberFuturePeriods: number | null;
      /** @enum {string|null} */
      type: ("Weekly" | "BiWeekly" | "SemiMonthly" | "Monthly") | null;
      /** @description  Max length: 100; */
      description?: string;
      /** Format: date */
      firstPeriodEndDate: string;
      /**
       * Format: int32
       * @description Only needed when type is monthly
       */
      monthlyPeriodEnds?: number | null;
      /**
       * Format: int32
       * @description Only needed when type is semi-monthly
       */
      semiMonthlyFirstPeriod?: number | null;
      /**
       * Format: int32
       * @description Only needed when type is semi-monthly
       */
      semiMonthlySecondPeriod?: number | null;
      semiMonthlyLastDayFlag?: boolean | null;
      /** @description Only needed when type is monthly */
      lastDayFlag?: boolean | null;
      /** Format: int32 */
      daysPastEndDate: number | null;
      _info?: { [key: string]: string };
    };
    TimePeriodSetupDefaults: { [key: string]: unknown };
    TimePeriodSetupReference: {
      /** Format: int32 */
      id?: number | null;
      _info?: { [key: string]: string };
    };
    TimeRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    TimeSheet: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      /** Format: int32 */
      year?: number | null;
      /** Format: int32 */
      period?: number | null;
      dateStart?: string;
      dateEnd?: string;
      /** @enum {string|null} */
      status?:
        | (
            | "Open"
            | "Rejected"
            | "PendingApproval"
            | "ErrorsCorrected"
            | "PendingProjectApproval"
            | "ApprovedByTierOne"
            | "RejectBySecondTier"
            | "ApprovedByTierTwo"
            | "ReadyToBill"
            | "Billed"
            | "WrittenOff"
            | "BilledAgreement"
          )
        | null;
      /** Format: double */
      hours?: number | null;
      deadline?: string;
      _info?: { [key: string]: string };
    };
    TimeSheetAudit: {
      /** Format: int32 */
      id?: number;
      member?: components["schemas"]["MemberReference"];
      /** @enum {string|null} */
      source?:
        | (
            | "None"
            | "Member"
            | "API"
            | "Workflow"
            | "Portal"
            | "Mobile"
            | "Network"
            | "EmailConnector"
            | "MassMaintenance"
            | "Application"
            | "SystemAPI"
            | "Conversion"
          )
        | null;
      /** @enum {string|null} */
      type?:
        | (
            | "Activity"
            | "CloseDate"
            | "Company"
            | "Contact"
            | "Conversion"
            | "Document"
            | "Forecast"
            | "Note"
            | "Notes"
            | "Opportunity"
            | "Products"
            | "Stage"
            | "Status"
            | "Surveys"
            | "Team"
            | "Tracks"
            | "Configuration"
            | "ConfigurationQuestions"
            | "DeviceBackupDetails"
            | "Tickets"
            | "Subject"
            | "ActivityOverview"
            | "Schedule"
            | "Resources"
            | "ExpenseEntry"
            | "Member"
            | "Date"
            | "Classification"
            | "Amount"
            | "ExpenseType"
            | "WorkType"
            | "WorkRole"
            | "Mileage"
            | "Billing"
            | "ExpenseHeader"
            | "Project"
            | "TimeEntry"
            | "TicketStatus"
            | "DateTime"
            | "DeductHours"
            | "ActualHours"
            | "Invoice"
            | "CompanyFinance"
            | "Billable"
            | "SalesOrder"
            | "Shipping"
            | "Profile"
            | "Group"
            | "GroupContact"
            | "GroupCompany"
            | "Options"
            | "Site"
            | "Agreement"
            | "Addition"
            | "Adjustment"
            | "API"
            | "ProjectFinance"
            | "CompanyProfile"
            | "CompanyTeam"
            | "CompanyMgmt"
            | "InvoiceTotal"
            | "BillingInformation"
            | "ShippingInformation"
            | "BillingStatus"
            | "Location"
            | "Department"
            | "Territory"
            | "Payment"
            | "Credit"
            | "SubcontractorInformation"
            | "InvoicingParameters"
            | "ApplicationParameters"
            | "Finance"
            | "Invoicing"
            | "Email"
            | "Batching"
            | "KnowledgeBase"
            | "KbArticle"
            | "KnowledgeBaseApproval"
            | "KnowledgeBaseTicket"
            | "ManageNetwork"
            | "Tasks"
            | "CustomField"
            | "ScreenConnect"
            | "SLA"
            | "Ticket"
            | "Workflow"
            | "Record"
            | "CombinedTickets"
            | "Template"
            | "PurchaseOrder"
            | "Meeting"
            | "RmaOverview"
            | "ReturnedBy"
            | "PurchasedFromVendor"
            | "WarrantyVendor"
            | "RepairVendor"
            | "AdditionalDetails"
            | "TicketTemplate"
            | "AutoGeneration"
            | "TimeInternalNote"
            | "TimeDiscussion"
            | "TimeInternal"
            | "TimeResolution"
          )
        | null;
      message?: string;
      oldValue?: string;
      newValue?: string;
      value?: string;
      _info?: { [key: string]: string };
    };
    TimeSheetReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    TimeSheetTierUpdate: {
      /** Format: int32 */
      id?: number;
      /** @enum {string|null} */
      approvalType?:
        | (
            | "DataEntry"
            | "Tier1Update"
            | "Tier2Update"
            | "Billing"
            | "Service"
            | "Project"
            | "MonthlySummary"
            | "SalesActivity"
            | "Schedule"
          )
        | null;
    };
    TimeZoneReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    TimeZoneSetup: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      timeZone?: components["schemas"]["TimeZoneReference"];
      /**
       * Format: double
       * @description The hours offset from UTC (+/-)
       */
      offset?: number | null;
      /** @description Identifies the default system time zone setup */
      defaultFlag?: boolean | null;
      /**
       * @description Determined based on system library value for specified timeZone.
       *             Not able to be used in query params at this time
       */
      daylightSavingsFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    TimeZoneSetupInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      /** Format: double */
      offset?: number | null;
      _info?: { [key: string]: string };
    };
    TimeZoneSetupReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    TodayPageCategory: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 30; */
      name: string;
      /** Format: int32 */
      sortOrder: number | null;
      location?: components["schemas"]["SystemLocationReference"];
      _info?: { [key: string]: string };
    };
    Token: {
      publicKey?: string;
      privateKey?: string;
      expiration?: string;
    };
    Track: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      name: string;
      inactiveFlag?: boolean | null;
      notifyActionIds?: number[];
      _info?: { [key: string]: string };
    };
    TrackAction: {
      /** Format: int32 */
      id?: number;
      /** @enum {string} */
      notifyType:
        | "CreateActivity"
        | "SendEmail"
        | "AddToGroup"
        | "AttachTrack"
        | "ChangeCompanyStatus"
        | "CreateServiceTicket";
      serviceTemplate?: components["schemas"]["ServiceTemplateReference"];
      specificMemberTo?: components["schemas"]["MemberReference"];
      /** @description  Max length: 250; */
      emailRecipient?: string;
      specificMemberFrom?: components["schemas"]["MemberReference"];
      /** @description  Max length: 250; */
      emailFrom?: string;
      /** @description  Max length: 100; */
      subject?: string;
      notes?: string;
      activityType?: components["schemas"]["ActivityTypeReference"];
      activityStatus?: components["schemas"]["ActivityStatusReference"];
      companyStatus?: components["schemas"]["CompanyStatusReference"];
      track?: components["schemas"]["TrackReference"];
      attachedTrack?: components["schemas"]["TrackReference"];
      group?: components["schemas"]["GroupReference"];
      ccContact?: components["schemas"]["ContactReference"];
      bccContact?: components["schemas"]["ContactReference"];
      /** Format: int32 */
      daysToExecute?: number | null;
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      notifyFrom?: components["schemas"]["NotificationRecipientReference"];
      _info?: { [key: string]: string };
    };
    TrackReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    "Type.SubType.CampaignSubType": {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      typeId?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    UnitOfMeasure: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      inactiveFlag?: boolean | null;
      defaultFlag?: boolean | null;
      /** @description  Max length: 31; */
      uomScheduleXref?: string;
      _info?: { [key: string]: string };
    };
    UnitOfMeasureReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    UnpostedExpense: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      departmentId?: number | null;
      company?: components["schemas"]["CompanyReference"];
      accountNumber?: string;
      creditAccount?: string;
      /** Format: int32 */
      expenseDetailId?: number | null;
      expenseType?: components["schemas"]["ExpenseTypeReference"];
      /** @enum {string|null} */
      classification?: ("NonReimbursable" | "Reimbursable" | "Personal") | null;
      /** @enum {string|null} */
      glType?:
        | (
            | "AP"
            | "AR"
            | "EE"
            | "EI"
            | "EO"
            | "IA"
            | "IT"
            | "P"
            | "PF"
            | "R"
            | "RA"
            | "RD"
            | "RE"
            | "RP"
            | "ST"
            | "SD"
            | "ET"
            | "FT"
            | "PT"
          )
        | null;
      member?: components["schemas"]["MemberReference"];
      dateExpense?: string;
      chargeCode?: components["schemas"]["ChargeCodeReference"];
      chargeDescription?: string;
      inPolicy?: boolean | null;
      paymentMethod?: components["schemas"]["PaymentMethodReference"];
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      total?: number | null;
      /** Format: double */
      billableAmount?: number | null;
      /** Format: double */
      nonBillableAmount?: number | null;
      agreement?: components["schemas"]["AgreementReference"];
      /** Format: double */
      agreementAmountCovered?: number | null;
      ticket?: components["schemas"]["TicketReference"];
      project?: components["schemas"]["ProjectReference"];
      projectPhase?: components["schemas"]["ProjectPhaseReference"];
      taxCode?: components["schemas"]["TaxCodeReference"];
      /** @description Used to determine if Avalara tax is enabled. */
      avalaraTaxFlag?: boolean | null;
      itemTaxableFlag?: boolean | null;
      /** Format: double */
      salesTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the state level. */
      stateTaxFlag?: boolean | null;
      stateTaxXref?: string;
      /** Format: double */
      stateTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the county level. */
      countyTaxFlag?: boolean | null;
      countyTaxXref?: string;
      /** Format: double */
      countyTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the city level. */
      cityTaxFlag?: boolean | null;
      cityTaxXref?: string;
      /** Format: double */
      cityTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the country level. */
      countryTaxFlag?: boolean | null;
      countryTaxXref?: string;
      /** Format: double */
      countryTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the composite level. */
      compositeTaxFlag?: boolean | null;
      compositeTaxXref?: string;
      /** Format: double */
      compositeTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at level six. */
      levelSixTaxFlag?: boolean | null;
      levelSixTaxXref?: string;
      /** Format: double */
      levelSixTaxAmount?: number | null;
      dateClosed?: string;
      _info?: { [key: string]: string };
    };
    UnpostedExpenseTaxableLevel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      taxLevel?: number;
      taxCodeXref?: string;
      /** Format: double */
      taxAmount?: number | null;
      _info?: { [key: string]: string };
    };
    UnpostedInvoice: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      billingLogId?: number | null;
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      departmentId?: number | null;
      company?: components["schemas"]["CompanyReference"];
      accountNumber?: string;
      billToCompany?: components["schemas"]["CompanyReference"];
      billToSite?: components["schemas"]["SiteReference"];
      shipToCompany?: components["schemas"]["CompanyReference"];
      shipToSite?: components["schemas"]["SiteReference"];
      invoiceNumber?: string;
      invoiceDate?: string;
      /** @enum {string|null} */
      invoiceType?:
        | (
            | "Agreement"
            | "CreditMemo"
            | "DownPayment"
            | "Miscellaneous"
            | "Progress"
            | "Standard"
          )
        | null;
      description?: string;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      dueDays?: string;
      dueDate?: string;
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      subTotal?: number | null;
      /** Format: double */
      total?: number | null;
      invoiceTaxableFlag?: boolean | null;
      taxCode?: components["schemas"]["TaxCodeReference"];
      /** @description Used to determine if Avalara tax is enabled. */
      avalaraTaxFlag?: boolean | null;
      itemTaxableFlag?: boolean | null;
      /** Format: double */
      salesTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the state level. */
      stateTaxFlag?: boolean | null;
      stateTaxXref?: string;
      /** Format: double */
      stateTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the county level. */
      countyTaxFlag?: boolean | null;
      countyTaxXref?: string;
      /** Format: double */
      countyTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the city level. */
      cityTaxFlag?: boolean | null;
      cityTaxXref?: string;
      /** Format: double */
      cityTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the country level. */
      countryTaxFlag?: boolean | null;
      countryTaxXref?: string;
      /** Format: double */
      countryTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the composite level. */
      compositeTaxFlag?: boolean | null;
      compositeTaxXref?: string;
      /** Format: double */
      compositeTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at level six. */
      levelSixTaxFlag?: boolean | null;
      levelSixTaxXref?: string;
      /** Format: double */
      levelSixTaxAmount?: number | null;
      createdBy?: string;
      dateClosed?: string;
      _info?: { [key: string]: string };
    };
    UnpostedInvoiceTaxableLevel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      taxLevel?: number;
      taxCodeXref?: string;
      /** Format: double */
      taxAmount?: number | null;
      _info?: { [key: string]: string };
    };
    UnpostedProcurement: {
      /** Format: int32 */
      id?: number;
      description?: string;
      unpostedProductId?: string;
      /** Format: int32 */
      locationId?: number | null;
      /** Format: int32 */
      departmentId?: number | null;
      /** @enum {string|null} */
      procurementType?: ("Purchase" | "Adjustment" | "Transfer") | null;
      purchaseOrder?: components["schemas"]["PurchaseOrderReference"];
      purchaseDate?: string;
      trackingNumber?: string;
      billingTerms?: components["schemas"]["BillingTermsReference"];
      currency?: components["schemas"]["CurrencyReference"];
      /** Format: double */
      total?: number | null;
      taxCode?: components["schemas"]["TaxCodeReference"];
      /** @description Used to determine if Avalara tax is enabled. */
      avalaraTaxFlag?: boolean | null;
      itemTaxableFlag?: boolean | null;
      purchaseOrderTaxableFlag?: boolean | null;
      /** @description Set to true if transaction is taxable at the state level. */
      stateTaxFlag?: boolean | null;
      stateTaxXref?: string;
      /** Format: double */
      stateTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the county level. */
      countyTaxFlag?: boolean | null;
      countyTaxXref?: string;
      /** Format: double */
      countyTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the city level. */
      cityTaxFlag?: boolean | null;
      cityTaxXref?: string;
      /** Format: double */
      cityTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the country level. */
      countryTaxFlag?: boolean | null;
      countryTaxXref?: string;
      /** Format: double */
      countryTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at the composite level. */
      compositeTaxFlag?: boolean | null;
      compositeTaxXref?: string;
      /** Format: double */
      compositeTaxAmount?: number | null;
      /** @description Set to true if transaction is taxable at level six. */
      levelSixTaxFlag?: boolean | null;
      levelSixTaxXref?: string;
      /** Format: double */
      levelSixTaxAmount?: number | null;
      /** Format: double */
      taxTotal?: number | null;
      customer?: components["schemas"]["CompanyReference"];
      vendor?: components["schemas"]["CompanyReference"];
      vendorAccountNumber?: string;
      vendorInvoiceNumber?: string;
      vendorInvoiceDate?: string;
      taxFreightFlag?: boolean | null;
      /** Format: double */
      freightTaxTotal?: number | null;
      /** Format: double */
      freightCost?: number | null;
      dateClosed?: string;
      _info?: { [key: string]: string };
    };
    UnpostedProcurementTaxableLevel: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      taxLevel?: number;
      taxCodeXref?: string;
      /** Format: double */
      taxAmount?: number | null;
      _info?: { [key: string]: string };
    };
    Usage: {
      type?: string;
      /** Format: int32 */
      count?: number | null;
      /** Format: int32 */
      id?: number | null;
      description?: string;
      hyperlink?: string;
      typeKey?: string;
    };
    UserDefinedField: {
      /**
       * Format: int32
       * @description ID of the custom user defined field
       */
      id?: number;
      /**
       * Format: int32
       * @description Id of the Pod where the custom field will be placed
       */
      podId: number | null;
      /** @description Field caption Max length: 25; */
      caption: string;
      /**
       * Format: int32
       * @description Must be between 1 and 500.  This defines the order in which the custom fields will appear
       */
      sequenceNumber: number | null;
      /** @description Help text to accompany the custom field Max length: 1000; */
      helpText?: string;
      /** @enum {string|null} */
      fieldTypeIdentifier:
        | (
            | "TextArea"
            | "Button"
            | "Currency"
            | "Date"
            | "Hyperlink"
            | "IPAddress"
            | "Checkbox"
            | "Number"
            | "Percent"
            | "Text"
            | "Password"
          )
        | null;
      /**
       * Format: int32
       * @description Only valid for Number or percent
       */
      numberDecimals?: number | null;
      /** @enum {string|null} */
      entryTypeIdentifier?: ("Date" | "EntryField" | "List" | "Option") | null;
      requiredFlag?: boolean | null;
      displayOnScreenFlag?: boolean | null;
      readOnlyFlag?: boolean | null;
      /** @description Denotes that this custom field is included on a list view */
      listViewFlag?: boolean | null;
      /** @description Only available with Button Field Type. Required when entryTypeIdentifier is button Max length: 1000; */
      buttonUrl?: string;
      options?: components["schemas"]["UserDefinedFieldOption"][];
      businessUnitIds?: number[];
      locationIds?: number[];
      addAllBusinessUnits?: boolean | null;
      removeAllBusinessUnits?: boolean | null;
      addAllLocations?: boolean | null;
      removeAllLocations?: boolean | null;
      /**
       * Format: date-time
       * @description Date in UTC the custom field was created
       */
      dateCreated?: string;
      _info?: { [key: string]: string };
    };
    UserDefinedFieldInfo: {
      /**
       * Format: int32
       * @description ID of the custom user defined field
       */
      id?: number;
      /**
       * Format: int32
       * @description Id of the Pod where the custom field will be placed
       */
      podId?: number | null;
      /** @description Field caption */
      caption?: string;
      /**
       * Format: int32
       * @description Must be between 1 and 500.  This defines the order in which the custom fields will appear
       */
      sequenceNumber?: number | null;
      /** @description Help text to accompany the custom field */
      helpText?: string;
      /** @enum {string|null} */
      fieldTypeIdentifier?:
        | (
            | "TextArea"
            | "Button"
            | "Currency"
            | "Date"
            | "Hyperlink"
            | "IPAddress"
            | "Checkbox"
            | "Number"
            | "Percent"
            | "Text"
            | "Password"
          )
        | null;
      /**
       * Format: int32
       * @description Only valid for Number or percent
       */
      numberDecimals?: number | null;
      /** @enum {string|null} */
      entryTypeIdentifier?: ("Date" | "EntryField" | "List" | "Option") | null;
      requiredFlag?: boolean | null;
      displayOnScreenFlag?: boolean | null;
      readOnlyFlag?: boolean | null;
      /** @description Denotes that this custom field is included on a list view */
      listViewFlag?: boolean | null;
      /** @description Only available with Button Field Type. Required when entryTypeIdentifier is button */
      buttonUrl?: string;
      options?: components["schemas"]["UserDefinedFieldOption"][];
      /** @description List of business unit ids using custom field */
      businessUnitIds?: number[];
      /** @description List of locations ids using custom field */
      locationIds?: number[];
      /** @description Date in UTC the custom field was created */
      dateCreated?: string;
      _info?: { [key: string]: string };
    };
    UserDefinedFieldOption: {
      /** Format: int32 */
      id?: number;
      optionValue?: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      /** Format: int32 */
      sortOrder?: number | null;
    };
    UserDefinedFieldReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    ValidatePortalRequest: {
      email: string;
      password: string;
    };
    ValidatePortalResponse: {
      success?: boolean;
      /** Format: int32 */
      contactId?: number;
    };
    ValidationError: {
      code?: string;
      message?: string;
      resource?: string;
      field?: string;
      details?: string;
    };
    Warehouse: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      company?: components["schemas"]["CompanyReference"];
      location?: components["schemas"]["SystemLocationReference"];
      contact?: components["schemas"]["ContactReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      manager?: components["schemas"]["MemberReference"];
      site?: components["schemas"]["SiteReference"];
      /** @description  Max length: 10; */
      locationXref?: string;
      locationDefaultFlag?: boolean | null;
      overallDefaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      lockedFlag?: boolean | null;
      currency?: components["schemas"]["CurrencyReference"];
      _info?: { [key: string]: string };
    };
    WarehouseBin: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      warehouse?: components["schemas"]["WarehouseReference"];
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      /** Format: double */
      minQuantity?: number | null;
      /** Format: double */
      maxQuantity?: number | null;
      overflowBin?: components["schemas"]["WarehouseBinReference"];
      manager?: components["schemas"]["MemberReference"];
      /** Format: double */
      length?: number | null;
      /** Format: double */
      width?: number | null;
      /** Format: double */
      height?: number | null;
      /** Format: double */
      weight?: number | null;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      /** Format: int32 */
      quantityOnHand?: number | null;
      company?: components["schemas"]["CompanyReference"];
      transferBin?: components["schemas"]["WarehouseBinReference"];
      _info?: { [key: string]: string };
    };
    WarehouseBinInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      warehouse?: components["schemas"]["WarehouseReference"];
      inactiveFlag?: boolean | null;
      defaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    WarehouseBinReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    WarehouseInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    WarehouseReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      lockedFlag?: boolean;
      _info?: { [key: string]: string };
    };
    WonRevenueReference: {
      /** Format: int32 */
      id?: number | null;
      /** Format: double */
      revenue?: number | null;
      /** Format: double */
      cost?: number | null;
      /** Format: double */
      margin?: number | null;
      /** Format: double */
      percentage?: number | null;
      _info?: { [key: string]: string };
    };
    Workflow: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 100; */
      name: string;
      tableType?: components["schemas"]["WorkflowTableTypeReference"];
      location?: components["schemas"]["SystemLocationReference"];
      department?: components["schemas"]["SystemDepartmentReference"];
      /** @description Batches can not be turned on until after the workflow is created and it has atleast one event associated with it */
      activateFlag?: boolean | null;
      /** Format: int32 */
      batchInterval?: number | null;
      /**
       * @description If not specified, defaults to Minutes. Months is not supported as month length varies
       * @enum {string|null}
       */
      batchFrequencyUnit?: ("Minutes" | "Hours" | "Days") | null;
      /** Format: date-time */
      batchLastRan?: string;
      /**
       * @description If activateFlag is true, batchSchedule is required
       * @enum {string|null}
       */
      batchSchedule?: ("AnyTime" | "MyCompanyOfficeHours" | "SlaHours") | null;
      board?: components["schemas"]["BoardReference"];
      _info?: { [key: string]: string };
    };
    WorkflowAction: {
      /** Format: int32 */
      id?: number;
      notifyType: components["schemas"]["NotifyTypeReference"];
      notifyWho?: components["schemas"]["NotificationRecipientReference"];
      specificMemberTo?: components["schemas"]["MemberReference"];
      /** @description Required when notifyWho is set to: "Email Address" Max length: 250; */
      emailRecipient?: string;
      notifyFrom?: components["schemas"]["NotificationRecipientReference"];
      specificMemberFrom?: components["schemas"]["MemberReference"];
      /** @description Required when notifyFrom is set to: "Email Address" Max length: 250; */
      emailFrom?: string;
      ccContact?: components["schemas"]["ContactReference"];
      bccContact?: components["schemas"]["ContactReference"];
      /** @description Required when notifyType is set to: "Create Activity", "Send Email", "Assign Resource" Max length: 100; */
      subject?: string;
      notes?: string;
      activityStatus?: components["schemas"]["ActivityStatusReference"];
      activityType?: components["schemas"]["ActivityTypeReference"];
      attachedTrack?: components["schemas"]["TrackReference"];
      /** Format: int32 */
      daysToExecute?: number | null;
      board?: components["schemas"]["BoardReference"];
      boardStatus?: components["schemas"]["ServiceStatusReference"];
      serviceType?: components["schemas"]["ServiceTypeReference"];
      serviceSubType?: components["schemas"]["ServiceSubTypeReference"];
      serviceItem?: components["schemas"]["ServiceItemReference"];
      group?: components["schemas"]["GroupReference"];
      serviceTemplate?: components["schemas"]["ServiceTemplateReference"];
      /** Format: int32 */
      invoiceMinDays?: number | null;
      automateScript?: components["schemas"]["AutomateScriptReference"];
      scriptSuccessStatus?: components["schemas"]["ServiceStatusReference"];
      scriptFailStatus?: components["schemas"]["ServiceStatusReference"];
      detailNotesFlag?: boolean | null;
      internalNotesFlag?: boolean | null;
      auditNotesFlag?: boolean | null;
      servicePriority?: components["schemas"]["PriorityReference"];
      updateOwnerFlag?: boolean | null;
      salesOrderStatus?: components["schemas"]["OrderStatusReference"];
      projectStatus?: components["schemas"]["ProjectStatusReference"];
      companyStatus?: components["schemas"]["CompanyStatusReference"];
      attachments?: number[];
      serviceSurvey?: components["schemas"]["ServiceSurveyReference"];
      specificTeamTo?: components["schemas"]["GenericBoardTeamReference"];
      /**
       * @description Required when notifyType is set to: "Attach Configuration"
       * @enum {string|null}
       */
      attachConfigurationsFor?: ("Company" | "Contact") | null;
      configurationType?: components["schemas"]["ConfigurationTypeReference"];
      configurationStatus?: components["schemas"]["ConfigurationStatusReference"];
      _info?: { [key: string]: string };
    };
    WorkflowActionAutomateParameter: {
      /** Format: int32 */
      id?: number;
      name: string;
      value?: string;
    };
    WorkflowActionUserDefinedField: {
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      eventId?: number;
      /** Format: int32 */
      actionId?: number;
      caption?: string;
      /** Format: int32 */
      userDefinedFieldId?: number;
      value?: string;
      overwriteFlag?: boolean | null;
      podDescription?: string;
      fieldTypeId?: string;
      entryTypeId?: string;
      requiredFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    WorkflowAttachment: {
      /** Format: int32 */
      id?: number;
      name?: string;
      _info?: { [key: string]: string };
    };
    WorkflowEvent: {
      /** Format: int32 */
      id?: number;
      name?: string;
      eventCondition: string;
      /**
       * @description Required when exectionTimes is set to MultipleTimes or Continuously
       * @enum {string|null}
       */
      frequencyUnit?: ("Minutes" | "Hours" | "Days" | "Months") | null;
      /**
       * Format: int32
       * @description Required when exectionTimes is set to MultipleTimes or Continuously
       */
      frequencyOfExecution?: number | null;
      /**
       * Format: int32
       * @description Required when exectionTimes is set to MultipleTimes
       */
      maxNumberOfExecution?: number | null;
      /**
       * @description Defaults to Once when not specified
       * @enum {string|null}
       */
      executionTime?: ("Once" | "MultipleTimes" | "Continuously") | null;
      _info?: { [key: string]: string };
    };
    WorkflowNotifyType: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      name?: string;
      /** @description If the current action is available because it is already set up. Pertains to integrations such as Automate */
      isSetupFlag?: boolean | null;
      /** @description If the current action effects external objects e.g. integrations or sending an email */
      externalFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    WorkflowNotifyTypeInfo: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      name?: string;
      isSetupFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    WorkflowTableType: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    WorkflowTableTypeInfo: {
      /** Format: int32 */
      id?: number;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    WorkflowTableTypeReference: {
      /** Format: int32 */
      id?: number | null;
      identifier?: string;
      name?: string;
      _info?: { [key: string]: string };
    };
    WorkflowTrigger: {
      /** Format: int32 */
      id?: number;
      name?: string;
      description?: string;
      hasOptionsFlag?: boolean | null;
      hasOperatorFlag?: boolean | null;
      customField?: components["schemas"]["UserDefinedFieldReference"];
      expectedType?: string;
      _info?: { [key: string]: string };
    };
    WorkflowTriggerOption: {
      value?: string;
      name?: string;
      customField?: components["schemas"]["UserDefinedFieldReference"];
      _info?: { [key: string]: string };
    };
    WorkRole: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** Format: double */
      hourlyRate?: number | null;
      /** @description  Max length: 50; */
      integrationXref?: string;
      inactiveFlag?: boolean | null;
      addAllLocations?: boolean | null;
      removeAllLocations?: boolean | null;
      /** @description Used only on create to add the work role to all agreement and agreement type exclusion lists */
      addAllAgreementExclusions?: boolean | null;
      locationIds?: number[];
      _info?: { [key: string]: string };
    };
    WorkRoleExemption: {
      /** Format: int32 */
      id?: number;
      workRole: components["schemas"]["WorkRoleReference"];
      taxableLevels?: number[];
      _info?: { [key: string]: string };
    };
    WorkRoleInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      inactiveFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    WorkRoleLocation: {
      /** Format: int32 */
      id?: number;
      location?: components["schemas"]["SystemLocationReference"];
      /** Format: double */
      hourlyRate?: number | null;
      workRole?: components["schemas"]["WorkRoleReference"];
      _info?: { [key: string]: string };
    };
    WorkRoleReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
    WorkType: {
      /** Format: int32 */
      id?: number;
      /** @description  Max length: 50; */
      name: string;
      /** @enum {string|null} */
      billTime: ("Billable" | "DoNotBill" | "NoCharge") | null;
      /** @enum {string|null} */
      rateType: ("AdjAmount" | "Custom" | "Multiplier") | null;
      /** Format: double */
      rate: number | null;
      /** Format: double */
      hoursMin?: number | null;
      /** Format: double */
      hoursMax?: number | null;
      /** Format: double */
      roundBillHoursTo?: number | null;
      /** @enum {string|null} */
      accrualType?: ("Holiday" | "PTO" | "Sick" | "Vacation") | null;
      inactiveFlag?: boolean | null;
      overallDefaultFlag?: boolean | null;
      activityDefaultFlag?: boolean | null;
      utilizationFlag?: boolean | null;
      /** Format: double */
      costMultiplier?: number | null;
      /** @description  Max length: 50; */
      integrationXRef?: string;
      /** @description Used only on create to add the work type to all agreement and agreement type exclusion lists */
      addAllAgreementExclusions?: boolean | null;
      _info?: { [key: string]: string };
    };
    WorkTypeInfo: {
      /** Format: int32 */
      id?: number;
      name?: string;
      defaultFlag?: boolean | null;
      inactiveFlag?: boolean | null;
      activityDefaultFlag?: boolean | null;
      _info?: { [key: string]: string };
    };
    WorkTypeReference: {
      /** Format: int32 */
      id?: number | null;
      name?: string;
      _info?: { [key: string]: string };
    };
  };
}

export interface operations {
  getCompanyAddressFormats: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AddressFormat */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AddressFormat"][];
        };
      };
    };
  };
  postCompanyAddressFormats: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AddressFormat */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AddressFormat"];
        };
      };
    };
    /** addressFormat */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddressFormat"];
      };
    };
  };
  getCompanyAddressFormatsById: {
    parameters: {
      path: {
        /** addressFormatId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AddressFormat */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AddressFormat"];
        };
      };
    };
  };
  putCompanyAddressFormatsById: {
    parameters: {
      path: {
        /** addressFormatId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AddressFormat */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AddressFormat"];
        };
      };
    };
    /** addressFormat */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddressFormat"];
      };
    };
  };
  deleteCompanyAddressFormatsById: {
    parameters: {
      path: {
        /** addressFormatId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyAddressFormatsById: {
    parameters: {
      path: {
        /** addressFormatId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AddressFormat */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AddressFormat"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyAddressFormatsByIdInfo: {
    parameters: {
      path: {
        /** AddressFormatInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AddressFormatInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AddressFormatInfo"];
        };
      };
    };
  };
  getCompanyAddressFormatsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyAddressFormatsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of addressFormatInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AddressFormatInfo"][];
        };
      };
    };
  };
  getCompanyAddressFormatsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyBillingSetupsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCommunicationTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CommunicationType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CommunicationType"][];
        };
      };
    };
  };
  postCompanyCommunicationTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CommunicationType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CommunicationType"];
        };
      };
    };
    /** communicationType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CommunicationType"];
      };
    };
  };
  getCompanyCommunicationTypesById: {
    parameters: {
      path: {
        /** communicationTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CommunicationType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CommunicationType"];
        };
      };
    };
  };
  putCompanyCommunicationTypesById: {
    parameters: {
      path: {
        /** communicationTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CommunicationType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CommunicationType"];
        };
      };
    };
    /** communicationType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CommunicationType"];
      };
    };
  };
  deleteCompanyCommunicationTypesById: {
    parameters: {
      path: {
        /** communicationTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCommunicationTypesById: {
    parameters: {
      path: {
        /** communicationTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CommunicationType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CommunicationType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCommunicationTypesByIdInfo: {
    parameters: {
      path: {
        /** AddressFormatInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CommunicationTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CommunicationTypeInfo"];
        };
      };
    };
  };
  getCompanyCommunicationTypesByIdUsages: {
    parameters: {
      path: {
        /** communicationTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCommunicationTypesByIdUsagesList: {
    parameters: {
      path: {
        /** communicationTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCommunicationTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCommunicationTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CommunicationTypeInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CommunicationTypeInfo"][];
        };
      };
    };
  };
  getCompanyCommunicationTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompanies: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConnectWise.Apis.v3_0.v2015_3.Company.Company.Company */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company"][];
        };
      };
    };
  };
  postCompanyCompanies: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Company.Company.Company */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company"];
        };
      };
    };
    /** company */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company"];
      };
    };
  };
  getCompanyCompaniesById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Company.Company.Company */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company"];
        };
      };
    };
  };
  putCompanyCompaniesById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Company.Company.Company */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company"];
        };
      };
    };
    /** company */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company"];
      };
    };
  };
  deleteCompanyCompaniesById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Company.Company.Company */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postCompanyCompaniesByIdMerge: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** merge */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyMerge"];
      };
    };
  };
  getCompanyCompaniesByIdUsages: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCompaniesByIdUsagesList: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdCustomStatusNotes: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyCustomNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCustomNote"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdCustomStatusNotes: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyCustomNote */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCustomNote"];
        };
      };
    };
    /** customNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyCustomNote"];
      };
    };
  };
  getCompanyCompaniesByParentIdCustomStatusNotesById: {
    parameters: {
      path: {
        /** customStatusNoteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyCustomNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCustomNote"];
        };
      };
    };
  };
  putCompanyCompaniesByParentIdCustomStatusNotesById: {
    parameters: {
      path: {
        /** customStatusNoteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyCustomNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCustomNote"];
        };
      };
    };
    /** customNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyCustomNote"];
      };
    };
  };
  deleteCompanyCompaniesByParentIdCustomStatusNotesById: {
    parameters: {
      path: {
        /** customStatusNoteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesByParentIdCustomStatusNotesById: {
    parameters: {
      path: {
        /** customStatusNoteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyCustomNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCustomNote"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesByParentIdCustomStatusNotesCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdGroups: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyGroup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyGroup"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdGroups: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyGroup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyGroup"];
        };
      };
    };
    /** companyGroup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyGroup"];
      };
    };
  };
  getCompanyCompaniesByParentIdGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyGroup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyGroup"];
        };
      };
    };
  };
  putCompanyCompaniesByParentIdGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyGroup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyGroup"];
        };
      };
    };
    /** companyGroup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyGroup"];
      };
    };
  };
  deleteCompanyCompaniesByParentIdGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesByParentIdGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyGroup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyGroup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesByParentIdGroupsCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdManagementReportNotifications: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagementReportNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdManagementReportNotifications: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportNotification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"];
        };
      };
    };
    /** managementReportNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementReportNotification"];
      };
    };
  };
  getCompanyCompaniesByParentIdManagementReportNotificationsById: {
    parameters: {
      path: {
        /** managementReportNotificationId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"];
        };
      };
    };
  };
  putCompanyCompaniesByParentIdManagementReportNotificationsById: {
    parameters: {
      path: {
        /** managementReportNotificationId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"];
        };
      };
    };
    /** managementReportNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementReportNotification"];
      };
    };
  };
  deleteCompanyCompaniesByParentIdManagementReportNotificationsById: {
    parameters: {
      path: {
        /** managementReportNotificationId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesByParentIdManagementReportNotificationsById: {
    parameters: {
      path: {
        /** managementReportNotificationId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesByParentIdManagementReportNotificationsCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdManagementReportSetup: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagementReportSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportSetup"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdManagementReportSetup: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportSetup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportSetup"];
        };
      };
    };
    /** managementReportSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementReportSetup"];
      };
    };
  };
  putCompanyCompaniesByParentIdManagementReportSetupById: {
    parameters: {
      path: {
        /** managementReportSetupId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportSetup"];
        };
      };
    };
    /** managementReportSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementReportSetup"];
      };
    };
  };
  patchCompanyCompaniesByParentIdManagementReportSetupById: {
    parameters: {
      path: {
        /** managementReportSetupId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesByParentIdManagementSummaryReports: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyManagementSummary */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyManagementSummary"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdManagementSummaryReports: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyManagementSummary */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyManagementSummary"];
        };
      };
    };
    /** managementSummary */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyManagementSummary"];
      };
    };
  };
  getCompanyCompaniesByParentIdManagementSummaryReportsById: {
    parameters: {
      path: {
        /** managementSummaryReportId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyManagementSummary */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyManagementSummary"];
        };
      };
    };
  };
  putCompanyCompaniesByParentIdManagementSummaryReportsById: {
    parameters: {
      path: {
        /** managementSummaryReportId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyManagementSummary */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyManagementSummary"];
        };
      };
    };
    /** managementSummary */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyManagementSummary"];
      };
    };
  };
  deleteCompanyCompaniesByParentIdManagementSummaryReportsById: {
    parameters: {
      path: {
        /** managementSummaryReportId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesByParentIdManagementSummaryReportsById: {
    parameters: {
      path: {
        /** managementSummaryReportId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyManagementSummary */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyManagementSummary"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesByParentIdManagementSummaryReportsCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdNotes: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNote"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdNotes: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyNote */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNote"];
        };
      };
    };
    /** companyNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyNote"];
      };
    };
  };
  getCompanyCompaniesByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNote"];
        };
      };
    };
  };
  putCompanyCompaniesByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNote"];
        };
      };
    };
    /** companyNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyNote"];
      };
    };
  };
  deleteCompanyCompaniesByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNote"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesByParentIdNotesCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdSites: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanySite */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanySite"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdSites: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanySite */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanySite"];
        };
      };
    };
    /** site */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanySite"];
      };
    };
  };
  getCompanyCompaniesByParentIdSitesById: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanySite */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanySite"];
        };
      };
    };
  };
  putCompanyCompaniesByParentIdSitesById: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanySite */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanySite"];
        };
      };
    };
    /** site */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanySite"];
      };
    };
  };
  deleteCompanyCompaniesByParentIdSitesById: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesByParentIdSitesById: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanySite */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanySite"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesByParentIdSitesByIdUsages: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdSitesByIdUsagesList: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdSitesCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdSurveysCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdTeams: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyTeam"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdTeams: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTeam */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyTeam"];
        };
      };
    };
    /** companyTeam */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyTeam"];
      };
    };
  };
  getCompanyCompaniesByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyTeam"];
        };
      };
    };
  };
  putCompanyCompaniesByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyTeam"];
        };
      };
    };
    /** companyTeam */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyTeam"];
      };
    };
  };
  deleteCompanyCompaniesByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyTeam"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesByParentIdTeamsCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdTracks: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactTrack */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactTrack"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdTracks: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTrack */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactTrack"];
        };
      };
    };
    /** track */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactTrack"];
      };
    };
  };
  getCompanyCompaniesByParentIdTracksById: {
    parameters: {
      path: {
        /** trackId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTrack */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactTrack"];
        };
      };
    };
  };
  deleteCompanyCompaniesByParentIdTracksById: {
    parameters: {
      path: {
        /** trackId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getCompanyCompaniesByParentIdTracksCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesByParentIdTypeAssociations: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCompanyTypeAssociation.CompanyTypeAssociation"][];
        };
      };
    };
  };
  postCompanyCompaniesByParentIdTypeAssociations: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTypeAssociation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCompanyTypeAssociation.CompanyTypeAssociation"];
        };
      };
    };
    /** companyTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyCompanyTypeAssociation.CompanyTypeAssociation"];
      };
    };
  };
  getCompanyCompaniesByParentIdTypeAssociationsById: {
    parameters: {
      path: {
        /** typeAssociationId */
        id: number;
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCompanyTypeAssociation.CompanyTypeAssociation"];
        };
      };
    };
  };
  putCompanyCompaniesByParentIdTypeAssociationsById: {
    parameters: {
      path: {
        /** typeAssociationId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCompanyTypeAssociation.CompanyTypeAssociation"];
        };
      };
    };
    /** companyTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyCompanyTypeAssociation.CompanyTypeAssociation"];
      };
    };
  };
  deleteCompanyCompaniesByParentIdTypeAssociationsById: {
    parameters: {
      path: {
        /** typeAssociationId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesByParentIdTypeAssociationsById: {
    parameters: {
      path: {
        /** typeAssociationId */
        id: number;
        /** companyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyCompanyTypeAssociation.CompanyTypeAssociation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesByParentIdTypeAssociationsCount: {
    parameters: {
      path: {
        /** companyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesDefault: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Company.Company.Company */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company"];
        };
      };
    };
  };
  getCompanyCompaniesInfoTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyTypeInfo"][];
        };
      };
    };
  };
  getCompanyCompaniesInfoTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyTypeInfo"];
        };
      };
    };
  };
  getCompanyCompaniesInfoTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyStatus"][];
        };
      };
    };
  };
  postCompanyCompaniesStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyStatus"];
        };
      };
    };
    /** companyStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyStatus"];
      };
    };
  };
  getCompanyCompaniesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyStatus"];
        };
      };
    };
  };
  putCompanyCompaniesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyStatus"];
        };
      };
    };
    /** companyStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyStatus"];
      };
    };
  };
  deleteCompanyCompaniesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesStatusesByIdUsages: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCompaniesStatusesByIdUsagesList: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCompaniesStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompaniesTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyType"][];
        };
      };
    };
  };
  postCompanyCompaniesTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyType"];
        };
      };
    };
    /** companyType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyType"];
      };
    };
  };
  getCompanyCompaniesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyType"];
        };
      };
    };
  };
  putCompanyCompaniesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyType"];
        };
      };
    };
    /** companyType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyType"];
      };
    };
  };
  deleteCompanyCompaniesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompaniesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompaniesTypesByIdUsages: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCompaniesTypesByIdUsagesList: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyCompaniesTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  putCompanyCompanyFinanceById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyFinance */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyFinance"];
        };
      };
    };
    /** CompanyFinance */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyFinance"];
      };
    };
  };
  getCompanyCompanyPickerItems: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyPickerItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyPickerItem"][];
        };
      };
    };
  };
  postCompanyCompanyPickerItems: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyPickerItem */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyPickerItem"];
        };
      };
    };
    /** companyPickerItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyPickerItem"];
      };
    };
  };
  getCompanyCompanyPickerItemsById: {
    parameters: {
      path: {
        /** companyPickerItemId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyPickerItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyPickerItem"];
        };
      };
    };
  };
  deleteCompanyCompanyPickerItemsById: {
    parameters: {
      path: {
        /** companyPickerItemId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  postCompanyCompanyPickerItemsClear: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ClearPickerRequest */
      204: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ClearPickerRequest"];
        };
      };
    };
    /** clearPickerRequest */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClearPickerRequest"];
      };
    };
  };
  getCompanyCompanyPickerItemsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCompanyTypeAssociations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.CompanyTypeAssociation"][];
        };
      };
    };
  };
  postCompanyCompanyTypeAssociations: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTypeAssociation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.CompanyTypeAssociation"];
        };
      };
    };
    /** companyTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company.CompanyTypeAssociation"];
      };
    };
  };
  getCompanyCompanyTypeAssociationsById: {
    parameters: {
      path: {
        /** companyTypeAssociationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.CompanyTypeAssociation"];
        };
      };
    };
  };
  putCompanyCompanyTypeAssociationsById: {
    parameters: {
      path: {
        /** companyTypeAssociationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.CompanyTypeAssociation"];
        };
      };
    };
    /** companyTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company.CompanyTypeAssociation"];
      };
    };
  };
  deleteCompanyCompanyTypeAssociationsById: {
    parameters: {
      path: {
        /** companyTypeAssociationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCompanyTypeAssociationsById: {
    parameters: {
      path: {
        /** companyTypeAssociationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.CompanyTypeAssociation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCompanyTypeAssociationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyConfigurations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
      path: {
        /** managedIdentifier */
        managedIdentifier: string;
      };
    };
    responses: {
      /** List of Configuration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.Configuration"][];
        };
      };
    };
  };
  postCompanyConfigurations: {
    parameters: {
      query: {
        /** managedInformation */
        managedInformation?: components["schemas"]["ManagedInformation"];
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Configuration */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.Configuration"];
        };
      };
    };
    /** configuration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company.Configuration"];
      };
    };
  };
  getCompanyConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Configuration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.Configuration"];
        };
      };
    };
  };
  putCompanyConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
      };
      query: {
        /** managedInformation */
        managedInformation?: components["schemas"]["ManagedInformation"];
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Configuration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.Configuration"];
        };
      };
    };
    /** configuration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company.Configuration"];
      };
    };
  };
  deleteCompanyConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
      };
      query: {
        /** managedInformation */
        managedInformation?: components["schemas"]["ManagedInformation"];
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Configuration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.Configuration"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  patchCompanyConfigurationsByIdChangeType: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Configuration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.Configuration"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  putCompanyConfigurationsBulk: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Configuration */
      207: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.Configuration"];
        };
      };
    };
    /** List of Configuration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company.Configuration"][];
      };
    };
  };
  postCompanyConfigurationsBulk: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Configuration */
      207: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.Configuration"];
        };
      };
    };
    /** List of Configuration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company.Configuration"][];
      };
    };
  };
  deleteCompanyConfigurationsBulk: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BulkResult */
      207: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BulkResult"];
        };
      };
    };
  };
  getCompanyConfigurationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
      path: {
        /** managedIdentifier */
        managedIdentifier: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyConfigurationsStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConfigurationStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationStatus"][];
        };
      };
    };
  };
  postCompanyConfigurationsStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationStatus"];
        };
      };
    };
    /** configurationStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationStatus"];
      };
    };
  };
  getCompanyConfigurationsStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationStatus"];
        };
      };
    };
  };
  putCompanyConfigurationsStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationStatus"];
        };
      };
    };
    /** configurationStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationStatus"];
      };
    };
  };
  deleteCompanyConfigurationsStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyConfigurationsStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyConfigurationsStatusesByIdInfo: {
    parameters: {
      path: {
        /** ConfigurationStatusInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationStatusInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationStatusInfo"];
        };
      };
    };
  };
  getCompanyConfigurationsStatusesByIdUsages: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyConfigurationsStatusesByIdUsagesList: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyConfigurationsStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyConfigurationsStatusesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of configurationStatusesInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationStatusInfo"][];
        };
      };
    };
  };
  getCompanyConfigurationsStatusesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyConfigurationsTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConfigurationType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationType"][];
        };
      };
    };
  };
  postCompanyConfigurationsTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationType"];
        };
      };
    };
    /** configurationType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationType"];
      };
    };
  };
  getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValues: {
    parameters: {
      path: {
        /** questionId */
        parentId: number;
        /** typeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConfigurationTypeQuestionValue */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestionValue"][];
        };
      };
    };
  };
  postCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValues: {
    parameters: {
      path: {
        /** questionId */
        parentId: number;
        /** typeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestionValue */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestionValue"];
        };
      };
    };
    /** configurationTypeQuestionValue */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationTypeQuestionValue"];
      };
    };
  };
  getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** typeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestionValue */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestionValue"];
        };
      };
    };
  };
  putCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** typeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestionValue */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestionValue"];
        };
      };
    };
    /** configurationTypeQuestionValue */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationTypeQuestionValue"];
      };
    };
  };
  deleteCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** typeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesById: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** typeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestionValue */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestionValue"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesByIdUsages: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** typeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesByIdUsagesList: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** typeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesCount: {
    parameters: {
      path: {
        /** questionId */
        parentId: number;
        /** typeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyConfigurationsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationType"];
        };
      };
    };
  };
  putCompanyConfigurationsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationType"];
        };
      };
    };
    /** configurationType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationType"];
      };
    };
  };
  deleteCompanyConfigurationsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyConfigurationsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyConfigurationsTypesByIdInfo: {
    parameters: {
      path: {
        /** ConfigurationTypeInfo */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeInfo"];
        };
      };
    };
  };
  getCompanyConfigurationsTypesByIdUsages: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyConfigurationsTypesByIdUsagesList: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyConfigurationsTypesByParentIdQuestions: {
    parameters: {
      path: {
        /** typeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConfigurationTypeQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestion"][];
        };
      };
    };
  };
  postCompanyConfigurationsTypesByParentIdQuestions: {
    parameters: {
      path: {
        /** typeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestion"];
        };
      };
    };
    /** configurationTypeQuestion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationTypeQuestion"];
      };
    };
  };
  getCompanyConfigurationsTypesByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** typeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestion"];
        };
      };
    };
  };
  putCompanyConfigurationsTypesByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** typeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestion"];
        };
      };
    };
    /** configurationTypeQuestion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationTypeQuestion"];
      };
    };
  };
  deleteCompanyConfigurationsTypesByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** typeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyConfigurationsTypesByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** typeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestion"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyConfigurationsTypesByParentIdQuestionsCount: {
    parameters: {
      path: {
        /** typeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyConfigurationsTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContacts: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ApiContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Contact"][];
        };
      };
    };
  };
  postCompanyContacts: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiContact */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Contact"];
        };
      };
    };
    /** contact */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Contact"];
      };
    };
  };
  getCompanyContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Contact"];
        };
      };
    };
  };
  putCompanyContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Contact"];
        };
      };
    };
    /** contact */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Contact"];
      };
    };
  };
  deleteCompanyContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** transferContactId */
        transferContactId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Contact"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyContactsByIdImage: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** useDefaultFlag */
        useDefaultFlag: boolean;
        /** lastModified */
        lastModified: string;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContentType = application/octet-stream */
      200: unknown;
    };
  };
  getCompanyContactsByIdPortalSecurity: {
    parameters: {
      path: {
        /** contactId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalSecurity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalSecurity"][];
        };
      };
    };
  };
  getCompanyContactsByIdUsages: {
    parameters: {
      path: {
        /** contactId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyContactsByIdUsagesList: {
    parameters: {
      path: {
        /** contactId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyContactsByParentIdCommunications: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactCommunication */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactCommunication"][];
        };
      };
    };
  };
  postCompanyContactsByParentIdCommunications: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactCommunication */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactCommunication"];
        };
      };
    };
    /** contactCommunication */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactCommunication"];
      };
    };
  };
  getCompanyContactsByParentIdCommunicationsById: {
    parameters: {
      path: {
        /** communicationId */
        id: number;
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactCommunication */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactCommunication"];
        };
      };
    };
  };
  putCompanyContactsByParentIdCommunicationsById: {
    parameters: {
      path: {
        /** communicationId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactCommunication */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactCommunication"];
        };
      };
    };
    /** contactCommunication */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactCommunication"];
      };
    };
  };
  deleteCompanyContactsByParentIdCommunicationsById: {
    parameters: {
      path: {
        /** communicationId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyContactsByParentIdCommunicationsById: {
    parameters: {
      path: {
        /** communicationId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactCommunication */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactCommunication"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyContactsByParentIdCommunicationsCount: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsByParentIdGroups: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactGroup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactGroup"][];
        };
      };
    };
  };
  postCompanyContactsByParentIdGroups: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactGroup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactGroup"];
        };
      };
    };
    /** contactGroup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactGroup"];
      };
    };
  };
  getCompanyContactsByParentIdGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactGroup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactGroup"];
        };
      };
    };
  };
  putCompanyContactsByParentIdGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactGroup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactGroup"];
        };
      };
    };
    /** contactGroup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactGroup"];
      };
    };
  };
  deleteCompanyContactsByParentIdGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyContactsByParentIdGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactGroup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactGroup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyContactsByParentIdGroupsCount: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsByParentIdNotes: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactNote"][];
        };
      };
    };
  };
  postCompanyContactsByParentIdNotes: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactNote */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactNote"];
        };
      };
    };
    /** contactNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactNote"];
      };
    };
  };
  getCompanyContactsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactNote"];
        };
      };
    };
  };
  putCompanyContactsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactNote"];
        };
      };
    };
    /** contactNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactNote"];
      };
    };
  };
  deleteCompanyContactsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyContactsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactNote"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyContactsByParentIdNotesCount: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsByParentIdTracks: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactTrack */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactTrack"][];
        };
      };
    };
  };
  postCompanyContactsByParentIdTracks: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTrack */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactTrack"];
        };
      };
    };
    /** track */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactTrack"];
      };
    };
  };
  getCompanyContactsByParentIdTracksById: {
    parameters: {
      path: {
        /** trackId */
        id: number;
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTrack */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactTrack"];
        };
      };
    };
  };
  deleteCompanyContactsByParentIdTracksById: {
    parameters: {
      path: {
        /** trackId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getCompanyContactsByParentIdTracksCount: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsByParentIdTypeAssociations: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactContactTypeAssociation.ContactTypeAssociation"][];
        };
      };
    };
  };
  postCompanyContactsByParentIdTypeAssociations: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTypeAssociation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactContactTypeAssociation.ContactTypeAssociation"];
        };
      };
    };
    /** contactTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactContactTypeAssociation.ContactTypeAssociation"];
      };
    };
  };
  getCompanyContactsByParentIdTypeAssociationsById: {
    parameters: {
      path: {
        /** typeAssociationId */
        id: number;
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactContactTypeAssociation.ContactTypeAssociation"];
        };
      };
    };
  };
  putCompanyContactsByParentIdTypeAssociationsById: {
    parameters: {
      path: {
        /** typeAssociationId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactContactTypeAssociation.ContactTypeAssociation"];
        };
      };
    };
    /** contactTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactContactTypeAssociation.ContactTypeAssociation"];
      };
    };
  };
  deleteCompanyContactsByParentIdTypeAssociationsById: {
    parameters: {
      path: {
        /** typeAssociationId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyContactsByParentIdTypeAssociationsById: {
    parameters: {
      path: {
        /** typeAssociationId */
        id: number;
        /** contactId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactContactTypeAssociation.ContactTypeAssociation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyContactsByParentIdTypeAssociationsCount: {
    parameters: {
      path: {
        /** contactId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsDefault: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
      path: {
        /** companyId */
        companyId: number;
      };
    };
    responses: {
      /** ApiContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Contact"];
        };
      };
    };
  };
  getCompanyContactsDepartments: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactDepartment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactDepartment"][];
        };
      };
    };
  };
  postCompanyContactsDepartments: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactDepartment */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactDepartment"];
        };
      };
    };
    /** contactDepartment */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactDepartment"];
      };
    };
  };
  getCompanyContactsDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactDepartment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactDepartment"];
        };
      };
    };
  };
  putCompanyContactsDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactDepartment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactDepartment"];
        };
      };
    };
    /** contactDepartment */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactDepartment"];
      };
    };
  };
  deleteCompanyContactsDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyContactsDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactDepartment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactDepartment"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyContactsDepartmentsByIdInfo: {
    parameters: {
      path: {
        /** ContactDepartmentInfo */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactDepartmentInfo"];
        };
      };
    };
  };
  getCompanyContactsDepartmentsByIdUsages: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyContactsDepartmentsByIdUsagesList: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyContactsDepartmentsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsDepartmentsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of contactDepartmentInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactDepartmentInfo"][];
        };
      };
    };
  };
  getCompanyContactsDepartmentsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsRelationships: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactRelationship */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactRelationship"][];
        };
      };
    };
  };
  postCompanyContactsRelationships: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactRelationship */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactRelationship"];
        };
      };
    };
    /** contactRelationship */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactRelationship"];
      };
    };
  };
  getCompanyContactsRelationshipsById: {
    parameters: {
      path: {
        /** relationshipId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactRelationship */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactRelationship"];
        };
      };
    };
  };
  putCompanyContactsRelationshipsById: {
    parameters: {
      path: {
        /** relationshipId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactRelationship */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactRelationship"];
        };
      };
    };
    /** contactRelationship */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactRelationship"];
      };
    };
  };
  deleteCompanyContactsRelationshipsById: {
    parameters: {
      path: {
        /** relationshipId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyContactsRelationshipsById: {
    parameters: {
      path: {
        /** relationshipId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactRelationship */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactRelationship"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyContactsRelationshipsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postCompanyContactsRequestPassword: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Email sent to email address in request */
      204: never;
    };
    /** request */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RequestPasswordRequest"];
      };
    };
  };
  getCompanyContactsTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactType"][];
        };
      };
    };
  };
  postCompanyContactsTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactType"];
        };
      };
    };
    /** contactType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactType"];
      };
    };
  };
  getCompanyContactsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactType"];
        };
      };
    };
  };
  putCompanyContactsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactType"];
        };
      };
    };
    /** contactType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactType"];
      };
    };
  };
  deleteCompanyContactsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyContactsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyContactsTypesByIdInfo: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTypInfoe */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactTypeInfo"];
        };
      };
    };
  };
  getCompanyContactsTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsTypesCountInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyContactsTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ContactTypeInfo"][];
        };
      };
    };
  };
  postCompanyContactsValidatePortalCredentials: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ValidatePortalResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ValidatePortalResponse"];
        };
      };
    };
    /** request */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ValidatePortalRequest"];
      };
    };
  };
  getCompanyContactTypeAssociations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ContactTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.ContactTypeAssociation"][];
        };
      };
    };
  };
  postCompanyContactTypeAssociations: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTypeAssociation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.ContactTypeAssociation"];
        };
      };
    };
    /** contactTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company.ContactTypeAssociation"];
      };
    };
  };
  getCompanyContactTypeAssociationsById: {
    parameters: {
      path: {
        /** contactTypeAssociationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.ContactTypeAssociation"];
        };
      };
    };
  };
  putCompanyContactTypeAssociationsById: {
    parameters: {
      path: {
        /** contactTypeAssociationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.ContactTypeAssociation"];
        };
      };
    };
    /** contactTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Company.ContactTypeAssociation"];
      };
    };
  };
  deleteCompanyContactTypeAssociationsById: {
    parameters: {
      path: {
        /** contactTypeAssociationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyContactTypeAssociationsById: {
    parameters: {
      path: {
        /** contactTypeAssociationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContactTypeAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Company.ContactTypeAssociation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyContactTypeAssociationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCountries: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Country */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Country"][];
        };
      };
    };
  };
  postCompanyCountries: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Country */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Country"];
        };
      };
    };
    /** country */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Country"];
      };
    };
  };
  getCompanyCountriesById: {
    parameters: {
      path: {
        /** countryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Country */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Country"];
        };
      };
    };
  };
  putCompanyCountriesById: {
    parameters: {
      path: {
        /** countryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Country */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Country"];
        };
      };
    };
    /** country */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Country"];
      };
    };
  };
  deleteCompanyCountriesById: {
    parameters: {
      path: {
        /** countryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyCountriesById: {
    parameters: {
      path: {
        /** countryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Country */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Country"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyCountriesByIdInfo: {
    parameters: {
      path: {
        /** CountryInfo */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CountryInfo"];
        };
      };
    };
  };
  getCompanyCountriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyCountriesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of countryInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CountryInfo"][];
        };
      };
    };
  };
  getCompanyCountriesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyEntityTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of EntityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EntityType"][];
        };
      };
    };
  };
  getCompanyEntityTypesById: {
    parameters: {
      path: {
        /** entityTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EntityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EntityType"];
        };
      };
    };
  };
  getCompanyEntitytypesByIdInfo: {
    parameters: {
      path: {
        /** EntityTypeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EntityTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EntityTypeInfo"];
        };
      };
    };
  };
  getCompanyEntityTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyEntitytypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of entityTypeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EntityTypeInfo"][];
        };
      };
    };
  };
  getCompanyEntityTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyExpenseTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagedDevicesIntegrations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagedDevicesIntegration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegration"][];
        };
      };
    };
  };
  postCompanyManagedDevicesIntegrations: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegration */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegration"];
        };
      };
    };
    /** managedDevicesIntegration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagedDevicesIntegration"];
      };
    };
  };
  getCompanyManagedDevicesIntegrationsById: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegration"];
        };
      };
    };
  };
  putCompanyManagedDevicesIntegrationsById: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegration"];
        };
      };
    };
    /** managedDevicesIntegration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagedDevicesIntegration"];
      };
    };
  };
  deleteCompanyManagedDevicesIntegrationsById: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyManagedDevicesIntegrationsById: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegration"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByIdInfo: {
    parameters: {
      path: {
        /** ManagedDevicesIntegrationInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationInfo"];
        };
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByIdUsages: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByIdUsagesList: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByParentIdCrossReferences: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagedDevicesIntegrationCrossReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationCrossReference"][];
        };
      };
    };
  };
  postCompanyManagedDevicesIntegrationsByParentIdCrossReferences: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationCrossReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationCrossReference"];
        };
      };
    };
    /** crossReference */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagedDevicesIntegrationCrossReference"];
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById: {
    parameters: {
      path: {
        /** crossReferenceId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationCrossReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationCrossReference"];
        };
      };
    };
  };
  putCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById: {
    parameters: {
      path: {
        /** crossReferenceId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationCrossReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationCrossReference"];
        };
      };
    };
    /** crossReference */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagedDevicesIntegrationCrossReference"];
      };
    };
  };
  deleteCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById: {
    parameters: {
      path: {
        /** crossReferenceId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationCrossReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationCrossReference"];
        };
      };
    };
  };
  patchCompanyManagedDevicesIntegrationsByParentIdCrossReferencesById: {
    parameters: {
      path: {
        /** crossReferenceId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationCrossReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationCrossReference"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByParentIdCrossReferencesCount: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByParentIdLogins: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagedDevicesIntegrationLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationLogin"][];
        };
      };
    };
  };
  postCompanyManagedDevicesIntegrationsByParentIdLogins: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationLogin"];
        };
      };
    };
    /** login */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagedDevicesIntegrationLogin"];
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByParentIdLoginsById: {
    parameters: {
      path: {
        /** loginId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationLogin"];
        };
      };
    };
  };
  putCompanyManagedDevicesIntegrationsByParentIdLoginsById: {
    parameters: {
      path: {
        /** loginId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationLogin"];
        };
      };
    };
    /** login */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagedDevicesIntegrationLogin"];
      };
    };
  };
  deleteCompanyManagedDevicesIntegrationsByParentIdLoginsById: {
    parameters: {
      path: {
        /** loginId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationLogin"];
        };
      };
    };
  };
  patchCompanyManagedDevicesIntegrationsByParentIdLoginsById: {
    parameters: {
      path: {
        /** loginId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationLogin"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByParentIdLoginsCount: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByParentIdNotifications: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagedDevicesIntegrationNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationNotification"][];
        };
      };
    };
  };
  postCompanyManagedDevicesIntegrationsByParentIdNotifications: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationNotification"];
        };
      };
    };
    /** notification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagedDevicesIntegrationNotification"];
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationNotification"];
        };
      };
    };
  };
  putCompanyManagedDevicesIntegrationsByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationNotification"];
        };
      };
    };
    /** notification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagedDevicesIntegrationNotification"];
      };
    };
  };
  deleteCompanyManagedDevicesIntegrationsByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationNotification"];
        };
      };
    };
  };
  patchCompanyManagedDevicesIntegrationsByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagedDevicesIntegrationNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationNotification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyManagedDevicesIntegrationsByParentIdNotificationsCount: {
    parameters: {
      path: {
        /** managedDevicesIntegrationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagedDevicesIntegrationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagedDevicesIntegrationsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of managedDevicesIntegrationInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDevicesIntegrationInfo"][];
        };
      };
    };
  };
  getCompanyManagedDevicesIntegrationsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagement: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Management */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Management"][];
        };
      };
    };
  };
  getCompanyManagementById: {
    parameters: {
      path: {
        /** managementId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Management */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Management"];
        };
      };
    };
  };
  putCompanyManagementById: {
    parameters: {
      path: {
        /** managementId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Management */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Management"];
        };
      };
    };
    /** management */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Management"];
      };
    };
  };
  patchCompanyManagementById: {
    parameters: {
      path: {
        /** managementId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Management */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Management"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postCompanyManagementByIdExecuteManagedItSync: {
    parameters: {
      path: {
        /** managementId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getCompanyManagementByIdLogDownload: {
    parameters: {
      path: {
        /** managementId */
        id: number;
        /** filePath */
        filePath: string;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContentType = application/octet-stream */
      200: unknown;
    };
  };
  getCompanyManagementByIdLogs: {
    parameters: {
      path: {
        /** managementId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagementLogDocumentInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementLogDocumentInfo"][];
        };
      };
    };
  };
  getCompanyManagementByParentIdManagementReportNotifications: {
    parameters: {
      path: {
        /** managementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagementReportNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"][];
        };
      };
    };
  };
  postCompanyManagementByParentIdManagementReportNotifications: {
    parameters: {
      path: {
        /** managementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportNotification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"];
        };
      };
    };
    /** managementReportNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementReportNotification"];
      };
    };
  };
  getCompanyManagementByParentIdManagementReportNotificationsById: {
    parameters: {
      path: {
        /** managementReportNotificationId */
        id: number;
        /** managementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"];
        };
      };
    };
  };
  putCompanyManagementByParentIdManagementReportNotificationsById: {
    parameters: {
      path: {
        /** managementReportNotificationId */
        id: number;
        /** managementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"];
        };
      };
    };
    /** managementReportNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementReportNotification"];
      };
    };
  };
  deleteCompanyManagementByParentIdManagementReportNotificationsById: {
    parameters: {
      path: {
        /** managementReportNotificationId */
        id: number;
        /** managementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyManagementByParentIdManagementReportNotificationsById: {
    parameters: {
      path: {
        /** managementReportNotificationId */
        id: number;
        /** managementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementReportNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementReportNotification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyManagementByParentIdManagementReportNotificationsCount: {
    parameters: {
      path: {
        /** managementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagementCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagementBackups: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagementBackup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementBackup"][];
        };
      };
    };
  };
  postCompanyManagementBackups: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementBackup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementBackup"];
        };
      };
    };
    /** managementBackup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementBackup"];
      };
    };
  };
  getCompanyManagementBackupsById: {
    parameters: {
      path: {
        /** managementBackupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementBackup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementBackup"];
        };
      };
    };
  };
  putCompanyManagementBackupsById: {
    parameters: {
      path: {
        /** managementBackupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementBackup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementBackup"];
        };
      };
    };
    /** managementBackup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementBackup"];
      };
    };
  };
  deleteCompanyManagementBackupsById: {
    parameters: {
      path: {
        /** managementBackupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyManagementBackupsById: {
    parameters: {
      path: {
        /** managementBackupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementBackup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementBackup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyManagementBackupsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagementItSolutions: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagementItSolution */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolution"][];
        };
      };
    };
  };
  postCompanyManagementItSolutions: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementItSolution */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolution"];
        };
      };
    };
    /** managementItSolution */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementItSolution"];
      };
    };
  };
  getCompanyManagementItSolutionsById: {
    parameters: {
      path: {
        /** managementItSolutionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementItSolution */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolution"];
        };
      };
    };
  };
  putCompanyManagementItSolutionsById: {
    parameters: {
      path: {
        /** managementItSolutionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementItSolution */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolution"];
        };
      };
    };
    /** managementItSolution */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementItSolution"];
      };
    };
  };
  deleteCompanyManagementItSolutionsById: {
    parameters: {
      path: {
        /** managementItSolutionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyManagementItSolutionsById: {
    parameters: {
      path: {
        /** managementItSolutionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementItSolution */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolution"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyManagementItSolutionsByIdUsages: {
    parameters: {
      path: {
        /** managementItSolutionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyManagementItSolutionsByIdUsagesList: {
    parameters: {
      path: {
        /** managementItSolutionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyManagementItSolutionsByParentIdManagementProducts: {
    parameters: {
      path: {
        /** managementItSolutionId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagementItSolutionAgreementInterfaceParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolutionAgreementInterfaceParameter"][];
        };
      };
    };
  };
  postCompanyManagementItSolutionsByParentIdManagementProducts: {
    parameters: {
      path: {
        /** managementItSolutionId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementItSolutionAgreementInterfaceParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolutionAgreementInterfaceParameter"];
        };
      };
    };
    /** managementProduct */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementItSolutionAgreementInterfaceParameter"];
      };
    };
  };
  getCompanyManagementItSolutionsByParentIdManagementProductsById: {
    parameters: {
      path: {
        /** managementProductId */
        id: number;
        /** managementItSolutionId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementItSolutionAgreementInterfaceParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolutionAgreementInterfaceParameter"];
        };
      };
    };
  };
  putCompanyManagementItSolutionsByParentIdManagementProductsById: {
    parameters: {
      path: {
        /** managementProductId */
        id: number;
        /** managementItSolutionId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementItSolutionAgreementInterfaceParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolutionAgreementInterfaceParameter"];
        };
      };
    };
    /** managementProduct */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementItSolutionAgreementInterfaceParameter"];
      };
    };
  };
  deleteCompanyManagementItSolutionsByParentIdManagementProductsById: {
    parameters: {
      path: {
        /** managementProductId */
        id: number;
        /** managementItSolutionId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementItSolutionAgreementInterfaceParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolutionAgreementInterfaceParameter"];
        };
      };
    };
  };
  patchCompanyManagementItSolutionsByParentIdManagementProductsById: {
    parameters: {
      path: {
        /** managementProductId */
        id: number;
        /** managementItSolutionId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementItSolutionAgreementInterfaceParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementItSolutionAgreementInterfaceParameter"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyManagementItSolutionsByParentIdManagementProductsCount: {
    parameters: {
      path: {
        /** managementItSolutionId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyManagementItSolutionsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyMarketDescriptions: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MarketDescription */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketDescription"][];
        };
      };
    };
  };
  postCompanyMarketDescriptions: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketDescription */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketDescription"];
        };
      };
    };
    /** marketDescription */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarketDescription"];
      };
    };
  };
  getCompanyMarketDescriptionsById: {
    parameters: {
      path: {
        /** marketDescriptionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketDescription */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketDescription"];
        };
      };
    };
  };
  putCompanyMarketDescriptionsById: {
    parameters: {
      path: {
        /** marketDescriptionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketDescription */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketDescription"];
        };
      };
    };
    /** marketDescription */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarketDescription"];
      };
    };
  };
  deleteCompanyMarketDescriptionsById: {
    parameters: {
      path: {
        /** marketDescriptionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyMarketDescriptionsById: {
    parameters: {
      path: {
        /** marketDescriptionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketDescription */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketDescription"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyMarketDescriptionsByIdInfo: {
    parameters: {
      path: {
        /** MarketDescriptionInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketDescriptionInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketDescriptionInfo"];
        };
      };
    };
  };
  getCompanyMarketDescriptionsByIdUsages: {
    parameters: {
      path: {
        /** marketDescriptionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyMarketDescriptionsByIdUsagesList: {
    parameters: {
      path: {
        /** marketDescriptionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyMarketDescriptionsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyMarketDescriptionsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of marketDescriptionInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketDescriptionInfo"][];
        };
      };
    };
  };
  getCompanyMarketDescriptionsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyNoteTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyNoteType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNoteType"][];
        };
      };
    };
  };
  postCompanyNoteTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyNoteType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNoteType"];
        };
      };
    };
    /** noteType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyNoteType"];
      };
    };
  };
  getCompanyNoteTypesById: {
    parameters: {
      path: {
        /** noteTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyNoteType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNoteType"];
        };
      };
    };
  };
  putCompanyNoteTypesById: {
    parameters: {
      path: {
        /** noteTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyNoteType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNoteType"];
        };
      };
    };
    /** noteType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompanyNoteType"];
      };
    };
  };
  deleteCompanyNoteTypesById: {
    parameters: {
      path: {
        /** noteTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyNoteTypesById: {
    parameters: {
      path: {
        /** noteTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyNoteType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNoteType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyNoteTypesByIdInfo: {
    parameters: {
      path: {
        /** noteTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyNoteTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNoteTypeInfo"];
        };
      };
    };
  };
  getCompanyNoteTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyNoteTypesCountInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyNoteTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CompanyNoteTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyNoteTypeInfo"][];
        };
      };
    };
  };
  getCompanyOwnershipTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OwnershipType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OwnershipType"][];
        };
      };
    };
  };
  postCompanyOwnershipTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OwnershipType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OwnershipType"];
        };
      };
    };
    /** ownershipType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OwnershipType"];
      };
    };
  };
  getCompanyOwnershipTypesById: {
    parameters: {
      path: {
        /** ownershipTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OwnershipType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OwnershipType"];
        };
      };
    };
  };
  putCompanyOwnershipTypesById: {
    parameters: {
      path: {
        /** ownershipTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OwnershipType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OwnershipType"];
        };
      };
    };
    /** ownershipType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OwnershipType"];
      };
    };
  };
  deleteCompanyOwnershipTypesById: {
    parameters: {
      path: {
        /** ownershipTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyOwnershipTypesById: {
    parameters: {
      path: {
        /** ownershipTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OwnershipType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OwnershipType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyOwnershipTypesByIdInfo: {
    parameters: {
      path: {
        /** OwnershipTypeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OwnershipTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OwnershipTypeInfo"];
        };
      };
    };
  };
  getCompanyOwnershipTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyOwnershipTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ownershipTypeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OwnershipTypeInfo"][];
        };
      };
    };
  };
  getCompanyOwnershipTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyPaymentTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyPortalConfigurations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfiguration"][];
        };
      };
    };
  };
  postCompanyPortalConfigurations: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfiguration */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfiguration"];
        };
      };
    };
    /** portalConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfiguration"];
      };
    };
  };
  getCompanyPortalConfigurationsById: {
    parameters: {
      path: {
        /** portalConfigurationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfiguration"];
        };
      };
    };
  };
  putCompanyPortalConfigurationsById: {
    parameters: {
      path: {
        /** portalConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfiguration"];
        };
      };
    };
    /** portalConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfiguration"];
      };
    };
  };
  deleteCompanyPortalConfigurationsById: {
    parameters: {
      path: {
        /** portalConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyPortalConfigurationsById: {
    parameters: {
      path: {
        /** portalConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfiguration"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdInvoiceSetups: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalConfigurationInvoiceSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationInvoiceSetup"][];
        };
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdInvoiceSetupsById: {
    parameters: {
      path: {
        /** invoiceSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationInvoiceSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationInvoiceSetup"];
        };
      };
    };
  };
  putCompanyPortalConfigurationsByParentIdInvoiceSetupsById: {
    parameters: {
      path: {
        /** invoiceSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationInvoiceSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationInvoiceSetup"];
        };
      };
    };
    /** portalConfigurationInvoiceSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfigurationInvoiceSetup"];
      };
    };
  };
  patchCompanyPortalConfigurationsByParentIdInvoiceSetupsById: {
    parameters: {
      path: {
        /** invoiceSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationInvoiceSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationInvoiceSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postCompanyPortalConfigurationsByParentIdInvoiceSetupsByIdTestTransaction: {
    parameters: {
      path: {
        /** invoiceSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** portalConfigurationInvoiceSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfigurationInvoiceSetup"];
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdInvoiceSetupsCount: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdOpportunitySetups: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalConfigurationOpportunitySetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationOpportunitySetup"][];
        };
      };
    };
  };
  putCompanyPortalConfigurationsByParentIdOpportunitySetups: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationOpportunitySetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationOpportunitySetup"];
        };
      };
    };
    /** opportunitySetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfigurationOpportunitySetup"];
      };
    };
  };
  patchCompanyPortalConfigurationsByParentIdOpportunitySetups: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationOpportunitySetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationOpportunitySetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdOpportunitySetupsById: {
    parameters: {
      path: {
        /** opportunitySetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationOpportunitySetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationOpportunitySetup"];
        };
      };
    };
  };
  putCompanyPortalConfigurationsByParentIdOpportunitySetupsById: {
    parameters: {
      path: {
        /** opportunitySetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationOpportunitySetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationOpportunitySetup"];
        };
      };
    };
    /** opportunitySetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfigurationOpportunitySetup"];
      };
    };
  };
  patchCompanyPortalConfigurationsByParentIdOpportunitySetupsById: {
    parameters: {
      path: {
        /** opportunitySetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationOpportunitySetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationOpportunitySetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdPasswordEmailSetups: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalConfigurationPasswordEmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationPasswordEmailSetup"][];
        };
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdPasswordEmailSetupsById: {
    parameters: {
      path: {
        /** passwordEmailSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationPasswordEmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationPasswordEmailSetup"];
        };
      };
    };
  };
  putCompanyPortalConfigurationsByParentIdPasswordEmailSetupsById: {
    parameters: {
      path: {
        /** passwordEmailSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationPasswordEmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationPasswordEmailSetup"];
        };
      };
    };
    /** passwordEmailSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfigurationPasswordEmailSetup"];
      };
    };
  };
  patchCompanyPortalConfigurationsByParentIdPasswordEmailSetupsById: {
    parameters: {
      path: {
        /** passwordEmailSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationPasswordEmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationPasswordEmailSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdProjectSetups: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalConfigurationProjectSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationProjectSetup"][];
        };
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdProjectSetupsById: {
    parameters: {
      path: {
        /** projectSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationProjectSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationProjectSetup"];
        };
      };
    };
  };
  putCompanyPortalConfigurationsByParentIdProjectSetupsById: {
    parameters: {
      path: {
        /** projectSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationProjectSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationProjectSetup"];
        };
      };
    };
    /** portalConfigurationProjectSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfigurationProjectSetup"];
      };
    };
  };
  patchCompanyPortalConfigurationsByParentIdProjectSetupsById: {
    parameters: {
      path: {
        /** projectSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationProjectSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationProjectSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdProjectSetupsCount: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdServiceSetups: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalConfigurationServiceSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationServiceSetup"][];
        };
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdServiceSetupsById: {
    parameters: {
      path: {
        /** serviceSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationServiceSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationServiceSetup"];
        };
      };
    };
  };
  putCompanyPortalConfigurationsByParentIdServiceSetupsById: {
    parameters: {
      path: {
        /** serviceSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationServiceSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationServiceSetup"];
        };
      };
    };
    /** portalConfigurationServiceSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfigurationServiceSetup"];
      };
    };
  };
  patchCompanyPortalConfigurationsByParentIdServiceSetupsById: {
    parameters: {
      path: {
        /** serviceSetupId */
        id: number;
        /** portalConfigurationId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationServiceSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationServiceSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyPortalConfigurationsByParentIdServiceSetupsCount: {
    parameters: {
      path: {
        /** portalConfigurationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postCompanyPortalConfigurationsCopy: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfiguration"];
        };
      };
    };
    /** copy */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalConfiguration"];
      };
    };
  };
  getCompanyPortalConfigurationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyPortalConfigurationsInvoiceSetupPaymentProcessors: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalConfigurationPaymentProcessor */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationPaymentProcessor"][];
        };
      };
    };
  };
  getCompanyPortalConfigurationsInvoiceSetupPaymentProcessorsById: {
    parameters: {
      path: {
        /** paymentProcessorId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalConfigurationPaymentProcessor */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalConfigurationPaymentProcessor"];
        };
      };
    };
  };
  getCompanyPortalConfigurationsInvoiceSetupPaymentProcessorsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyPortalSecurityLevels: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalSecurityLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalSecurityLevel"][];
        };
      };
    };
  };
  getCompanyPortalSecurityLevelsById: {
    parameters: {
      path: {
        /** portalSecurityLevelId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalSecurityLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalSecurityLevel"];
        };
      };
    };
  };
  putCompanyPortalSecurityLevelsById: {
    parameters: {
      path: {
        /** portalSecurityLevelId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalSecurityLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalSecurityLevel"];
        };
      };
    };
    /** _portalSecurityLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalSecurityLevel"];
      };
    };
  };
  patchCompanyPortalSecurityLevelsById: {
    parameters: {
      path: {
        /** portalSecurityLevelId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalSecurityLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalSecurityLevel"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyPortalSecurityLevelsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyPortalSecuritySettings: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalSecuritySetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalSecuritySetting"][];
        };
      };
    };
  };
  getCompanyPortalSecuritySettingsById: {
    parameters: {
      path: {
        /** portalSecuritySettingId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalSecuritySetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalSecuritySetting"];
        };
      };
    };
  };
  putCompanyPortalSecuritySettingsById: {
    parameters: {
      path: {
        /** portalSecuritySettingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalSecuritySetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalSecuritySetting"];
        };
      };
    };
    /** portalSecurity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalSecuritySetting"];
      };
    };
  };
  patchCompanyPortalSecuritySettingsById: {
    parameters: {
      path: {
        /** portalSecuritySettingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalSecuritySetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalSecuritySetting"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyPortalSecuritySettingsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyStates: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of State */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["State"][];
        };
      };
    };
  };
  postCompanyStates: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** State */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["State"];
        };
      };
    };
    /** state */
    requestBody: {
      content: {
        "application/json": components["schemas"]["State"];
      };
    };
  };
  getCompanyStatesById: {
    parameters: {
      path: {
        /** stateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** State */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["State"];
        };
      };
    };
  };
  putCompanyStatesById: {
    parameters: {
      path: {
        /** stateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** State */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["State"];
        };
      };
    };
    /** state */
    requestBody: {
      content: {
        "application/json": components["schemas"]["State"];
      };
    };
  };
  deleteCompanyStatesById: {
    parameters: {
      path: {
        /** stateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyStatesById: {
    parameters: {
      path: {
        /** stateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** State */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["State"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyStatesByIdInfo: {
    parameters: {
      path: {
        /** StateInfo */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** StateInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StateInfo"];
        };
      };
    };
  };
  getCompanyStatesByIdUsages: {
    parameters: {
      path: {
        /** stateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyStatesByIdUsagesList: {
    parameters: {
      path: {
        /** stateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyStatesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyStatesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of stateInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StateInfo"][];
        };
      };
    };
  };
  getCompanyStatesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyTeamRoles: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TeamRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TeamRole"][];
        };
      };
    };
  };
  postCompanyTeamRoles: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TeamRole */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TeamRole"];
        };
      };
    };
    /** teamRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamRole"];
      };
    };
  };
  getCompanyTeamRolesById: {
    parameters: {
      path: {
        /** teamRoleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TeamRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TeamRole"];
        };
      };
    };
  };
  putCompanyTeamRolesById: {
    parameters: {
      path: {
        /** teamRoleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TeamRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TeamRole"];
        };
      };
    };
    /** teamRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamRole"];
      };
    };
  };
  deleteCompanyTeamRolesById: {
    parameters: {
      path: {
        /** teamRoleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyTeamRolesById: {
    parameters: {
      path: {
        /** teamRoleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TeamRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TeamRole"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyTeamRolesByIdInfo: {
    parameters: {
      path: {
        /** TeamRoleInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TeamRoleInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TeamRoleInfo"];
        };
      };
    };
  };
  getCompanyTeamRolesByIdUsages: {
    parameters: {
      path: {
        /** teamRoleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyTeamRolesByIdUsagesList: {
    parameters: {
      path: {
        /** teamRoleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getCompanyTeamRolesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyTeamRolesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of teamRoleInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TeamRoleInfo"][];
        };
      };
    };
  };
  getCompanyTeamRolesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyTracks: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Track */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Track"][];
        };
      };
    };
  };
  postCompanyTracks: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Track */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Track"];
        };
      };
    };
    /** track */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Track"];
      };
    };
  };
  getCompanyTracksById: {
    parameters: {
      path: {
        /** trackId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Track */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Track"];
        };
      };
    };
  };
  putCompanyTracksById: {
    parameters: {
      path: {
        /** trackId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Track */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Track"];
        };
      };
    };
    /** track */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Track"];
      };
    };
  };
  deleteCompanyTracksById: {
    parameters: {
      path: {
        /** trackId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyTracksById: {
    parameters: {
      path: {
        /** trackId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Track */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Track"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getCompanyTracksByParentIdActions: {
    parameters: {
      path: {
        /** trackId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TrackAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TrackAction"][];
        };
      };
    };
  };
  postCompanyTracksByParentIdActions: {
    parameters: {
      path: {
        /** trackId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TrackAction */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TrackAction"];
        };
      };
    };
    /** trackAction */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TrackAction"];
      };
    };
  };
  getCompanyTracksByParentIdActionsById: {
    parameters: {
      path: {
        /** actionId */
        id: number;
        /** trackId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TrackAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TrackAction"];
        };
      };
    };
  };
  putCompanyTracksByParentIdActionsById: {
    parameters: {
      path: {
        /** actionId */
        id: number;
        /** trackId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TrackAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TrackAction"];
        };
      };
    };
    /** trackAction */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TrackAction"];
      };
    };
  };
  deleteCompanyTracksByParentIdActionsById: {
    parameters: {
      path: {
        /** actionId */
        id: number;
        /** trackId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchCompanyTracksByParentIdActionsById: {
    parameters: {
      path: {
        /** actionId */
        id: number;
        /** trackId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TrackAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TrackAction"];
        };
      };
    };
  };
  getCompanyTracksByParentIdActionsCount: {
    parameters: {
      path: {
        /** trackId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getCompanyTracksCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesByIdInfo: {
    parameters: {
      path: {
        /** ConfigurationTypeQuestionInfo */
        grandparentId: number;
        /** ConfigurationTypeQuestionInfo */
        parentId: number;
        /** ConfigurationTypeQuestionInfo */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestionInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestionInfo"];
        };
      };
    };
  };
  getConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesInfo: {
    parameters: {
      path: {
        /** ConfigurationTypeQuestionValueInfo */
        grandparentId: number;
        /** ConfigurationTypeQuestionValueInfo */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConfigurationTypeQuestionInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestionValueInfo"][];
        };
      };
    };
  };
  getConfigurationsTypesByGrandparentIdQuestionsByParentIdValuesInfoCount: {
    parameters: {
      path: {
        /** ConfigurationTypeQuestionValueInfo */
        grandparentId: number;
        /** ConfigurationTypeQuestionValueInfo */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getConfigurationsTypesByParentIdQuestionsByIdInfo: {
    parameters: {
      path: {
        /** ConfigurationTypeQuestionInfo */
        id: number;
        /** typeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationTypeQuestionInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestionInfo"];
        };
      };
    };
  };
  getConfigurationsTypesByParentIdQuestionsInfo: {
    parameters: {
      path: {
        /** typeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConfigurationTypeQuestionInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeQuestionInfo"][];
        };
      };
    };
  };
  getConfigurationsTypesByParentIdQuestionsInfoCount: {
    parameters: {
      path: {
        /** typeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getConfigurationsTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of configurationTypeInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationTypeInfo"][];
        };
      };
    };
  };
  getConfigurationsTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getExpenseClassifications: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Classification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Classification"][];
        };
      };
    };
  };
  getExpenseClassificationsById: {
    parameters: {
      path: {
        /** classificationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Classification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Classification"];
        };
      };
    };
  };
  getExpenseClassificationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getExpenseEntries: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ExpenseEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseEntry"][];
        };
      };
    };
  };
  postExpenseEntries: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseEntry */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseEntry"];
        };
      };
    };
    /** expenseEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExpenseEntry"];
      };
    };
  };
  getExpenseEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseEntry"];
        };
      };
    };
  };
  putExpenseEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseEntry"];
        };
      };
    };
    /** expenseEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExpenseEntry"];
      };
    };
  };
  deleteExpenseEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchExpenseEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseEntry"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getExpenseEntriesByParentIdAudits: {
    parameters: {
      path: {
        /** entryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ExpenseEntryAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseEntryAudit"][];
        };
      };
    };
  };
  getExpenseEntriesByParentIdAuditsById: {
    parameters: {
      path: {
        /** auditId */
        id: number;
        /** entryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseEntryAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseEntryAudit"];
        };
      };
    };
  };
  getExpenseEntriesByParentIdAuditsCount: {
    parameters: {
      path: {
        /** entryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getExpenseEntriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getExpenseInfoTaxTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ExpenseTaxTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseTaxTypeInfo"][];
        };
      };
    };
  };
  getExpenseInfoTaxTypesById: {
    parameters: {
      path: {
        /** taxTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseTaxTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseTaxTypeInfo"];
        };
      };
    };
  };
  getExpenseInfoTaxTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getExpensePaymentTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PaymentType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PaymentType"][];
        };
      };
    };
  };
  postExpensePaymentTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PaymentType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PaymentType"];
        };
      };
    };
    /** paymentType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PaymentType"];
      };
    };
  };
  getExpensePaymentTypesById: {
    parameters: {
      path: {
        /** paymentTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PaymentType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PaymentType"];
        };
      };
    };
  };
  putExpensePaymentTypesById: {
    parameters: {
      path: {
        /** paymentTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PaymentType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PaymentType"];
        };
      };
    };
    /** paymentType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PaymentType"];
      };
    };
  };
  deleteExpensePaymentTypesById: {
    parameters: {
      path: {
        /** paymentTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchExpensePaymentTypesById: {
    parameters: {
      path: {
        /** paymentTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PaymentType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PaymentType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getExpensePaymentTypesByIdInfo: {
    parameters: {
      path: {
        /** PaymentTypeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PaymentTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PaymentTypeInfo"];
        };
      };
    };
  };
  getExpensePaymentTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getExpensePaymentTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of paymentTypeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PaymentTypeInfo"][];
        };
      };
    };
  };
  getExpenseReports: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ExpenseReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseReport"][];
        };
      };
    };
  };
  getExpenseReportsById: {
    parameters: {
      path: {
        /** reportId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseReport"];
        };
      };
    };
  };
  postExpenseReportsByIdReverse: {
    parameters: {
      path: {
        /** reportId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  postExpenseReportsByIdSubmit: {
    parameters: {
      path: {
        /** reportId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getExpenseReportsByParentIdAudits: {
    parameters: {
      path: {
        /** reportId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ExpenseReportAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseReportAudit"][];
        };
      };
    };
  };
  getExpenseReportsByParentIdAuditsById: {
    parameters: {
      path: {
        /** auditId */
        id: number;
        /** reportId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseReportAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseReportAudit"];
        };
      };
    };
  };
  getExpenseReportsByParentIdAuditsCount: {
    parameters: {
      path: {
        /** reportId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getExpenseReportsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getExpenseTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ExpenseType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseType"][];
        };
      };
    };
  };
  postExpenseTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseType"];
        };
      };
    };
    /** expenseType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExpenseType"];
      };
    };
  };
  getExpenseTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseType"];
        };
      };
    };
  };
  putExpenseTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseType"];
        };
      };
    };
    /** expenseType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExpenseType"];
      };
    };
  };
  deleteExpenseTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchExpenseTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getExpenseTypesByIdInfo: {
    parameters: {
      path: {
        /** ExpenseTypeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseTypeInfo"];
        };
      };
    };
  };
  getExpenseTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getExpenseTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of expenseTypeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseTypeInfo"][];
        };
      };
    };
  };
  getFinanceAccountingBatches: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AccountingBatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AccountingBatch"][];
        };
      };
    };
  };
  postFinanceAccountingBatches: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLExport */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLExport"];
        };
      };
    };
    /** accountingBatchParameters */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateAccountingBatchRequest"];
      };
    };
  };
  getFinanceAccountingBatchesById: {
    parameters: {
      path: {
        /** batcheId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AccountingBatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AccountingBatch"];
        };
      };
    };
  };
  deleteFinanceAccountingBatchesById: {
    parameters: {
      path: {
        /** batcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  postFinanceAccountingBatchesByIdExport: {
    parameters: {
      path: {
        /** batcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLExport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLExport"];
        };
      };
    };
    /** batchExportParameters */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExportAccountingBatchRequest"];
      };
    };
  };
  getFinanceAccountingBatchesByParentIdEntries: {
    parameters: {
      path: {
        /** batcheId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BatchEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BatchEntry"][];
        };
      };
    };
  };
  getFinanceAccountingBatchesByParentIdEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
        /** batcheId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BatchEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BatchEntry"];
        };
      };
    };
  };
  getFinanceAccountingBatchesByParentIdEntriesCount: {
    parameters: {
      path: {
        /** batcheId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAccountingBatchesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postFinanceAccountingExport: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLExport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLExport"];
        };
      };
    };
    /** batchExportParameters */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExportAccountingBatchRequest"];
      };
    };
  };
  getFinanceAccountingUnpostedexpenses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of UnpostedExpense */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedExpense"][];
        };
      };
    };
  };
  getFinanceAccountingUnpostedexpensesById: {
    parameters: {
      path: {
        /** unpostedexpensId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnpostedExpense */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedExpense"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedexpensesByParentIdTaxableLevels: {
    parameters: {
      path: {
        /** unpostedexpensId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of UnpostedExpenseTaxableLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedExpenseTaxableLevel"][];
        };
      };
    };
  };
  getFinanceAccountingUnpostedexpensesByParentIdTaxableLevelsById: {
    parameters: {
      path: {
        /** taxableLevelId */
        id: number;
        /** unpostedexpensId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnpostedExpenseTaxableLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedExpenseTaxableLevel"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedexpensesByParentIdTaxableLevelsCount: {
    parameters: {
      path: {
        /** unpostedexpensId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedexpensesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedinvoices: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of UnpostedInvoice */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedInvoice"][];
        };
      };
    };
  };
  getFinanceAccountingUnpostedinvoicesById: {
    parameters: {
      path: {
        /** unpostedinvoiceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnpostedInvoice */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedInvoice"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedinvoicesByParentIdTaxableLevels: {
    parameters: {
      path: {
        /** unpostedinvoiceId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of UnpostedInvoiceTaxableLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedInvoiceTaxableLevel"][];
        };
      };
    };
  };
  getFinanceAccountingUnpostedinvoicesByParentIdTaxableLevelsById: {
    parameters: {
      path: {
        /** taxableLevelId */
        id: number;
        /** unpostedinvoiceId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnpostedInvoiceTaxableLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedInvoiceTaxableLevel"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedinvoicesByParentIdTaxableLevelsCount: {
    parameters: {
      path: {
        /** unpostedinvoiceId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedinvoicesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedprocurement: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of UnpostedProcurement */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedProcurement"][];
        };
      };
    };
  };
  getFinanceAccountingUnpostedprocurementById: {
    parameters: {
      path: {
        /** unpostedprocurementId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnpostedProcurement */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedProcurement"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedprocurementByParentIdTaxableLevels: {
    parameters: {
      path: {
        /** unpostedprocurementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of UnpostedProcurementTaxableLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedProcurementTaxableLevel"][];
        };
      };
    };
  };
  getFinanceAccountingUnpostedprocurementByParentIdTaxableLevelsById: {
    parameters: {
      path: {
        /** taxableLevelId */
        id: number;
        /** unpostedprocurementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnpostedProcurementTaxableLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnpostedProcurementTaxableLevel"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedprocurementByParentIdTaxableLevelsCount: {
    parameters: {
      path: {
        /** unpostedprocurementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAccountingUnpostedprocurementCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAccountingPackages: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AccountingPackage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AccountingPackage"][];
        };
      };
    };
  };
  getFinanceAccountingPackagesById: {
    parameters: {
      path: {
        /** accountingPackageId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AccountingPackage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AccountingPackage"];
        };
      };
    };
  };
  getFinanceAccountingPackagesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAccountingPackageSetup: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AccountingPackageSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AccountingPackageSetup"][];
        };
      };
    };
  };
  getFinanceAccountingPackageSetupById: {
    parameters: {
      path: {
        /** accountingPackageSetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AccountingPackageSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AccountingPackageSetup"];
        };
      };
    };
  };
  putFinanceAccountingPackageSetupById: {
    parameters: {
      path: {
        /** accountingPackageSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AccountingPackageSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AccountingPackageSetup"];
        };
      };
    };
    /** accountingPackageSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccountingPackageSetup"];
      };
    };
  };
  patchFinanceAccountingPackageSetupById: {
    parameters: {
      path: {
        /** accountingPackageSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AccountingPackageSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AccountingPackageSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAccountingPackageSetupCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreements: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Agreement */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement"][];
        };
      };
    };
  };
  postFinanceAgreements: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Agreement */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement"];
        };
      };
    };
    /** agreement */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Agreement"];
      };
    };
  };
  getFinanceAgreementsById: {
    parameters: {
      path: {
        /** agreementId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Agreement */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement"];
        };
      };
    };
  };
  putFinanceAgreementsById: {
    parameters: {
      path: {
        /** agreementId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Agreement */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement"];
        };
      };
    };
    /** agreement */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Agreement"];
      };
    };
  };
  deleteFinanceAgreementsById: {
    parameters: {
      path: {
        /** agreementId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementsById: {
    parameters: {
      path: {
        /** agreementId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Agreement */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementsByParentIdAdditions: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Addition */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Addition"][];
        };
      };
    };
  };
  postFinanceAgreementsByParentIdAdditions: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Addition */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Addition"];
        };
      };
    };
    /** addition */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Addition"];
      };
    };
  };
  getFinanceAgreementsByParentIdAdditionsById: {
    parameters: {
      path: {
        /** additionId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Addition */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Addition"];
        };
      };
    };
  };
  putFinanceAgreementsByParentIdAdditionsById: {
    parameters: {
      path: {
        /** additionId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Addition */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Addition"];
        };
      };
    };
    /** addition */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Addition"];
      };
    };
  };
  deleteFinanceAgreementsByParentIdAdditionsById: {
    parameters: {
      path: {
        /** additionId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementsByParentIdAdditionsById: {
    parameters: {
      path: {
        /** additionId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Addition */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Addition"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementsByParentIdAdditionsCount: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsByParentIdAdjustments: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Adjustment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement.Adjustment"][];
        };
      };
    };
  };
  postFinanceAgreementsByParentIdAdjustments: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Adjustment */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement.Adjustment"];
        };
      };
    };
    /** adjustment */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Agreement.Adjustment"];
      };
    };
  };
  getFinanceAgreementsByParentIdAdjustmentsById: {
    parameters: {
      path: {
        /** adjustmentId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Adjustment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement.Adjustment"];
        };
      };
    };
  };
  putFinanceAgreementsByParentIdAdjustmentsById: {
    parameters: {
      path: {
        /** adjustmentId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Adjustment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement.Adjustment"];
        };
      };
    };
    /** adjustment */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Agreement.Adjustment"];
      };
    };
  };
  deleteFinanceAgreementsByParentIdAdjustmentsById: {
    parameters: {
      path: {
        /** adjustmentId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementsByParentIdAdjustmentsById: {
    parameters: {
      path: {
        /** adjustmentId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Adjustment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement.Adjustment"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementsByParentIdAdjustmentsCount: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsByParentIdBoardDefaults: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardDefault */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardDefault"][];
        };
      };
    };
  };
  postFinanceAgreementsByParentIdBoardDefaults: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardDefault */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardDefault"];
        };
      };
    };
    /** boardDefault */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardDefault"];
      };
    };
  };
  getFinanceAgreementsByParentIdBoardDefaultsById: {
    parameters: {
      path: {
        /** boardDefaultId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardDefault */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardDefault"];
        };
      };
    };
  };
  putFinanceAgreementsByParentIdBoardDefaultsById: {
    parameters: {
      path: {
        /** boardDefaultId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardDefault */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardDefault"];
        };
      };
    };
    /** boardDefault */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardDefault"];
      };
    };
  };
  deleteFinanceAgreementsByParentIdBoardDefaultsById: {
    parameters: {
      path: {
        /** boardDefaultId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementsByParentIdBoardDefaultsById: {
    parameters: {
      path: {
        /** boardDefaultId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardDefault */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardDefault"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementsByParentIdBoardDefaultsCount: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsByParentIdConfigurations: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConfigurationReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationReference"][];
        };
      };
    };
  };
  postFinanceAgreementsByParentIdConfigurations: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationReference */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationReference"];
        };
      };
    };
    /** configuration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationReference"];
      };
    };
  };
  getFinanceAgreementsByParentIdConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationReference"];
        };
      };
    };
  };
  deleteFinanceAgreementsByParentIdConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getFinanceAgreementsByParentIdConfigurationsCount: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsByParentIdSites: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementSite */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementSite"][];
        };
      };
    };
  };
  postFinanceAgreementsByParentIdSites: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementSite */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementSite"];
        };
      };
    };
    /** site */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementSite"];
      };
    };
  };
  getFinanceAgreementsByParentIdSitesById: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementSite */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementSite"];
        };
      };
    };
  };
  putFinanceAgreementsByParentIdSitesById: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementSite */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementSite"];
        };
      };
    };
    /** site */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementSite"];
      };
    };
  };
  deleteFinanceAgreementsByParentIdSitesById: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementsByParentIdSitesById: {
    parameters: {
      path: {
        /** siteId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementSite */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementSite"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementsByParentIdSitesCount: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsByParentIdWorkRoleExclusions: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementWorkRoleExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkRoleExclusion"][];
        };
      };
    };
  };
  postFinanceAgreementsByParentIdWorkRoleExclusions: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkRoleExclusion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkRoleExclusion"];
        };
      };
    };
    /** workRoleExclusion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementWorkRoleExclusion"];
      };
    };
  };
  deleteFinanceAgreementsByParentIdWorkRoleExclusionsById: {
    parameters: {
      path: {
        /** workRoleExclusionId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getFinanceAgreementsByParentIdWorkRoleExclusionsCount: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsByParentIdWorkroles: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkRole"][];
        };
      };
    };
  };
  postFinanceAgreementsByParentIdWorkroles: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkRole */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkRole"];
        };
      };
    };
    /** workRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementWorkRole"];
      };
    };
  };
  getFinanceAgreementsByParentIdWorkrolesById: {
    parameters: {
      path: {
        /** workroleId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkRole"];
        };
      };
    };
  };
  putFinanceAgreementsByParentIdWorkrolesById: {
    parameters: {
      path: {
        /** workroleId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkRole"];
        };
      };
    };
    /** workRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementWorkRole"];
      };
    };
  };
  deleteFinanceAgreementsByParentIdWorkrolesById: {
    parameters: {
      path: {
        /** workroleId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementsByParentIdWorkrolesById: {
    parameters: {
      path: {
        /** workroleId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkRole"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementsByParentIdWorkrolesCount: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsByParentIdWorkTypeExclusions: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementWorkTypeExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkTypeExclusion"][];
        };
      };
    };
  };
  postFinanceAgreementsByParentIdWorkTypeExclusions: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkTypeExclusion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkTypeExclusion"];
        };
      };
    };
    /** workTypeExclusion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementWorkTypeExclusion"];
      };
    };
  };
  deleteFinanceAgreementsByParentIdWorkTypeExclusionsById: {
    parameters: {
      path: {
        /** workTypeExclusionId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getFinanceAgreementsByParentIdWorkTypeExclusionsCount: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsByParentIdWorktypes: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementWorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkType"][];
        };
      };
    };
  };
  postFinanceAgreementsByParentIdWorktypes: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkType"];
        };
      };
    };
    /** workType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementWorkType"];
      };
    };
  };
  getFinanceAgreementsByParentIdWorktypesById: {
    parameters: {
      path: {
        /** worktypeId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkType"];
        };
      };
    };
  };
  putFinanceAgreementsByParentIdWorktypesById: {
    parameters: {
      path: {
        /** worktypeId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkType"];
        };
      };
    };
    /** workType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementWorkType"];
      };
    };
  };
  deleteFinanceAgreementsByParentIdWorktypesById: {
    parameters: {
      path: {
        /** worktypeId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementsByParentIdWorktypesById: {
    parameters: {
      path: {
        /** worktypeId */
        id: number;
        /** agreementId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementWorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementWorkType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementsByParentIdWorktypesCount: {
    parameters: {
      path: {
        /** agreementId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementType"][];
        };
      };
    };
  };
  postFinanceAgreementsTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementType"];
        };
      };
    };
    /** agreementType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementType"];
      };
    };
  };
  getFinanceAgreementsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementType"];
        };
      };
    };
  };
  putFinanceAgreementsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementType"];
        };
      };
    };
    /** agreementType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementType"];
      };
    };
  };
  deleteFinanceAgreementsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementsTypesByIdInfo: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeInfo"];
        };
      };
    };
  };
  getFinanceAgreementsTypesByIdUsages: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceAgreementsTypesByIdUsagesList: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceAgreementsTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementsTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeInfo"][];
        };
      };
    };
  };
  getFinanceAgreementsTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementTypesByParentIdBoardDefaults: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementTypeBoardDefault */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeBoardDefault"][];
        };
      };
    };
  };
  postFinanceAgreementTypesByParentIdBoardDefaults: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeBoardDefault */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeBoardDefault"];
        };
      };
    };
    /** boardDefault */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeBoardDefault"];
      };
    };
  };
  getFinanceAgreementTypesByParentIdBoardDefaultsById: {
    parameters: {
      path: {
        /** boardDefaultId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeBoardDefault */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeBoardDefault"];
        };
      };
    };
  };
  putFinanceAgreementTypesByParentIdBoardDefaultsById: {
    parameters: {
      path: {
        /** boardDefaultId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeBoardDefault */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeBoardDefault"];
        };
      };
    };
    /** boardDefault */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeBoardDefault"];
      };
    };
  };
  deleteFinanceAgreementTypesByParentIdBoardDefaultsById: {
    parameters: {
      path: {
        /** boardDefaultId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementTypesByParentIdBoardDefaultsById: {
    parameters: {
      path: {
        /** boardDefaultId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeBoardDefault */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeBoardDefault"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementTypesByParentIdBoardDefaultsCount: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkRoleExclusions: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementTypeWorkRoleExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRoleExclusion"][];
        };
      };
    };
  };
  postFinanceAgreementTypesByParentIdWorkRoleExclusions: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkRoleExclusion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRoleExclusion"];
        };
      };
    };
    /** workRoleExclusion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeWorkRoleExclusion"];
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkRoleExclusionsById: {
    parameters: {
      path: {
        /** workRoleExclusionId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkRoleExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRoleExclusion"];
        };
      };
    };
  };
  deleteFinanceAgreementTypesByParentIdWorkRoleExclusionsById: {
    parameters: {
      path: {
        /** workRoleExclusionId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getFinanceAgreementTypesByParentIdWorkRoleExclusionsCount: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkroles: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementTypeWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRole"][];
        };
      };
    };
  };
  postFinanceAgreementTypesByParentIdWorkroles: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkRole */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRole"];
        };
      };
    };
    /** workRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeWorkRole"];
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkrolesById: {
    parameters: {
      path: {
        /** workroleId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRole"];
        };
      };
    };
  };
  putFinanceAgreementTypesByParentIdWorkrolesById: {
    parameters: {
      path: {
        /** workroleId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRole"];
        };
      };
    };
    /** workRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeWorkRole"];
      };
    };
  };
  deleteFinanceAgreementTypesByParentIdWorkrolesById: {
    parameters: {
      path: {
        /** workroleId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementTypesByParentIdWorkrolesById: {
    parameters: {
      path: {
        /** workroleId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRole"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkrolesCount: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkrolesInfo: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementTypeWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRoleInfo"][];
        };
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkrolesInfoById: {
    parameters: {
      path: {
        /** workroleId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkRoleInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkRoleInfo"];
        };
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkrolesInfoCount: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkTypeExclusions: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementTypeWorkTypeExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkTypeExclusion"][];
        };
      };
    };
  };
  postFinanceAgreementTypesByParentIdWorkTypeExclusions: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkTypeExclusion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkTypeExclusion"];
        };
      };
    };
    /** workTypeExclusion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeWorkTypeExclusion"];
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorkTypeExclusionsById: {
    parameters: {
      path: {
        /** workTypeExclusionId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkTypeExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkTypeExclusion"];
        };
      };
    };
  };
  deleteFinanceAgreementTypesByParentIdWorkTypeExclusionsById: {
    parameters: {
      path: {
        /** workTypeExclusionId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getFinanceAgreementTypesByParentIdWorkTypeExclusionsCount: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorktypes: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementTypeWorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkType"][];
        };
      };
    };
  };
  postFinanceAgreementTypesByParentIdWorktypes: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkType"];
        };
      };
    };
    /** workType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeWorkType"];
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorktypesById: {
    parameters: {
      path: {
        /** worktypeId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkType"];
        };
      };
    };
  };
  putFinanceAgreementTypesByParentIdWorktypesById: {
    parameters: {
      path: {
        /** worktypeId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkType"];
        };
      };
    };
    /** workType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementTypeWorkType"];
      };
    };
  };
  deleteFinanceAgreementTypesByParentIdWorktypesById: {
    parameters: {
      path: {
        /** worktypeId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceAgreementTypesByParentIdWorktypesById: {
    parameters: {
      path: {
        /** worktypeId */
        id: number;
        /** agreementTypeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementTypeWorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementTypeWorkType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceAgreementTypesByParentIdWorktypesCount: {
    parameters: {
      path: {
        /** agreementTypeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceBatchSetups: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AgreementBatchSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementBatchSetup"][];
        };
      };
    };
  };
  getFinanceBatchSetupsById: {
    parameters: {
      path: {
        /** batchSetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementBatchSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementBatchSetup"];
        };
      };
    };
  };
  putFinanceBatchSetupsById: {
    parameters: {
      path: {
        /** batchSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementBatchSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementBatchSetup"];
        };
      };
    };
    /** batchSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgreementBatchSetup"];
      };
    };
  };
  patchFinanceBatchSetupsById: {
    parameters: {
      path: {
        /** batchSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AgreementBatchSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AgreementBatchSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceBatchSetupsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceBillingCycles: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BillingCycle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingCycle"][];
        };
      };
    };
  };
  postFinanceBillingCycles: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingCycle */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingCycle"];
        };
      };
    };
    /** billingCycle */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingCycle"];
      };
    };
  };
  getFinanceBillingCyclesById: {
    parameters: {
      path: {
        /** billingCycleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingCycle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingCycle"];
        };
      };
    };
  };
  putFinanceBillingCyclesById: {
    parameters: {
      path: {
        /** billingCycleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingCycle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingCycle"];
        };
      };
    };
    /** billingCycle */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingCycle"];
      };
    };
  };
  deleteFinanceBillingCyclesById: {
    parameters: {
      path: {
        /** billingCycleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceBillingCyclesById: {
    parameters: {
      path: {
        /** billingCycleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingCycle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingCycle"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceBillingCyclesByIdInfo: {
    parameters: {
      path: {
        /** BillingCycleInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingCycleInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingCycleInfo"];
        };
      };
    };
  };
  getFinanceBillingCyclesByIdUsages: {
    parameters: {
      path: {
        /** billingCycleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceBillingCyclesByIdUsagesList: {
    parameters: {
      path: {
        /** billingCycleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceBillingCyclesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceBillingCyclesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of billingCycleInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingCycleInfo"][];
        };
      };
    };
  };
  getFinanceBillingCyclesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceBillingSetups: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BillingSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetup"][];
        };
      };
    };
  };
  postFinanceBillingSetups: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingSetup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetup"];
        };
      };
    };
    /** billingSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingSetup"];
      };
    };
  };
  getFinanceBillingSetupsById: {
    parameters: {
      path: {
        /** billingSetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetup"];
        };
      };
    };
  };
  putFinanceBillingSetupsById: {
    parameters: {
      path: {
        /** billingSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetup"];
        };
      };
    };
    /** billingSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingSetup"];
      };
    };
  };
  deleteFinanceBillingSetupsById: {
    parameters: {
      path: {
        /** billingSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceBillingSetupsById: {
    parameters: {
      path: {
        /** billingSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceBillingSetupsByIdInfo: {
    parameters: {
      path: {
        /** BillingSetupInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingSetupInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetupInfo"];
        };
      };
    };
  };
  getFinanceBillingSetupsByParentIdRoutings: {
    parameters: {
      path: {
        /** billingSetupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BillingSetupRouting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetupRouting"][];
        };
      };
    };
  };
  postFinanceBillingSetupsByParentIdRoutings: {
    parameters: {
      path: {
        /** billingSetupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingSetupRouting */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetupRouting"];
        };
      };
    };
    /** billingSetupRouting */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingSetupRouting"];
      };
    };
  };
  getFinanceBillingSetupsByParentIdRoutingsById: {
    parameters: {
      path: {
        /** routingId */
        id: number;
        /** billingSetupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingSetupRouting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetupRouting"];
        };
      };
    };
  };
  putFinanceBillingSetupsByParentIdRoutingsById: {
    parameters: {
      path: {
        /** routingId */
        id: number;
        /** billingSetupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingSetupRouting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetupRouting"];
        };
      };
    };
    /** billingSetupRouting */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingSetupRouting"];
      };
    };
  };
  deleteFinanceBillingSetupsByParentIdRoutingsById: {
    parameters: {
      path: {
        /** routingId */
        id: number;
        /** billingSetupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceBillingSetupsByParentIdRoutingsById: {
    parameters: {
      path: {
        /** routingId */
        id: number;
        /** billingSetupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingSetupRouting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetupRouting"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceBillingSetupsByParentIdRoutingsCount: {
    parameters: {
      path: {
        /** billingSetupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceBillingSetupsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceBillingSetupsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of billingSetupInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingSetupInfo"][];
        };
      };
    };
  };
  getFinanceBillingStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BillingStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingStatus"][];
        };
      };
    };
  };
  postFinanceBillingStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingStatus"];
        };
      };
    };
    /** billingStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingStatus"];
      };
    };
  };
  getFinanceBillingStatusesById: {
    parameters: {
      path: {
        /** billingStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingStatus"];
        };
      };
    };
  };
  putFinanceBillingStatusesById: {
    parameters: {
      path: {
        /** billingStatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingStatus"];
        };
      };
    };
    /** billingStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingStatus"];
      };
    };
  };
  deleteFinanceBillingStatusesById: {
    parameters: {
      path: {
        /** billingStatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceBillingStatusesById: {
    parameters: {
      path: {
        /** billingStatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceBillingStatusesByIdInfo: {
    parameters: {
      path: {
        /** billingStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingStatusInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingStatusInfo"];
        };
      };
    };
  };
  getFinanceBillingStatusesByIdUsages: {
    parameters: {
      path: {
        /** billingStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceBillingStatusesByIdUsagesList: {
    parameters: {
      path: {
        /** billingStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceBillingStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceBillingStatusesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BillingStatusInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingStatusInfo"][];
        };
      };
    };
  };
  getFinanceBillingStatusesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceBillingTerms: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BillingTerm */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingTerm"][];
        };
      };
    };
  };
  postFinanceBillingTerms: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingTerm */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingTerm"];
        };
      };
    };
    /** billingTerms */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingTerm"];
      };
    };
  };
  getFinanceBillingTermsById: {
    parameters: {
      path: {
        /** billingTermId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingTerm */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingTerm"];
        };
      };
    };
  };
  putFinanceBillingTermsById: {
    parameters: {
      path: {
        /** billingTermId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingTerm */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingTerm"];
        };
      };
    };
    /** billingTerms */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BillingTerm"];
      };
    };
  };
  deleteFinanceBillingTermsById: {
    parameters: {
      path: {
        /** billingTermId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceBillingTermsById: {
    parameters: {
      path: {
        /** billingTermId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingTerm */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingTerm"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceBillingTermsByIdInfo: {
    parameters: {
      path: {
        /** billingTermId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BillingTermInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingTermInfo"];
        };
      };
    };
  };
  getFinanceBillingTermsByIdUsages: {
    parameters: {
      path: {
        /** billingTermId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceBillingTermsByIdUsagesList: {
    parameters: {
      path: {
        /** billingTermId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceBillingTermsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceBillingTermsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BillingTermInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BillingTermInfo"][];
        };
      };
    };
  };
  getFinanceBillingTermsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  putFinanceClosedInvoicesById: {
    parameters: {
      path: {
        /** closedInvoiceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ClosedInvoice */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ClosedInvoice"];
        };
      };
    };
    /** closedInvoice */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClosedInvoice"];
      };
    };
  };
  patchFinanceClosedInvoicesById: {
    parameters: {
      path: {
        /** closedInvoiceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ClosedInvoice */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ClosedInvoice"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceCompanyFinance: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of companyFinances */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyFinance"][];
        };
      };
    };
  };
  getFinanceCompanyFinanceById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyFinance */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyFinance"];
        };
      };
    };
  };
  patchFinanceCompanyFinanceById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CompanyFinance */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CompanyFinance"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceCompanyFinanceCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceCurrencies: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Currency */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Finance.Currency"][];
        };
      };
    };
  };
  postFinanceCurrencies: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Currency */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Finance.Currency"];
        };
      };
    };
    /** currency */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Finance.Currency"];
      };
    };
  };
  getFinanceCurrenciesById: {
    parameters: {
      path: {
        /** currencyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Currency */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Finance.Currency"];
        };
      };
    };
  };
  putFinanceCurrenciesById: {
    parameters: {
      path: {
        /** currencyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Currency */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Finance.Currency"];
        };
      };
    };
    /** currency */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Finance.Currency"];
      };
    };
  };
  deleteFinanceCurrenciesById: {
    parameters: {
      path: {
        /** currencyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceCurrenciesById: {
    parameters: {
      path: {
        /** currencyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Currency */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Finance.Currency"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceCurrenciesByIdInfo: {
    parameters: {
      path: {
        /** CurrencyInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CurrencyInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CurrencyInfo"];
        };
      };
    };
  };
  getFinanceCurrenciesByIdUsages: {
    parameters: {
      path: {
        /** currencyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceCurrenciesByIdUsagesList: {
    parameters: {
      path: {
        /** currencyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceCurrenciesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceCurrenciesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of currencyInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CurrencyInfo"][];
        };
      };
    };
  };
  getFinanceCurrenciesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceDeliveryMethods: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of DeliveryMethod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DeliveryMethod"][];
        };
      };
    };
  };
  postFinanceDeliveryMethods: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DeliveryMethod */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DeliveryMethod"];
        };
      };
    };
    /** deliveryMethod */
    requestBody: {
      content: {
        "application/json": components["schemas"]["DeliveryMethod"];
      };
    };
  };
  getFinanceDeliveryMethodsById: {
    parameters: {
      path: {
        /** deliveryMethodId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DeliveryMethod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DeliveryMethod"];
        };
      };
    };
  };
  putFinanceDeliveryMethodsById: {
    parameters: {
      path: {
        /** deliveryMethodId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DeliveryMethod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DeliveryMethod"];
        };
      };
    };
    /** deliveryMethod */
    requestBody: {
      content: {
        "application/json": components["schemas"]["DeliveryMethod"];
      };
    };
  };
  deleteFinanceDeliveryMethodsById: {
    parameters: {
      path: {
        /** deliveryMethodId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceDeliveryMethodsById: {
    parameters: {
      path: {
        /** deliveryMethodId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DeliveryMethod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DeliveryMethod"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceDeliveryMethodsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceGlAccounts: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of GLAccount */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLAccount"][];
        };
      };
    };
  };
  postFinanceGlAccounts: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLAccount */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLAccount"];
        };
      };
    };
    /** glAccount */
    requestBody: {
      content: {
        "application/json": components["schemas"]["GLAccount"];
      };
    };
  };
  getFinanceGlAccountsById: {
    parameters: {
      path: {
        /** glAccountId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLAccount */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLAccount"];
        };
      };
    };
  };
  putFinanceGlAccountsById: {
    parameters: {
      path: {
        /** glAccountId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLAccount */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLAccount"];
        };
      };
    };
    /** glAccount */
    requestBody: {
      content: {
        "application/json": components["schemas"]["GLAccount"];
      };
    };
  };
  deleteFinanceGlAccountsById: {
    parameters: {
      path: {
        /** glAccountId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceGlAccountsById: {
    parameters: {
      path: {
        /** glAccountId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLAccount */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLAccount"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceGlAccountsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceGlAccountsMappedTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MappedType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MappedType"][];
        };
      };
    };
  };
  getFinanceGlAccountsMappedTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceGlCaptions: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of GLCaption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLCaption"][];
        };
      };
    };
  };
  getFinanceGlCaptionsById: {
    parameters: {
      path: {
        /** glCaptionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLCaption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLCaption"];
        };
      };
    };
  };
  putFinanceGlCaptionsById: {
    parameters: {
      path: {
        /** glCaptionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLCaption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLCaption"];
        };
      };
    };
    /** glCaption */
    requestBody: {
      content: {
        "application/json": components["schemas"]["GLCaption"];
      };
    };
  };
  patchFinanceGlCaptionsById: {
    parameters: {
      path: {
        /** glCaptionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLCaption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLCaption"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceGlCaptionsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceGlpaths: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of GLPath */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLPath"][];
        };
      };
    };
  };
  postFinanceGlpaths: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLPath */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLPath"];
        };
      };
    };
    /** gLPath */
    requestBody: {
      content: {
        "application/json": components["schemas"]["GLPath"];
      };
    };
  };
  getFinanceGlpathsById: {
    parameters: {
      path: {
        /** glpathId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLPath */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLPath"];
        };
      };
    };
  };
  putFinanceGlpathsById: {
    parameters: {
      path: {
        /** glpathId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLPath */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLPath"];
        };
      };
    };
    /** gLPath */
    requestBody: {
      content: {
        "application/json": components["schemas"]["GLPath"];
      };
    };
  };
  deleteFinanceGlpathsById: {
    parameters: {
      path: {
        /** glpathId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceGlpathsById: {
    parameters: {
      path: {
        /** glpathId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GLPath */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GLPath"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceGlpathsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceInfoCurrencyCodes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CurrencyCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CurrencyCode"][];
        };
      };
    };
  };
  getFinanceInfoCurrencyCodesById: {
    parameters: {
      path: {
        /** currencyCodeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CurrencyCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CurrencyCode"];
        };
      };
    };
  };
  getFinanceInfoCurrencyCodesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceInfoInvoiceById: {
    parameters: {
      path: {
        /** invoiceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceInfo"];
        };
      };
    };
  };
  getFinanceInfoTaxIntegrations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TaxIntegrationInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxIntegrationInfo"][];
        };
      };
    };
  };
  getFinanceInfoTaxIntegrationsById: {
    parameters: {
      path: {
        /** taxIntegrationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxIntegrationInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxIntegrationInfo"];
        };
      };
    };
  };
  getFinanceInfoTaxIntegrationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceInvoiceEmailTemplates: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of InvoiceEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceEmailTemplate"][];
        };
      };
    };
  };
  postFinanceInvoiceEmailTemplates: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceEmailTemplate */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceEmailTemplate"];
        };
      };
    };
    /** invoiceEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["InvoiceEmailTemplate"];
      };
    };
  };
  getFinanceInvoiceEmailTemplatesById: {
    parameters: {
      path: {
        /** invoiceEmailTemplateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceEmailTemplate"];
        };
      };
    };
  };
  putFinanceInvoiceEmailTemplatesById: {
    parameters: {
      path: {
        /** invoiceEmailTemplateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceEmailTemplate"];
        };
      };
    };
    /** invoiceEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["InvoiceEmailTemplate"];
      };
    };
  };
  deleteFinanceInvoiceEmailTemplatesById: {
    parameters: {
      path: {
        /** invoiceEmailTemplateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceInvoiceEmailTemplatesById: {
    parameters: {
      path: {
        /** invoiceEmailTemplateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceEmailTemplate"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceInvoiceEmailTemplatesByIdInfo: {
    parameters: {
      path: {
        /** InvoiceEmailTemplateInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceEmailTemplateInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceEmailTemplateInfo"];
        };
      };
    };
  };
  getFinanceInvoiceEmailTemplatesByIdUsages: {
    parameters: {
      path: {
        /** invoiceEmailTemplateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceInvoiceEmailTemplatesByIdUsagesList: {
    parameters: {
      path: {
        /** invoiceEmailTemplateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceInvoiceEmailTemplatesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceInvoiceEmailTemplatesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of invoiceEmailTemplateInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceEmailTemplateInfo"][];
        };
      };
    };
  };
  getFinanceInvoiceEmailTemplatesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceInvoices: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Invoice */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Invoice"][];
        };
      };
    };
  };
  postFinanceInvoices: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Invoice */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Invoice"];
        };
      };
    };
    /** invoice */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Invoice"];
      };
    };
  };
  getFinanceInvoicesById: {
    parameters: {
      path: {
        /** invoiceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Invoice */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Invoice"];
        };
      };
    };
  };
  putFinanceInvoicesById: {
    parameters: {
      path: {
        /** invoiceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Invoice */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Invoice"];
        };
      };
    };
    /** invoice */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Invoice"];
      };
    };
  };
  deleteFinanceInvoicesById: {
    parameters: {
      path: {
        /** invoiceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceInvoicesById: {
    parameters: {
      path: {
        /** invoiceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Invoice */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Invoice"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceInvoicesByIdPdf: {
    parameters: {
      path: {
        /** invoiceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContentType = application/pdf */
      200: unknown;
    };
  };
  getFinanceInvoicesByParentIdPayments: {
    parameters: {
      path: {
        /** invoiceId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Payment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Payment"][];
        };
      };
    };
  };
  postFinanceInvoicesByParentIdPayments: {
    parameters: {
      path: {
        /** invoiceId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Payment */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Payment"];
        };
      };
    };
    /** payment */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Payment"];
      };
    };
  };
  getFinanceInvoicesByParentIdPaymentsById: {
    parameters: {
      path: {
        /** paymentId */
        id: number;
        /** invoiceId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Payment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Payment"];
        };
      };
    };
  };
  putFinanceInvoicesByParentIdPaymentsById: {
    parameters: {
      path: {
        /** paymentId */
        id: number;
        /** invoiceId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Payment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Payment"];
        };
      };
    };
    /** payment */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Payment"];
      };
    };
  };
  deleteFinanceInvoicesByParentIdPaymentsById: {
    parameters: {
      path: {
        /** paymentId */
        id: number;
        /** invoiceId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceInvoicesByParentIdPaymentsById: {
    parameters: {
      path: {
        /** paymentId */
        id: number;
        /** invoiceId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Payment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Payment"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceInvoicesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceInvoiceTemplates: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of InvoiceTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceTemplate"][];
        };
      };
    };
  };
  postFinanceInvoiceTemplates: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceTemplate */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceTemplate"];
        };
      };
    };
    /** invoiceTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["InvoiceTemplate"];
      };
    };
  };
  getFinanceInvoiceTemplatesById: {
    parameters: {
      path: {
        /** invoiceTemplateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceTemplate"];
        };
      };
    };
  };
  putFinanceInvoiceTemplatesById: {
    parameters: {
      path: {
        /** invoiceTemplateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceTemplate"];
        };
      };
    };
    /** invoiceTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["InvoiceTemplate"];
      };
    };
  };
  deleteFinanceInvoiceTemplatesById: {
    parameters: {
      path: {
        /** invoiceTemplateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceInvoiceTemplatesById: {
    parameters: {
      path: {
        /** invoiceTemplateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceTemplate"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceInvoiceTemplatesByIdUsages: {
    parameters: {
      path: {
        /** invoiceTemplateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceInvoiceTemplatesByIdUsagesList: {
    parameters: {
      path: {
        /** invoiceTemplateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceInvoiceTemplatesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceInvoiceTemplateSetups: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of InvoiceTemplateSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceTemplateSetup"][];
        };
      };
    };
  };
  getFinanceInvoiceTemplateSetupsById: {
    parameters: {
      path: {
        /** invoiceTemplateSetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InvoiceTemplateSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InvoiceTemplateSetup"];
        };
      };
    };
  };
  getFinanceInvoiceTemplateSetupsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TaxCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCode"][];
        };
      };
    };
  };
  postFinanceTaxCodes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCode */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCode"];
        };
      };
    };
    /** taxCode */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxCode"];
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevels: {
    parameters: {
      path: {
        /** expenseTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TaxableExpenseTypeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableExpenseTypeLevel"][];
        };
      };
    };
  };
  postFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevels: {
    parameters: {
      path: {
        /** expenseTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableExpenseTypeLevel */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableExpenseTypeLevel"];
        };
      };
    };
    /** taxableExpenseTypeLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxableExpenseTypeLevel"];
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById: {
    parameters: {
      path: {
        /** taxableExpenseTypeLevelId */
        id: number;
        /** expenseTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableExpenseTypeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableExpenseTypeLevel"];
        };
      };
    };
  };
  putFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById: {
    parameters: {
      path: {
        /** taxableExpenseTypeLevelId */
        id: number;
        /** expenseTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableExpenseTypeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableExpenseTypeLevel"];
        };
      };
    };
    /** taxableExpenseTypeLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxableExpenseTypeLevel"];
      };
    };
  };
  deleteFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById: {
    parameters: {
      path: {
        /** taxableExpenseTypeLevelId */
        id: number;
        /** expenseTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsById: {
    parameters: {
      path: {
        /** taxableExpenseTypeLevelId */
        id: number;
        /** expenseTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableExpenseTypeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableExpenseTypeLevel"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdExpenseTypeExemptionsByParentIdTaxableExpenseTypeLevelsCount: {
    parameters: {
      path: {
        /** expenseTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevels: {
    parameters: {
      path: {
        /** productTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TaxableProductTypeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableProductTypeLevel"][];
        };
      };
    };
  };
  postFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevels: {
    parameters: {
      path: {
        /** productTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableProductTypeLevel */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableProductTypeLevel"];
        };
      };
    };
    /** taxableProductTypeLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxableProductTypeLevel"];
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById: {
    parameters: {
      path: {
        /** taxableProductTypeLevelId */
        id: number;
        /** productTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableProductTypeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableProductTypeLevel"];
        };
      };
    };
  };
  putFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById: {
    parameters: {
      path: {
        /** taxableProductTypeLevelId */
        id: number;
        /** productTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableProductTypeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableProductTypeLevel"];
        };
      };
    };
    /** taxableProductTypeLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxableProductTypeLevel"];
      };
    };
  };
  deleteFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById: {
    parameters: {
      path: {
        /** taxableProductTypeLevelId */
        id: number;
        /** productTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsById: {
    parameters: {
      path: {
        /** taxableProductTypeLevelId */
        id: number;
        /** productTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableProductTypeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableProductTypeLevel"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdProductTypeExemptionsByParentIdTaxableProductTypeLevelsCount: {
    parameters: {
      path: {
        /** productTypeExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevels: {
    parameters: {
      path: {
        /** taxCodeXRefId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TaxableXRefLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableXRefLevel"][];
        };
      };
    };
  };
  postFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevels: {
    parameters: {
      path: {
        /** taxCodeXRefId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableXRefLevel */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableXRefLevel"];
        };
      };
    };
    /** taxableXRefLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxableXRefLevel"];
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById: {
    parameters: {
      path: {
        /** taxableXRefLevelId */
        id: number;
        /** taxCodeXRefId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableXRefLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableXRefLevel"];
        };
      };
    };
  };
  putFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById: {
    parameters: {
      path: {
        /** taxableXRefLevelId */
        id: number;
        /** taxCodeXRefId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableXRefLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableXRefLevel"];
        };
      };
    };
    /** taxableXRefLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxableXRefLevel"];
      };
    };
  };
  deleteFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById: {
    parameters: {
      path: {
        /** taxableXRefLevelId */
        id: number;
        /** taxCodeXRefId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsById: {
    parameters: {
      path: {
        /** taxableXRefLevelId */
        id: number;
        /** taxCodeXRefId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableXRefLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableXRefLevel"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdTaxCodeXRefsByParentIdTaxableXRefLevelsCount: {
    parameters: {
      path: {
        /** taxCodeXRefId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevels: {
    parameters: {
      path: {
        /** workRoleExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TaxableWorkRoleLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableWorkRoleLevel"][];
        };
      };
    };
  };
  postFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevels: {
    parameters: {
      path: {
        /** workRoleExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableWorkRoleLevel */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableWorkRoleLevel"];
        };
      };
    };
    /** taxableWorkRoleLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxableWorkRoleLevel"];
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById: {
    parameters: {
      path: {
        /** taxableWorkRoleLevelId */
        id: number;
        /** workRoleExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableWorkRoleLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableWorkRoleLevel"];
        };
      };
    };
  };
  putFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById: {
    parameters: {
      path: {
        /** taxableWorkRoleLevelId */
        id: number;
        /** workRoleExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableWorkRoleLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableWorkRoleLevel"];
        };
      };
    };
    /** taxableWorkRoleLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxableWorkRoleLevel"];
      };
    };
  };
  deleteFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById: {
    parameters: {
      path: {
        /** taxableWorkRoleLevelId */
        id: number;
        /** workRoleExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsById: {
    parameters: {
      path: {
        /** taxableWorkRoleLevelId */
        id: number;
        /** workRoleExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxableWorkRoleLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxableWorkRoleLevel"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxCodesByGrandparentIdWorkRoleExemptionsByParentIdTaxableWorkRoleLevelsCount: {
    parameters: {
      path: {
        /** workRoleExemptionId */
        parentId: number;
        /** taxCodeId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesById: {
    parameters: {
      path: {
        /** taxCodeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCode"];
        };
      };
    };
  };
  putFinanceTaxCodesById: {
    parameters: {
      path: {
        /** taxCodeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCode"];
        };
      };
    };
    /** taxCode */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxCode"];
      };
    };
  };
  deleteFinanceTaxCodesById: {
    parameters: {
      path: {
        /** taxCodeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesById: {
    parameters: {
      path: {
        /** taxCodeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCode"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postFinanceTaxCodesByIdCopy: {
    parameters: {
      path: {
        /** taxCodeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCode"];
        };
      };
    };
  };
  getFinanceTaxCodesByIdInfo: {
    parameters: {
      path: {
        /** TaxCodeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCodeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeInfo"];
        };
      };
    };
  };
  getFinanceTaxCodesByIdUsages: {
    parameters: {
      path: {
        /** taxCodeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceTaxCodesByIdUsagesList: {
    parameters: {
      path: {
        /** taxCodeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getFinanceTaxCodesByParentIdExpenseTypeExemptions: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ExpenseTypeExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseTypeExemption"][];
        };
      };
    };
  };
  postFinanceTaxCodesByParentIdExpenseTypeExemptions: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseTypeExemption */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseTypeExemption"];
        };
      };
    };
    /** expenseTypeExemption */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExpenseTypeExemption"];
      };
    };
  };
  getFinanceTaxCodesByParentIdExpenseTypeExemptionsById: {
    parameters: {
      path: {
        /** expenseTypeExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseTypeExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseTypeExemption"];
        };
      };
    };
  };
  putFinanceTaxCodesByParentIdExpenseTypeExemptionsById: {
    parameters: {
      path: {
        /** expenseTypeExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseTypeExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseTypeExemption"];
        };
      };
    };
    /** expenseTypeExemption */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ExpenseTypeExemption"];
      };
    };
  };
  deleteFinanceTaxCodesByParentIdExpenseTypeExemptionsById: {
    parameters: {
      path: {
        /** expenseTypeExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesByParentIdExpenseTypeExemptionsById: {
    parameters: {
      path: {
        /** expenseTypeExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ExpenseTypeExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ExpenseTypeExemption"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxCodesByParentIdExpenseTypeExemptionsCount: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesByParentIdProductTypeExemptions: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductTypeExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductTypeExemption"][];
        };
      };
    };
  };
  postFinanceTaxCodesByParentIdProductTypeExemptions: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductTypeExemption */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductTypeExemption"];
        };
      };
    };
    /** productTypeExemption */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductTypeExemption"];
      };
    };
  };
  getFinanceTaxCodesByParentIdProductTypeExemptionsById: {
    parameters: {
      path: {
        /** productTypeExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductTypeExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductTypeExemption"];
        };
      };
    };
  };
  putFinanceTaxCodesByParentIdProductTypeExemptionsById: {
    parameters: {
      path: {
        /** productTypeExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductTypeExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductTypeExemption"];
        };
      };
    };
    /** productTypeExemption */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductTypeExemption"];
      };
    };
  };
  deleteFinanceTaxCodesByParentIdProductTypeExemptionsById: {
    parameters: {
      path: {
        /** productTypeExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesByParentIdProductTypeExemptionsById: {
    parameters: {
      path: {
        /** productTypeExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductTypeExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductTypeExemption"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxCodesByParentIdProductTypeExemptionsCount: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesByParentIdTaxCodeLevels: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TaxCodeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeLevel"][];
        };
      };
    };
  };
  postFinanceTaxCodesByParentIdTaxCodeLevels: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCodeLevel */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeLevel"];
        };
      };
    };
    /** taxCodeLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxCodeLevel"];
      };
    };
  };
  getFinanceTaxCodesByParentIdTaxCodeLevelsById: {
    parameters: {
      path: {
        /** taxCodeLevelId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCodeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeLevel"];
        };
      };
    };
  };
  putFinanceTaxCodesByParentIdTaxCodeLevelsById: {
    parameters: {
      path: {
        /** taxCodeLevelId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCodeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeLevel"];
        };
      };
    };
    /** taxCodeLevel */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxCodeLevel"];
      };
    };
  };
  deleteFinanceTaxCodesByParentIdTaxCodeLevelsById: {
    parameters: {
      path: {
        /** taxCodeLevelId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesByParentIdTaxCodeLevelsById: {
    parameters: {
      path: {
        /** taxCodeLevelId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCodeLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeLevel"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxCodesByParentIdTaxCodeLevelsCount: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesByParentIdTaxCodeXRefs: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TaxCodeXRef */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeXRef"][];
        };
      };
    };
  };
  postFinanceTaxCodesByParentIdTaxCodeXRefs: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCodeXRef */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeXRef"];
        };
      };
    };
    /** taxCodeXRef */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxCodeXRef"];
      };
    };
  };
  getFinanceTaxCodesByParentIdTaxCodeXRefsById: {
    parameters: {
      path: {
        /** taxCodeXRefId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCodeXRef */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeXRef"];
        };
      };
    };
  };
  putFinanceTaxCodesByParentIdTaxCodeXRefsById: {
    parameters: {
      path: {
        /** taxCodeXRefId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCodeXRef */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeXRef"];
        };
      };
    };
    /** taxCodeXRef */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxCodeXRef"];
      };
    };
  };
  deleteFinanceTaxCodesByParentIdTaxCodeXRefsById: {
    parameters: {
      path: {
        /** taxCodeXRefId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesByParentIdTaxCodeXRefsById: {
    parameters: {
      path: {
        /** taxCodeXRefId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxCodeXRef */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeXRef"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxCodesByParentIdTaxCodeXRefsCount: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesByParentIdWorkRoleExemptions: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkRoleExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleExemption"][];
        };
      };
    };
  };
  postFinanceTaxCodesByParentIdWorkRoleExemptions: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRoleExemption */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleExemption"];
        };
      };
    };
    /** workRoleExemption */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkRoleExemption"];
      };
    };
  };
  getFinanceTaxCodesByParentIdWorkRoleExemptionsById: {
    parameters: {
      path: {
        /** workRoleExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRoleExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleExemption"];
        };
      };
    };
  };
  putFinanceTaxCodesByParentIdWorkRoleExemptionsById: {
    parameters: {
      path: {
        /** workRoleExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRoleExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleExemption"];
        };
      };
    };
    /** workRoleExemption */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkRoleExemption"];
      };
    };
  };
  deleteFinanceTaxCodesByParentIdWorkRoleExemptionsById: {
    parameters: {
      path: {
        /** workRoleExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchFinanceTaxCodesByParentIdWorkRoleExemptionsById: {
    parameters: {
      path: {
        /** workRoleExemptionId */
        id: number;
        /** taxCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRoleExemption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleExemption"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxCodesByParentIdWorkRoleExemptionsCount: {
    parameters: {
      path: {
        /** taxCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxCodesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of taxCodeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxCodeInfo"][];
        };
      };
    };
  };
  getFinanceTaxCodesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getFinanceTaxIntegrations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TaxIntegration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxIntegration"][];
        };
      };
    };
  };
  getFinanceTaxIntegrationsById: {
    parameters: {
      path: {
        /** taxIntegrationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxIntegration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxIntegration"];
        };
      };
    };
  };
  putFinanceTaxIntegrationsById: {
    parameters: {
      path: {
        /** taxIntegrationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxIntegration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxIntegration"];
        };
      };
    };
    /** taxIntegration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxIntegration"];
      };
    };
  };
  patchFinanceTaxIntegrationsById: {
    parameters: {
      path: {
        /** taxIntegrationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TaxIntegration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TaxIntegration"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getFinanceTaxIntegrationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaigns: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Campaign */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign"][];
        };
      };
    };
  };
  postMarketingCampaigns: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Campaign */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign"];
        };
      };
    };
    /** campaign */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Campaign"];
      };
    };
  };
  getMarketingCampaignsById: {
    parameters: {
      path: {
        /** campaignId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Campaign */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign"];
        };
      };
    };
  };
  putMarketingCampaignsById: {
    parameters: {
      path: {
        /** campaignId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Campaign */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign"];
        };
      };
    };
    /** campaign */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Campaign"];
      };
    };
  };
  deleteMarketingCampaignsById: {
    parameters: {
      path: {
        /** campaignId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingCampaignsById: {
    parameters: {
      path: {
        /** campaignId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Campaign */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingCampaignsByIdActivities: {
    parameters: {
      path: {
        /** campaignId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ActivityReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityReference"][];
        };
      };
    };
  };
  getMarketingCampaignsByIdActivitiesCount: {
    parameters: {
      path: {
        /** campaignId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsByIdOpportunities: {
    parameters: {
      path: {
        /** campaignId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OpportunityReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityReference"][];
        };
      };
    };
  };
  getMarketingCampaignsByIdOpportunitiesCount: {
    parameters: {
      path: {
        /** campaignId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsByParentIdAudits: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CampaignAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignAudit"][];
        };
      };
    };
  };
  postMarketingCampaignsByParentIdAudits: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignAudit */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignAudit"];
        };
      };
    };
    /** campaignAudit */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CampaignAudit"];
      };
    };
  };
  getMarketingCampaignsByParentIdAuditsById: {
    parameters: {
      path: {
        /** auditId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignAudit"];
        };
      };
    };
  };
  putMarketingCampaignsByParentIdAuditsById: {
    parameters: {
      path: {
        /** auditId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignAudit"];
        };
      };
    };
    /** campaignAudit */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CampaignAudit"];
      };
    };
  };
  deleteMarketingCampaignsByParentIdAuditsById: {
    parameters: {
      path: {
        /** auditId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingCampaignsByParentIdAuditsById: {
    parameters: {
      path: {
        /** auditId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignAudit"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingCampaignsByParentIdAuditsCount: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsByParentIdEmailsOpened: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of EmailOpened */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailOpened"][];
        };
      };
    };
  };
  postMarketingCampaignsByParentIdEmailsOpened: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailOpened */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailOpened"];
        };
      };
    };
    /** emailOpened */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailOpened"];
      };
    };
  };
  getMarketingCampaignsByParentIdEmailsOpenedById: {
    parameters: {
      path: {
        /** emailsOpenedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailOpened */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailOpened"];
        };
      };
    };
  };
  putMarketingCampaignsByParentIdEmailsOpenedById: {
    parameters: {
      path: {
        /** emailsOpenedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailOpened */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailOpened"];
        };
      };
    };
    /** emailOpened */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailOpened"];
      };
    };
  };
  deleteMarketingCampaignsByParentIdEmailsOpenedById: {
    parameters: {
      path: {
        /** emailsOpenedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingCampaignsByParentIdEmailsOpenedById: {
    parameters: {
      path: {
        /** emailsOpenedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailOpened */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailOpened"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingCampaignsByParentIdEmailsOpenedCount: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsByParentIdFormsSubmitted: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of FormSubmitted */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["FormSubmitted"][];
        };
      };
    };
  };
  postMarketingCampaignsByParentIdFormsSubmitted: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** FormSubmitted */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["FormSubmitted"];
        };
      };
    };
    /** formSubmitted */
    requestBody: {
      content: {
        "application/json": components["schemas"]["FormSubmitted"];
      };
    };
  };
  getMarketingCampaignsByParentIdFormsSubmittedById: {
    parameters: {
      path: {
        /** formsSubmittedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** FormSubmitted */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["FormSubmitted"];
        };
      };
    };
  };
  putMarketingCampaignsByParentIdFormsSubmittedById: {
    parameters: {
      path: {
        /** formsSubmittedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** FormSubmitted */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["FormSubmitted"];
        };
      };
    };
    /** formSubmitted */
    requestBody: {
      content: {
        "application/json": components["schemas"]["FormSubmitted"];
      };
    };
  };
  deleteMarketingCampaignsByParentIdFormsSubmittedById: {
    parameters: {
      path: {
        /** formsSubmittedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingCampaignsByParentIdFormsSubmittedById: {
    parameters: {
      path: {
        /** formsSubmittedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** FormSubmitted */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["FormSubmitted"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingCampaignsByParentIdFormsSubmittedCount: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsByParentIdLinksClicked: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of LinkClicked */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LinkClicked"][];
        };
      };
    };
  };
  postMarketingCampaignsByParentIdLinksClicked: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LinkClicked */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LinkClicked"];
        };
      };
    };
    /** linkClicked */
    requestBody: {
      content: {
        "application/json": components["schemas"]["LinkClicked"];
      };
    };
  };
  getMarketingCampaignsByParentIdLinksClickedById: {
    parameters: {
      path: {
        /** linksClickedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LinkClicked */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LinkClicked"];
        };
      };
    };
  };
  putMarketingCampaignsByParentIdLinksClickedById: {
    parameters: {
      path: {
        /** linksClickedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LinkClicked */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LinkClicked"];
        };
      };
    };
    /** linkClicked */
    requestBody: {
      content: {
        "application/json": components["schemas"]["LinkClicked"];
      };
    };
  };
  deleteMarketingCampaignsByParentIdLinksClickedById: {
    parameters: {
      path: {
        /** linksClickedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingCampaignsByParentIdLinksClickedById: {
    parameters: {
      path: {
        /** linksClickedId */
        id: number;
        /** campaignId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LinkClicked */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LinkClicked"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingCampaignsByParentIdLinksClickedCount: {
    parameters: {
      path: {
        /** campaignId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CampaignStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignStatus"][];
        };
      };
    };
  };
  postMarketingCampaignsStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignStatus"];
        };
      };
    };
    /** campaignStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CampaignStatus"];
      };
    };
  };
  getMarketingCampaignsStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignStatus"];
        };
      };
    };
  };
  putMarketingCampaignsStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignStatus"];
        };
      };
    };
    /** campaignStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CampaignStatus"];
      };
    };
  };
  deleteMarketingCampaignsStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingCampaignsStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingCampaignsStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsSubTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CampaignSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign.SubType.CampaignSubType"][];
        };
      };
    };
  };
  postMarketingCampaignsSubTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignSubType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign.SubType.CampaignSubType"];
        };
      };
    };
    /** campaignSubType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Campaign.SubType.CampaignSubType"];
      };
    };
  };
  getMarketingCampaignsSubTypesById: {
    parameters: {
      path: {
        /** subTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign.SubType.CampaignSubType"];
        };
      };
    };
  };
  putMarketingCampaignsSubTypesById: {
    parameters: {
      path: {
        /** subTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign.SubType.CampaignSubType"];
        };
      };
    };
    /** campaignSubType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Campaign.SubType.CampaignSubType"];
      };
    };
  };
  deleteMarketingCampaignsSubTypesById: {
    parameters: {
      path: {
        /** subTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingCampaignsSubTypesById: {
    parameters: {
      path: {
        /** subTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Campaign.SubType.CampaignSubType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingCampaignsSubTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CampaignType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignType"][];
        };
      };
    };
  };
  postMarketingCampaignsTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignType"];
        };
      };
    };
    /** campaignType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CampaignType"];
      };
    };
  };
  getMarketingCampaignsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignType"];
        };
      };
    };
  };
  putMarketingCampaignsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignType"];
        };
      };
    };
    /** campaignType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CampaignType"];
      };
    };
  };
  deleteMarketingCampaignsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingCampaignsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingCampaignsTypesByIdInfo: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignTypeInfo"];
        };
      };
    };
  };
  getMarketingCampaignsTypesByParentIdSubTypes: {
    parameters: {
      path: {
        /** typeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CampaignSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Type.SubType.CampaignSubType"][];
        };
      };
    };
  };
  getMarketingCampaignsTypesByParentIdSubTypesById: {
    parameters: {
      path: {
        /** subTypeId */
        id: number;
        /** typeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CampaignSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Type.SubType.CampaignSubType"];
        };
      };
    };
  };
  getMarketingCampaignsTypesByParentIdSubTypesCount: {
    parameters: {
      path: {
        /** typeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingCampaignsTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CampaignTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CampaignTypeInfo"][];
        };
      };
    };
  };
  getMarketingCampaignsTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingGroups: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Group */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Group"][];
        };
      };
    };
  };
  postMarketingGroups: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Group */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Group"];
        };
      };
    };
    /** group */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
      };
    };
  };
  getMarketingGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Group */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Group"];
        };
      };
    };
  };
  putMarketingGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Group */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Group"];
        };
      };
    };
    /** group */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
      };
    };
  };
  deleteMarketingGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingGroupsById: {
    parameters: {
      path: {
        /** groupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Group */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Group"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingGroupsByIdUsages: {
    parameters: {
      path: {
        /** groupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getMarketingGroupsByIdUsagesList: {
    parameters: {
      path: {
        /** groupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getMarketingGroupsByParentIdCompanies: {
    parameters: {
      path: {
        /** groupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MarketingCompany */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingCompany"][];
        };
      };
    };
  };
  postMarketingGroupsByParentIdCompanies: {
    parameters: {
      path: {
        /** groupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketingCompany */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingCompany"];
        };
      };
    };
    /** marketingCompany */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarketingCompany"];
      };
    };
  };
  getMarketingGroupsByParentIdCompaniesById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
        /** groupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketingCompany */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingCompany"];
        };
      };
    };
  };
  putMarketingGroupsByParentIdCompaniesById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
        /** groupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketingCompany */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingCompany"];
        };
      };
    };
    /** marketingCompany */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarketingCompany"];
      };
    };
  };
  deleteMarketingGroupsByParentIdCompaniesById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
        /** groupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingGroupsByParentIdCompaniesById: {
    parameters: {
      path: {
        /** companyId */
        id: number;
        /** groupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketingCompany */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingCompany"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingGroupsByParentIdCompaniesCount: {
    parameters: {
      path: {
        /** groupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingGroupsByParentIdContacts: {
    parameters: {
      path: {
        /** groupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MarketingContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingContact"][];
        };
      };
    };
  };
  postMarketingGroupsByParentIdContacts: {
    parameters: {
      path: {
        /** groupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketingContact */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingContact"];
        };
      };
    };
    /** marketingContact */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarketingContact"];
      };
    };
  };
  getMarketingGroupsByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** groupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketingContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingContact"];
        };
      };
    };
  };
  putMarketingGroupsByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** groupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketingContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingContact"];
        };
      };
    };
    /** marketingContact */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarketingContact"];
      };
    };
  };
  deleteMarketingGroupsByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** groupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchMarketingGroupsByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** groupId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketingContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketingContact"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getMarketingGroupsByParentIdContactsCount: {
    parameters: {
      path: {
        /** groupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getMarketingGroupsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementAdjustments: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProcurementAdjustment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProcurementAdjustment"][];
        };
      };
    };
  };
  postProcurementAdjustments: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProcurementAdjustment */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProcurementAdjustment"];
        };
      };
    };
    /** adjustment */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProcurementAdjustment"];
      };
    };
  };
  getProcurementAdjustmentsById: {
    parameters: {
      path: {
        /** adjustmentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProcurementAdjustment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProcurementAdjustment"];
        };
      };
    };
  };
  putProcurementAdjustmentsById: {
    parameters: {
      path: {
        /** adjustmentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProcurementAdjustment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProcurementAdjustment"];
        };
      };
    };
    /** adjustment */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProcurementAdjustment"];
      };
    };
  };
  deleteProcurementAdjustmentsById: {
    parameters: {
      path: {
        /** adjustmentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementAdjustmentsById: {
    parameters: {
      path: {
        /** adjustmentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProcurementAdjustment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProcurementAdjustment"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementAdjustmentsByParentIdDetails: {
    parameters: {
      path: {
        /** adjustmentId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AdjustmentDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentDetail"][];
        };
      };
    };
  };
  postProcurementAdjustmentsByParentIdDetails: {
    parameters: {
      path: {
        /** adjustmentId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AdjustmentDetail */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentDetail"];
        };
      };
    };
    /** adjustmentDetail */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdjustmentDetail"];
      };
    };
  };
  getProcurementAdjustmentsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** adjustmentId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AdjustmentDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentDetail"];
        };
      };
    };
  };
  deleteProcurementAdjustmentsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** adjustmentId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getProcurementAdjustmentsByParentIdDetailsCount: {
    parameters: {
      path: {
        /** adjustmentId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementAdjustmentsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementAdjustmentsTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AdjustmentType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentType"][];
        };
      };
    };
  };
  postProcurementAdjustmentsTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AdjustmentType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentType"];
        };
      };
    };
    /** adjustmentTypes */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdjustmentType"];
      };
    };
  };
  getProcurementAdjustmentsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AdjustmentType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentType"];
        };
      };
    };
  };
  putProcurementAdjustmentsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AdjustmentType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentType"];
        };
      };
    };
    /** adjustmentTypes */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdjustmentType"];
      };
    };
  };
  deleteProcurementAdjustmentsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementAdjustmentsTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AdjustmentType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementAdjustmentsTypesByIdInfo: {
    parameters: {
      path: {
        /** AdjustmentTypeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AdjustmentTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentTypeInfo"];
        };
      };
    };
  };
  getProcurementAdjustmentsTypesByIdUsages: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementAdjustmentsTypesByIdUsagesList: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementAdjustmentsTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementAdjustmentsTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of adjustmentTypeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AdjustmentTypeInfo"][];
        };
      };
    };
  };
  getProcurementAdjustmentsTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCatalog: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CatalogItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogItem"][];
        };
      };
    };
  };
  postProcurementCatalog: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogItem */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogItem"];
        };
      };
    };
    /** catalogItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CatalogItem"];
      };
    };
  };
  getProcurementCatalogByCatalogItemIdentifierQuantityOnHand: {
    parameters: {
      path: {
        /** catalogItemIdentifier */
        catalogItemIdentifier: string;
        /** warehouseBinId */
        warehouseBinId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCatalogById: {
    parameters: {
      path: {
        /** catalogId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogItem"];
        };
      };
    };
  };
  putProcurementCatalogById: {
    parameters: {
      path: {
        /** catalogId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogItem"];
        };
      };
    };
    /** catalogItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CatalogItem"];
      };
    };
  };
  deleteProcurementCatalogById: {
    parameters: {
      path: {
        /** catalogId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementCatalogById: {
    parameters: {
      path: {
        /** catalogId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogItem"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementCatalogByIdInfo: {
    parameters: {
      path: {
        /** catalogId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogItemInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogItemInfo"];
        };
      };
    };
  };
  postProcurementCatalogByIdPricing: {
    parameters: {
      path: {
        /** catalogId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogPricing */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogPricing"];
        };
      };
    };
    /** catalogPricing */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CatalogPricing"];
      };
    };
  };
  getProcurementCatalogByParentIdComponents: {
    parameters: {
      path: {
        /** catalogId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CatalogComponent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogComponent"][];
        };
      };
    };
  };
  postProcurementCatalogByParentIdComponents: {
    parameters: {
      path: {
        /** catalogId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogComponent */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogComponent"];
        };
      };
    };
    /** catalogComponent */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CatalogComponent"];
      };
    };
  };
  getProcurementCatalogByParentIdComponentsById: {
    parameters: {
      path: {
        /** componentId */
        id: number;
        /** catalogId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogComponent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogComponent"];
        };
      };
    };
  };
  putProcurementCatalogByParentIdComponentsById: {
    parameters: {
      path: {
        /** componentId */
        id: number;
        /** catalogId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogComponent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogComponent"];
        };
      };
    };
    /** catalogComponent */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CatalogComponent"];
      };
    };
  };
  deleteProcurementCatalogByParentIdComponentsById: {
    parameters: {
      path: {
        /** componentId */
        id: number;
        /** catalogId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementCatalogByParentIdComponentsById: {
    parameters: {
      path: {
        /** componentId */
        id: number;
        /** catalogId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogComponent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogComponent"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementCatalogByParentIdComponentsCount: {
    parameters: {
      path: {
        /** catalogId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCatalogByParentIdInventory: {
    parameters: {
      path: {
        /** catalogId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CatalogInventory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogInventory"][];
        };
      };
    };
  };
  getProcurementCatalogByParentIdInventoryById: {
    parameters: {
      path: {
        /** inventoryId */
        id: number;
        /** catalogId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CatalogInventory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogInventory"];
        };
      };
    };
  };
  getProcurementCatalogByParentIdInventoryCount: {
    parameters: {
      path: {
        /** catalogId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCatalogByParentIdMinimumStockByWarehouse: {
    parameters: {
      path: {
        /** catalogId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MinimumStockByWarehouse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MinimumStockByWarehouse"][];
        };
      };
    };
  };
  postProcurementCatalogByParentIdMinimumStockByWarehouse: {
    parameters: {
      path: {
        /** catalogId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MinimumStockByWarehouse */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MinimumStockByWarehouse"];
        };
      };
    };
    /** minimumStockByWarehouse */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MinimumStockByWarehouse"];
      };
    };
  };
  getProcurementCatalogByParentIdMinimumStockByWarehouseById: {
    parameters: {
      path: {
        /** minimumStockByWarehouseId */
        id: number;
        /** catalogId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MinimumStockByWarehouse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MinimumStockByWarehouse"];
        };
      };
    };
  };
  putProcurementCatalogByParentIdMinimumStockByWarehouseById: {
    parameters: {
      path: {
        /** minimumStockByWarehouseId */
        id: number;
        /** catalogId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MinimumStockByWarehouse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MinimumStockByWarehouse"];
        };
      };
    };
    /** minimumStockByWarehouse */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MinimumStockByWarehouse"];
      };
    };
  };
  deleteProcurementCatalogByParentIdMinimumStockByWarehouseById: {
    parameters: {
      path: {
        /** minimumStockByWarehouseId */
        id: number;
        /** catalogId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementCatalogByParentIdMinimumStockByWarehouseById: {
    parameters: {
      path: {
        /** minimumStockByWarehouseId */
        id: number;
        /** catalogId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MinimumStockByWarehouse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MinimumStockByWarehouse"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementCatalogByParentIdMinimumStockByWarehouseCount: {
    parameters: {
      path: {
        /** catalogId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCatalogCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCatalogInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CatalogItemInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CatalogItemInfo"][];
        };
      };
    };
  };
  getProcurementCatalogInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCategories: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Category */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Category"][];
        };
      };
    };
  };
  postProcurementCategories: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Category */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Category"];
        };
      };
    };
    /** category */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Category"];
      };
    };
  };
  getProcurementCategoriesById: {
    parameters: {
      path: {
        /** categoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Category */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Category"];
        };
      };
    };
  };
  putProcurementCategoriesById: {
    parameters: {
      path: {
        /** categoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Category */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Category"];
        };
      };
    };
    /** category */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Category"];
      };
    };
  };
  deleteProcurementCategoriesById: {
    parameters: {
      path: {
        /** categoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementCategoriesById: {
    parameters: {
      path: {
        /** categoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Category */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Category"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementCategoriesByIdInfo: {
    parameters: {
      path: {
        /** categoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Category */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CategoryInfo"];
        };
      };
    };
  };
  getProcurementCategoriesByParentIdSubcategories: {
    parameters: {
      path: {
        /** categoryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of LegacySubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LegacySubCategory"][];
        };
      };
    };
  };
  postProcurementCategoriesByParentIdSubcategories: {
    parameters: {
      path: {
        /** categoryId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LegacySubCategory */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LegacySubCategory"];
        };
      };
    };
    /** subCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["LegacySubCategory"];
      };
    };
  };
  getProcurementCategoriesByParentIdSubcategoriesById: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
        /** categoryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LegacySubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LegacySubCategory"];
        };
      };
    };
  };
  putProcurementCategoriesByParentIdSubcategoriesById: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
        /** categoryId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LegacySubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LegacySubCategory"];
        };
      };
    };
    /** subCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["LegacySubCategory"];
      };
    };
  };
  deleteProcurementCategoriesByParentIdSubcategoriesById: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
        /** categoryId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementCategoriesByParentIdSubcategoriesById: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
        /** categoryId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LegacySubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LegacySubCategory"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementCategoriesByParentIdSubcategoriesByIdInfo: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
        /** categoryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LegacySubCategoryInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LegacySubCategoryInfo"];
        };
      };
    };
  };
  getProcurementCategoriesByParentIdSubcategoriesCount: {
    parameters: {
      path: {
        /** categoryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCategoriesByParentIdSubcategoriesInfo: {
    parameters: {
      path: {
        /** categoryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of legacySubCategoryInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LegacySubCategoryInfo"][];
        };
      };
    };
  };
  getProcurementCategoriesByParentIdSubcategoriesInfoCount: {
    parameters: {
      path: {
        /** categoryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCategoriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementCategoriesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Category */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CategoryInfo"][];
        };
      };
    };
  };
  getProcurementCategoriesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementManufacturers: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Manufacturer */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Manufacturer"][];
        };
      };
    };
  };
  postProcurementManufacturers: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Manufacturer */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Manufacturer"];
        };
      };
    };
    /** manufacturer */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Manufacturer"];
      };
    };
  };
  getProcurementManufacturersById: {
    parameters: {
      path: {
        /** manufacturerId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Manufacturer */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Manufacturer"];
        };
      };
    };
  };
  putProcurementManufacturersById: {
    parameters: {
      path: {
        /** manufacturerId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Manufacturer */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Manufacturer"];
        };
      };
    };
    /** manufacturer */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Manufacturer"];
      };
    };
  };
  deleteProcurementManufacturersById: {
    parameters: {
      path: {
        /** manufacturerId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementManufacturersById: {
    parameters: {
      path: {
        /** manufacturerId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Manufacturer */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Manufacturer"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementManufacturersByIdInfo: {
    parameters: {
      path: {
        /** manufacturerId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManufacturerInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManufacturerInfo"];
        };
      };
    };
  };
  getProcurementManufacturersCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementManufacturersCountInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementManufacturersInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Manufacturer */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManufacturerInfo"][];
        };
      };
    };
  };
  getProcurementOnhandserialnumbers: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OnHandSerialNumber */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OnHandSerialNumber"][];
        };
      };
    };
  };
  getProcurementOnhandserialnumbersById: {
    parameters: {
      path: {
        /** onhandserialnumberId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OnHandSerialNumber */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OnHandSerialNumber"];
        };
      };
    };
  };
  getProcurementOnhandserialnumbersCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementPricingschedules: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PricingSchedule */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingSchedule"][];
        };
      };
    };
  };
  postProcurementPricingschedules: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingSchedule */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingSchedule"];
        };
      };
    };
    /** pricingSchedule */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PricingSchedule"];
      };
    };
  };
  getProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaks: {
    parameters: {
      path: {
        /** detailId */
        parentId: number;
        /** pricingscheduleId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PricingBreak */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingBreak"][];
        };
      };
    };
  };
  postProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaks: {
    parameters: {
      path: {
        /** detailId */
        parentId: number;
        /** pricingscheduleId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingBreak */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingBreak"];
        };
      };
    };
    /** pricingBreak */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PricingBreak"];
      };
    };
  };
  getProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById: {
    parameters: {
      path: {
        /** breakId */
        id: number;
        /** detailId */
        parentId: number;
        /** pricingscheduleId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingBreak */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingBreak"];
        };
      };
    };
  };
  putProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById: {
    parameters: {
      path: {
        /** breakId */
        id: number;
        /** detailId */
        parentId: number;
        /** pricingscheduleId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingBreak */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingBreak"];
        };
      };
    };
    /** pricingBreak */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PricingBreak"];
      };
    };
  };
  deleteProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById: {
    parameters: {
      path: {
        /** breakId */
        id: number;
        /** detailId */
        parentId: number;
        /** pricingscheduleId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksById: {
    parameters: {
      path: {
        /** breakId */
        id: number;
        /** detailId */
        parentId: number;
        /** pricingscheduleId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingBreak */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingBreak"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementPricingschedulesByGrandparentIdDetailsByParentIdBreaksCount: {
    parameters: {
      path: {
        /** detailId */
        parentId: number;
        /** pricingscheduleId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementPricingschedulesById: {
    parameters: {
      path: {
        /** pricingscheduleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingSchedule */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingSchedule"];
        };
      };
    };
  };
  putProcurementPricingschedulesById: {
    parameters: {
      path: {
        /** pricingscheduleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingSchedule */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingSchedule"];
        };
      };
    };
    /** pricingSchedule */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PricingSchedule"];
      };
    };
  };
  deleteProcurementPricingschedulesById: {
    parameters: {
      path: {
        /** pricingscheduleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementPricingschedulesById: {
    parameters: {
      path: {
        /** pricingscheduleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingSchedule */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingSchedule"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementPricingschedulesByParentIdDetails: {
    parameters: {
      path: {
        /** pricingscheduleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PricingDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingDetail"][];
        };
      };
    };
  };
  postProcurementPricingschedulesByParentIdDetails: {
    parameters: {
      path: {
        /** pricingscheduleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingDetail */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingDetail"];
        };
      };
    };
    /** pricingDetail */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PricingDetail"];
      };
    };
  };
  getProcurementPricingschedulesByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** pricingscheduleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingDetail"];
        };
      };
    };
  };
  putProcurementPricingschedulesByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** pricingscheduleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingDetail"];
        };
      };
    };
    /** pricingDetail */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PricingDetail"];
      };
    };
  };
  deleteProcurementPricingschedulesByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** pricingscheduleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementPricingschedulesByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** pricingscheduleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PricingDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PricingDetail"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementPricingschedulesByParentIdDetailsCount: {
    parameters: {
      path: {
        /** pricingscheduleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementPricingschedulesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementProducts: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductItem"][];
        };
      };
    };
  };
  postProcurementProducts: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductItem */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductItem"];
        };
      };
    };
    /** productItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductItem"];
      };
    };
  };
  getProcurementProductsById: {
    parameters: {
      path: {
        /** productId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductItem"];
        };
      };
    };
  };
  putProcurementProductsById: {
    parameters: {
      path: {
        /** productId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductItem"];
        };
      };
    };
    /** productItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductItem"];
      };
    };
  };
  deleteProcurementProductsById: {
    parameters: {
      path: {
        /** productId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementProductsById: {
    parameters: {
      path: {
        /** productId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductItem"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postProcurementProductsByIdDetach: {
    parameters: {
      path: {
        /** productId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductDetach */
      204: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductDetach"];
        };
      };
    };
    /** detach */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductDetach"];
      };
    };
  };
  getProcurementProductsByParentIdComponents: {
    parameters: {
      path: {
        /** productId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductComponent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductComponent"][];
        };
      };
    };
  };
  postProcurementProductsByParentIdComponents: {
    parameters: {
      path: {
        /** productId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductComponent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductComponent"][];
        };
      };
    };
    /** productComponent */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductComponent"];
      };
    };
  };
  getProcurementProductsByParentIdComponentsById: {
    parameters: {
      path: {
        /** componentId */
        id: number;
        /** productId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductComponent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductComponent"][];
        };
      };
    };
  };
  putProcurementProductsByParentIdComponentsById: {
    parameters: {
      path: {
        /** componentId */
        id: number;
        /** productId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductComponent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductComponent"][];
        };
      };
    };
    /** productComponent */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductComponent"];
      };
    };
  };
  deleteProcurementProductsByParentIdComponentsById: {
    parameters: {
      path: {
        /** componentId */
        id: number;
        /** productId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementProductsByParentIdComponentsById: {
    parameters: {
      path: {
        /** componentId */
        id: number;
        /** productId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductComponent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductComponent"][];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementProductsByParentIdComponentsCount: {
    parameters: {
      path: {
        /** productId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementProductsByParentIdPickingShippingDetails: {
    parameters: {
      path: {
        /** productId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductPickingShippingDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductPickingShippingDetail"][];
        };
      };
    };
  };
  postProcurementProductsByParentIdPickingShippingDetails: {
    parameters: {
      path: {
        /** productId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductPickingShippingDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductPickingShippingDetail"][];
        };
      };
    };
    /** productPickingShippingDetails */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductPickingShippingDetail"];
      };
    };
  };
  getProcurementProductsByParentIdPickingShippingDetailsById: {
    parameters: {
      path: {
        /** pickingShippingDetailId */
        id: number;
        /** productId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductPickingShippingDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductPickingShippingDetail"][];
        };
      };
    };
  };
  putProcurementProductsByParentIdPickingShippingDetailsById: {
    parameters: {
      path: {
        /** pickingShippingDetailId */
        id: number;
        /** productId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductPickingShippingDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductPickingShippingDetail"][];
        };
      };
    };
    /** productPickingShippingDetails */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductPickingShippingDetail"];
      };
    };
  };
  deleteProcurementProductsByParentIdPickingShippingDetailsById: {
    parameters: {
      path: {
        /** pickingShippingDetailId */
        id: number;
        /** productId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementProductsByParentIdPickingShippingDetailsById: {
    parameters: {
      path: {
        /** pickingShippingDetailId */
        id: number;
        /** productId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductPickingShippingDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductPickingShippingDetail"][];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementProductsByParentIdPickingShippingDetailsCount: {
    parameters: {
      path: {
        /** productId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementProductsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementPurchaseorders: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PurchaseOrder */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrder"][];
        };
      };
    };
  };
  postProcurementPurchaseorders: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrder */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrder"];
        };
      };
    };
    /** purchaseOrder */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrder"];
      };
    };
  };
  getProcurementPurchaseordersById: {
    parameters: {
      path: {
        /** purchaseorderId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrder */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrder"];
        };
      };
    };
  };
  putProcurementPurchaseordersById: {
    parameters: {
      path: {
        /** purchaseorderId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrder */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrder"];
        };
      };
    };
    /** purchaseOrder */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrder"];
      };
    };
  };
  deleteProcurementPurchaseordersById: {
    parameters: {
      path: {
        /** purchaseorderId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementPurchaseordersById: {
    parameters: {
      path: {
        /** purchaseorderId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrder */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrder"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementPurchaseordersByParentIdLineitems: {
    parameters: {
      path: {
        /** purchaseorderId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PurchaseOrderLineItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderLineItem"][];
        };
      };
    };
  };
  postProcurementPurchaseordersByParentIdLineitems: {
    parameters: {
      path: {
        /** purchaseorderId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderLineItem */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderLineItem"];
        };
      };
    };
    /** purchaseOrderLineItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderLineItem"];
      };
    };
  };
  getProcurementPurchaseordersByParentIdLineitemsById: {
    parameters: {
      path: {
        /** lineitemId */
        id: number;
        /** purchaseorderId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderLineItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderLineItem"];
        };
      };
    };
  };
  putProcurementPurchaseordersByParentIdLineitemsById: {
    parameters: {
      path: {
        /** lineitemId */
        id: number;
        /** purchaseorderId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderLineItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderLineItem"];
        };
      };
    };
    /** purchaseOrderLineItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderLineItem"];
      };
    };
  };
  deleteProcurementPurchaseordersByParentIdLineitemsById: {
    parameters: {
      path: {
        /** lineitemId */
        id: number;
        /** purchaseorderId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementPurchaseordersByParentIdLineitemsById: {
    parameters: {
      path: {
        /** lineitemId */
        id: number;
        /** purchaseorderId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderLineItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderLineItem"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  putProcurementPurchaseordersByParentIdLineitemsBulk: {
    parameters: {
      path: {
        /** purchaseorderId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BulkResult */
      207: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BulkResult"];
        };
      };
    };
    /** List of PurchaseOrderLineItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderLineItem"][];
      };
    };
  };
  postProcurementPurchaseordersByParentIdLineitemsBulk: {
    parameters: {
      path: {
        /** purchaseorderId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BulkResult */
      207: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BulkResult"];
        };
      };
    };
    /** List of PurchaseOrderLineItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderLineItem"][];
      };
    };
  };
  deleteProcurementPurchaseordersByParentIdLineitemsBulk: {
    parameters: {
      path: {
        /** purchaseorderId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BulkResult */
      207: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BulkResult"];
        };
      };
    };
    /** purchaseOrderLineItems */
    requestBody: {
      content: {
        "application/json": components["schemas"]["IdCollection"];
      };
    };
  };
  getProcurementPurchaseordersByParentIdLineitemsCount: {
    parameters: {
      path: {
        /** purchaseorderId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementPurchaseordersCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementPurchaseorderstatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PurchaseOrderStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatus"][];
        };
      };
    };
  };
  postProcurementPurchaseorderstatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatus"];
        };
      };
    };
    /** poStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderStatus"];
      };
    };
  };
  getProcurementPurchaseorderstatusesById: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatus"];
        };
      };
    };
  };
  putProcurementPurchaseorderstatusesById: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatus"];
        };
      };
    };
    /** purchaseOrderStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderStatus"];
      };
    };
  };
  deleteProcurementPurchaseorderstatusesById: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementPurchaseorderstatusesById: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementPurchaseorderstatusesByIdUsages: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementPurchaseorderstatusesByIdUsagesList: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementPurchaseorderstatusesByParentIdEmailtemplates: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PurchaseOrderStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusEmailTemplate"][];
        };
      };
    };
  };
  postProcurementPurchaseorderstatusesByParentIdEmailtemplates: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatusEmailTemplate */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusEmailTemplate"];
        };
      };
    };
    /** purchaseOrderStatusEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderStatusEmailTemplate"];
      };
    };
  };
  getProcurementPurchaseorderstatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** purchaseorderstatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusEmailTemplate"];
        };
      };
    };
  };
  putProcurementPurchaseorderstatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** purchaseorderstatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusEmailTemplate"];
        };
      };
    };
    /** purchaseOrderStatusEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderStatusEmailTemplate"];
      };
    };
  };
  deleteProcurementPurchaseorderstatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** purchaseorderstatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementPurchaseorderstatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** purchaseorderstatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusEmailTemplate"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementPurchaseorderstatusesByParentIdEmailtemplatesCount: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementPurchaseorderstatusesByParentIdNotifications: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PurchaseOrderStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusNotification"][];
        };
      };
    };
  };
  postProcurementPurchaseorderstatusesByParentIdNotifications: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatusNotification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusNotification"];
        };
      };
    };
    /** purchaseOrderStatusNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderStatusNotification"];
      };
    };
  };
  getProcurementPurchaseorderstatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** purchaseorderstatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusNotification"];
        };
      };
    };
  };
  putProcurementPurchaseorderstatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** purchaseorderstatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusNotification"];
        };
      };
    };
    /** purchaseOrderStatusNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseOrderStatusNotification"];
      };
    };
  };
  deleteProcurementPurchaseorderstatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** purchaseorderstatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementPurchaseorderstatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** purchaseorderstatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchaseOrderStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchaseOrderStatusNotification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementPurchaseorderstatusesByParentIdNotificationsCount: {
    parameters: {
      path: {
        /** purchaseorderstatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementPurchaseorderstatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postProcurementPurchasingDemands: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PurchasingDemand */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PurchasingDemand"];
        };
      };
    };
    /** purchasingDemand */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchasingDemand"];
      };
    };
  };
  getProcurementRmaActions: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of RmaAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaAction"][];
        };
      };
    };
  };
  postProcurementRmaActions: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaAction */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaAction"];
        };
      };
    };
    /** rmaAction */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaAction"];
      };
    };
  };
  getProcurementRmaActionsById: {
    parameters: {
      path: {
        /** rmaActionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaAction"];
        };
      };
    };
  };
  putProcurementRmaActionsById: {
    parameters: {
      path: {
        /** rmaActionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaAction"];
        };
      };
    };
    /** rmaAction */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaAction"];
      };
    };
  };
  deleteProcurementRmaActionsById: {
    parameters: {
      path: {
        /** rmaActionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementRmaActionsById: {
    parameters: {
      path: {
        /** rmaActionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaAction"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementRmaActionsByIdInfo: {
    parameters: {
      path: {
        /** RmaActionInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaActionInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaActionInfo"];
        };
      };
    };
  };
  getProcurementRmaActionsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementRmaActionsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of rmaActionInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaActionInfo"][];
        };
      };
    };
  };
  getProcurementRmaActionsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementRMADispositions: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of RmaDisposition */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaDisposition"][];
        };
      };
    };
  };
  postProcurementRMADispositions: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaDisposition */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaDisposition"];
        };
      };
    };
    /** rmaDisposition */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaDisposition"];
      };
    };
  };
  getProcurementRMADispositionsById: {
    parameters: {
      path: {
        /** RMADispositionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaDisposition */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaDisposition"];
        };
      };
    };
  };
  putProcurementRMADispositionsById: {
    parameters: {
      path: {
        /** RMADispositionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaDisposition */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaDisposition"];
        };
      };
    };
    /** rmaDisposition */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaDisposition"];
      };
    };
  };
  deleteProcurementRMADispositionsById: {
    parameters: {
      path: {
        /** RMADispositionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementRMADispositionsById: {
    parameters: {
      path: {
        /** RMADispositionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaDisposition */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaDisposition"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementRMADispositionsByIdInfo: {
    parameters: {
      path: {
        /** RmaDispositionInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaDispositionInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaDispositionInfo"];
        };
      };
    };
  };
  getProcurementRMADispositionsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementRMADispositionsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of rmaDispositionInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaDispositionInfo"][];
        };
      };
    };
  };
  getProcurementRMADispositionsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementRmaStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of RmaStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatus"][];
        };
      };
    };
  };
  postProcurementRmaStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatus"];
        };
      };
    };
    /** rmaStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaStatus"];
      };
    };
  };
  getProcurementRmaStatusesById: {
    parameters: {
      path: {
        /** rmaStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatus"];
        };
      };
    };
  };
  putProcurementRmaStatusesById: {
    parameters: {
      path: {
        /** rmaStatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatus"];
        };
      };
    };
    /** rmaStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaStatus"];
      };
    };
  };
  deleteProcurementRmaStatusesById: {
    parameters: {
      path: {
        /** rmaStatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementRmaStatusesById: {
    parameters: {
      path: {
        /** rmaStatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementRmaStatusesByIdInfo: {
    parameters: {
      path: {
        /** RmaStatusInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatusInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusInfo"];
        };
      };
    };
  };
  getProcurementRmaStatusesByIdUsages: {
    parameters: {
      path: {
        /** rmaStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementRmaStatusesByIdUsagesList: {
    parameters: {
      path: {
        /** rmaStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  postProcurementRmaStatusesByParentIdEmailtemplates: {
    parameters: {
      path: {
        /** rmaStatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatusEmailTemplate */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusEmailTemplate"];
        };
      };
    };
    /** rmaStatusEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaStatusEmailTemplate"];
      };
    };
  };
  getProcurementRmaStatusesByParentIdEmailTemplates: {
    parameters: {
      path: {
        /** rmaStatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of RmaStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusEmailTemplate"][];
        };
      };
    };
  };
  getProcurementRmaStatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** rmaStatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusEmailTemplate"];
        };
      };
    };
  };
  putProcurementRmaStatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** rmaStatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusEmailTemplate"];
        };
      };
    };
    /** rmaStatusEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaStatusEmailTemplate"];
      };
    };
  };
  deleteProcurementRmaStatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** rmaStatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementRmaStatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** rmaStatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusEmailTemplate"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementRmaStatusesByParentIdEmailtemplatesCount: {
    parameters: {
      path: {
        /** rmaStatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementRmaStatusesByParentIdNotifications: {
    parameters: {
      path: {
        /** rmaStatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of RmaStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusNotification"][];
        };
      };
    };
  };
  postProcurementRmaStatusesByParentIdNotifications: {
    parameters: {
      path: {
        /** rmaStatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatusNotification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusNotification"];
        };
      };
    };
    /** rmaStatusNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaStatusNotification"];
      };
    };
  };
  getProcurementRmaStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** rmaStatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusNotification"];
        };
      };
    };
  };
  putProcurementRmaStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** rmaStatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusNotification"];
        };
      };
    };
    /** rmaStatusNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaStatusNotification"];
      };
    };
  };
  deleteProcurementRmaStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** rmaStatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementRmaStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** rmaStatusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusNotification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementRmaStatusesByParentIdNotificationsCount: {
    parameters: {
      path: {
        /** rmaStatusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementRmaStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementRmaStatusesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of rmaStatusInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaStatusInfo"][];
        };
      };
    };
  };
  getProcurementRmaStatusesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementRmaTags: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of RmaTag */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaTag"][];
        };
      };
    };
  };
  postProcurementRmaTags: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaTag */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaTag"];
        };
      };
    };
    /** rmaTag */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaTag"];
      };
    };
  };
  getProcurementRmaTagsById: {
    parameters: {
      path: {
        /** rmaTagId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaTag */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaTag"];
        };
      };
    };
  };
  putProcurementRmaTagsById: {
    parameters: {
      path: {
        /** rmaTagId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaTag */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaTag"];
        };
      };
    };
    /** rmaTag */
    requestBody: {
      content: {
        "application/json": components["schemas"]["RmaTag"];
      };
    };
  };
  deleteProcurementRmaTagsById: {
    parameters: {
      path: {
        /** rmaTagId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementRmaTagsById: {
    parameters: {
      path: {
        /** rmaTagId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** RmaTag */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaTag"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementRmaTagsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementRmaTagsDefault: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
      path: {
        /** productId */
        productId: number;
        /** billingLogId */
        billingLogId: number;
        /** ticketId */
        ticketId: number;
        /** projectId */
        projectId: number;
        /** salesOrderId */
        salesOrderId: number;
        /** companyId */
        companyId: number;
      };
    };
    responses: {
      /** RmaTag */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["RmaTag"];
        };
      };
    };
  };
  getProcurementSettings: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProcurementSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProcurementSetting"][];
        };
      };
    };
  };
  getProcurementSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProcurementSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProcurementSetting"];
        };
      };
    };
  };
  putProcurementSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProcurementSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProcurementSetting"];
        };
      };
    };
    /** procurementSetting */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProcurementSetting"];
      };
    };
  };
  patchProcurementSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProcurementSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProcurementSetting"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementSettingsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementShipmentmethods: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ShipmentMethod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ShipmentMethod"][];
        };
      };
    };
  };
  postProcurementShipmentmethods: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ShipmentMethod */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ShipmentMethod"];
        };
      };
    };
    /** shipmentMethod */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ShipmentMethod"];
      };
    };
  };
  getProcurementShipmentmethodsById: {
    parameters: {
      path: {
        /** shipmentmethodId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ShipmentMethod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ShipmentMethod"];
        };
      };
    };
  };
  putProcurementShipmentmethodsById: {
    parameters: {
      path: {
        /** shipmentmethodId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ShipmentMethod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ShipmentMethod"];
        };
      };
    };
    /** shipmentMethod */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ShipmentMethod"];
      };
    };
  };
  deleteProcurementShipmentmethodsById: {
    parameters: {
      path: {
        /** shipmentmethodId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementShipmentmethodsById: {
    parameters: {
      path: {
        /** shipmentmethodId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ShipmentMethod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ShipmentMethod"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementShipmentmethodsByIdInfo: {
    parameters: {
      path: {
        /** ShipmentMethodInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ShipmentMethodInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ShipmentMethodInfo"];
        };
      };
    };
  };
  getProcurementShipmentmethodsByIdUsages: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementShipmentmethodsByIdUsagesList: {
    parameters: {
      path: {
        /** shipmentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementShipmentmethodsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementShipmentmethodsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of shipmentMethodInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ShipmentMethodInfo"][];
        };
      };
    };
  };
  getProcurementShipmentmethodsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementSubcategories: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SubCategory"][];
        };
      };
    };
  };
  postProcurementSubcategories: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SubCategory */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SubCategory"];
        };
      };
    };
    /** subCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SubCategory"];
      };
    };
  };
  getProcurementSubcategoriesById: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SubCategory"];
        };
      };
    };
  };
  putProcurementSubcategoriesById: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SubCategory"];
        };
      };
    };
    /** subCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SubCategory"];
      };
    };
  };
  deleteProcurementSubcategoriesById: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementSubcategoriesById: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SubCategory"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementSubcategoriesByIdInfo: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SubCategoryInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SubCategoryInfo"];
        };
      };
    };
  };
  getProcurementSubcategoriesByIdUsages: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementSubcategoriesByIdUsagesList: {
    parameters: {
      path: {
        /** subcategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementSubcategoriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementSubcategoriesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SubCategoryInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SubCategoryInfo"][];
        };
      };
    };
  };
  getProcurementSubcategoriesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductType"][];
        };
      };
    };
  };
  postProcurementTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductType"];
        };
      };
    };
    /** productTypes */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductType"];
      };
    };
  };
  getProcurementTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductType"];
        };
      };
    };
  };
  putProcurementTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductType"];
        };
      };
    };
    /** productTypes */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductType"];
      };
    };
  };
  deleteProcurementTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementTypesByIdInfo: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProductTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductTypeInfo"];
        };
      };
    };
  };
  getProcurementTypesByIdUsages: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementTypesByIdUsagesList: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProcurementTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductTypeInfo"][];
        };
      };
    };
  };
  getProcurementTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementUnitOfMeasures: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of UnitOfMeasure */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnitOfMeasure"][];
        };
      };
    };
  };
  postProcurementUnitOfMeasures: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnitOfMeasure */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnitOfMeasure"];
        };
      };
    };
    /** unitOfMeasure */
    requestBody: {
      content: {
        "application/json": components["schemas"]["UnitOfMeasure"];
      };
    };
  };
  getProcurementUnitOfMeasuresById: {
    parameters: {
      path: {
        /** unitOfMeasureId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnitOfMeasure */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnitOfMeasure"];
        };
      };
    };
  };
  putProcurementUnitOfMeasuresById: {
    parameters: {
      path: {
        /** unitOfMeasureId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnitOfMeasure */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnitOfMeasure"];
        };
      };
    };
    /** unitOfMeasure */
    requestBody: {
      content: {
        "application/json": components["schemas"]["UnitOfMeasure"];
      };
    };
  };
  deleteProcurementUnitOfMeasuresById: {
    parameters: {
      path: {
        /** unitOfMeasureId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementUnitOfMeasuresById: {
    parameters: {
      path: {
        /** unitOfMeasureId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UnitOfMeasure */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UnitOfMeasure"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementUnitOfMeasuresByParentIdConversions: {
    parameters: {
      path: {
        /** unitOfMeasureId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Conversion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Conversion"][];
        };
      };
    };
  };
  postProcurementUnitOfMeasuresByParentIdConversions: {
    parameters: {
      path: {
        /** unitOfMeasureId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Conversion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Conversion"];
        };
      };
    };
    /** conversion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Conversion"];
      };
    };
  };
  getProcurementUnitOfMeasuresByParentIdConversionsById: {
    parameters: {
      path: {
        /** conversionId */
        id: number;
        /** unitOfMeasureId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Conversion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Conversion"];
        };
      };
    };
  };
  putProcurementUnitOfMeasuresByParentIdConversionsById: {
    parameters: {
      path: {
        /** conversionId */
        id: number;
        /** unitOfMeasureId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Conversion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Conversion"];
        };
      };
    };
    /** conversion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Conversion"];
      };
    };
  };
  deleteProcurementUnitOfMeasuresByParentIdConversionsById: {
    parameters: {
      path: {
        /** conversionId */
        id: number;
        /** unitOfMeasureId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementUnitOfMeasuresByParentIdConversionsById: {
    parameters: {
      path: {
        /** conversionId */
        id: number;
        /** unitOfMeasureId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Conversion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Conversion"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementUnitOfMeasuresByParentIdConversionsCount: {
    parameters: {
      path: {
        /** unitOfMeasureId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementUnitOfMeasuresCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementWarehouseBins: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WarehouseBin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WarehouseBin"][];
        };
      };
    };
  };
  postProcurementWarehouseBins: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WarehouseBin */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WarehouseBin"];
        };
      };
    };
    /** warehouseBin */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WarehouseBin"];
      };
    };
  };
  getProcurementWarehouseBinsById: {
    parameters: {
      path: {
        /** warehouseBinId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WarehouseBin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WarehouseBin"];
        };
      };
    };
  };
  putProcurementWarehouseBinsById: {
    parameters: {
      path: {
        /** warehouseBinId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WarehouseBin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WarehouseBin"];
        };
      };
    };
    /** warehouseBin */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WarehouseBin"];
      };
    };
  };
  deleteProcurementWarehouseBinsById: {
    parameters: {
      path: {
        /** warehouseBinId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementWarehouseBinsById: {
    parameters: {
      path: {
        /** warehouseBinId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WarehouseBin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WarehouseBin"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementWarehouseBinsByIdInfo: {
    parameters: {
      path: {
        /** WarehouseBinInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WarehouseBinInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WarehouseBinInfo"];
        };
      };
    };
  };
  getProcurementWarehouseBinsByParentIdInventoryOnHand: {
    parameters: {
      path: {
        /** warehouseBinId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of InventoryOnHand */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InventoryOnHand"][];
        };
      };
    };
  };
  getProcurementWarehouseBinsByParentIdInventoryOnHandById: {
    parameters: {
      path: {
        /** inventoryOnHandId */
        id: number;
        /** warehouseBinId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InventoryOnHand */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InventoryOnHand"];
        };
      };
    };
  };
  getProcurementWarehouseBinsByParentIdInventoryOnHandCount: {
    parameters: {
      path: {
        /** warehouseBinId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementWarehouseBinsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementWarehouseBinsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of warehouseBinInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WarehouseBinInfo"][];
        };
      };
    };
  };
  getProcurementWarehouseBinsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementWarehouses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Warehouse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Warehouse"][];
        };
      };
    };
  };
  postProcurementWarehouses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Warehouse */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Warehouse"];
        };
      };
    };
    /** warehouse */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Warehouse"];
      };
    };
  };
  getProcurementWarehousesById: {
    parameters: {
      path: {
        /** warehousId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Warehouse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Warehouse"];
        };
      };
    };
  };
  putProcurementWarehousesById: {
    parameters: {
      path: {
        /** warehousId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Warehouse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Warehouse"];
        };
      };
    };
    /** warehouse */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Warehouse"];
      };
    };
  };
  deleteProcurementWarehousesById: {
    parameters: {
      path: {
        /** warehousId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProcurementWarehousesById: {
    parameters: {
      path: {
        /** warehousId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Warehouse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Warehouse"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProcurementWarehousesByIdInfo: {
    parameters: {
      path: {
        /** WarehouseInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WarehouseInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WarehouseInfo"];
        };
      };
    };
  };
  getProcurementWarehousesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProcurementWarehousesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of warehouseInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WarehouseInfo"][];
        };
      };
    };
  };
  getProcurementWarehousesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectBoardsByGrandparentIdTeamsByParentIdMembers: {
    parameters: {
      path: {
        /** teamId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectBoardTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeamMember"][];
        };
      };
    };
  };
  postProjectBoardsByGrandparentIdTeamsByParentIdMembers: {
    parameters: {
      path: {
        /** teamId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectBoardTeamMember */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeamMember"];
        };
      };
    };
    /** teamMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectBoardTeamMember"];
      };
    };
  };
  getProjectBoardsByGrandparentIdTeamsByParentIdMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
        /** teamId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectBoardTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeamMember"];
        };
      };
    };
  };
  putProjectBoardsByGrandparentIdTeamsByParentIdMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
        /** teamId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectBoardTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeamMember"];
        };
      };
    };
    /** teamMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectBoardTeamMember"];
      };
    };
  };
  deleteProjectBoardsByGrandparentIdTeamsByParentIdMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
        /** teamId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectBoardsByGrandparentIdTeamsByParentIdMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
        /** teamId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectBoardTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeamMember"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectBoardsByParentIdTeams: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectBoardTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeam"][];
        };
      };
    };
  };
  postProjectBoardsByParentIdTeams: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectBoardTeam */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeam"];
        };
      };
    };
    /** team */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectBoardTeam"];
      };
    };
  };
  getProjectBoardsByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectBoardTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeam"];
        };
      };
    };
  };
  putProjectBoardsByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectBoardTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeam"];
        };
      };
    };
    /** team */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectBoardTeam"];
      };
    };
  };
  deleteProjectBoardsByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectBoardsByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectBoardTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeam"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectBoardsByParentIdTeamsByIdInfo: {
    parameters: {
      path: {
        /** ProjectBoardTeamInfoId */
        id: number;
        /** parentId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectBoardTeamInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeamInfo"];
        };
      };
    };
  };
  getProjectBoardsByParentIdTeamsByIdInfoCount: {
    parameters: {
      path: {
        /** ProjectBoardTeamInfoId */
        id: number;
        /** parentId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectBoardsByParentIdTeamsCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectBoardsByParentIdTeamsInfo: {
    parameters: {
      path: {
        /** parentId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of projectBoardTeamInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectBoardTeamInfo"][];
        };
      };
    };
  };
  getProjectPhaseStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PhaseStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PhaseStatus"][];
        };
      };
    };
  };
  postProjectPhaseStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PhaseStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PhaseStatus"];
        };
      };
    };
    /** phaseStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PhaseStatus"];
      };
    };
  };
  getProjectPhaseStatusesById: {
    parameters: {
      path: {
        /** phaseStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PhaseStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PhaseStatus"];
        };
      };
    };
  };
  putProjectPhaseStatusesById: {
    parameters: {
      path: {
        /** phaseStatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PhaseStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PhaseStatus"];
        };
      };
    };
    /** phaseStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PhaseStatus"];
      };
    };
  };
  deleteProjectPhaseStatusesById: {
    parameters: {
      path: {
        /** phaseStatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectPhaseStatusesById: {
    parameters: {
      path: {
        /** phaseStatusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PhaseStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PhaseStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectPhaseStatusesByIdUsages: {
    parameters: {
      path: {
        /** phaseStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProjectPhaseStatusesByIdUsagesList: {
    parameters: {
      path: {
        /** phaseStatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProjectPhaseStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectProjects: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ApiProject */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Project"][];
        };
      };
    };
  };
  postProjectProjects: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiProject */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Project"];
        };
      };
    };
    /** project */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
      };
    };
  };
  getProjectProjectsById: {
    parameters: {
      path: {
        /** projectId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiProject */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Project"];
        };
      };
    };
  };
  putProjectProjectsById: {
    parameters: {
      path: {
        /** projectId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiProject */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Project"];
        };
      };
    };
    /** project */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
      };
    };
  };
  deleteProjectProjectsById: {
    parameters: {
      path: {
        /** projectId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectProjectsById: {
    parameters: {
      path: {
        /** projectId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiProject */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Project"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectProjectsByParentIdContacts: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectContact"][];
        };
      };
    };
  };
  postProjectProjectsByParentIdContacts: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectContact */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectContact"];
        };
      };
    };
    /** contact */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectContact"];
      };
    };
  };
  getProjectProjectsByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectContact"];
        };
      };
    };
  };
  deleteProjectProjectsByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getProjectProjectsByParentIdNotes: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectNote"][];
        };
      };
    };
  };
  postProjectProjectsByParentIdNotes: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectNote */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectNote"];
        };
      };
    };
    /** note */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectNote"];
      };
    };
  };
  getProjectProjectsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectNote"];
        };
      };
    };
  };
  putProjectProjectsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectNote"];
        };
      };
    };
    /** note */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectNote"];
      };
    };
  };
  deleteProjectProjectsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectProjectsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectNote"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectProjectsByParentIdNotesCount: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectProjectsByParentIdPhases: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectPhase */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectPhase"][];
        };
      };
    };
  };
  postProjectProjectsByParentIdPhases: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectPhase */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectPhase"];
        };
      };
    };
    /** projectPhase */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectPhase"];
      };
    };
  };
  getProjectProjectsByParentIdPhasesById: {
    parameters: {
      path: {
        /** phasId */
        id: number;
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectPhase */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectPhase"];
        };
      };
    };
  };
  putProjectProjectsByParentIdPhasesById: {
    parameters: {
      path: {
        /** phasId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectPhase */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectPhase"];
        };
      };
    };
    /** projectPhase */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectPhase"];
      };
    };
  };
  deleteProjectProjectsByParentIdPhasesById: {
    parameters: {
      path: {
        /** phasId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectProjectsByParentIdPhasesById: {
    parameters: {
      path: {
        /** phasId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectPhase */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectPhase"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectProjectsByParentIdPhasesCount: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectProjectsByParentIdTeamMembers: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTeamMember"][];
        };
      };
    };
  };
  postProjectProjectsByParentIdTeamMembers: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectTeamMember */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTeamMember"];
        };
      };
    };
    /** teamMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectTeamMember"];
      };
    };
  };
  getProjectProjectsByParentIdTeamMembersById: {
    parameters: {
      path: {
        /** teamMemberId */
        id: number;
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTeamMember"];
        };
      };
    };
  };
  putProjectProjectsByParentIdTeamMembersById: {
    parameters: {
      path: {
        /** teamMemberId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTeamMember"];
        };
      };
    };
    /** teamMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectTeamMember"];
      };
    };
  };
  deleteProjectProjectsByParentIdTeamMembersById: {
    parameters: {
      path: {
        /** teamMemberId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectProjectsByParentIdTeamMembersById: {
    parameters: {
      path: {
        /** teamMemberId */
        id: number;
        /** projectId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTeamMember"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectProjectsByParentIdTeamMembersCount: {
    parameters: {
      path: {
        /** projectId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectProjectsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectProjectTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectType"][];
        };
      };
    };
  };
  postProjectProjectTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectType"];
        };
      };
    };
    /** projectType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectType"];
      };
    };
  };
  getProjectProjectTypesById: {
    parameters: {
      path: {
        /** projectTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectType"];
        };
      };
    };
  };
  putProjectProjectTypesById: {
    parameters: {
      path: {
        /** projectTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectType"];
        };
      };
    };
    /** projectType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectType"];
      };
    };
  };
  deleteProjectProjectTypesById: {
    parameters: {
      path: {
        /** projectTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectProjectTypesById: {
    parameters: {
      path: {
        /** projectTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectProjectTypesByIdInfo: {
    parameters: {
      path: {
        /** ProjectTypeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTypeInfo"];
        };
      };
    };
  };
  getProjectProjectTypesByIdUsages: {
    parameters: {
      path: {
        /** projectTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProjectProjectTypesByIdUsagesList: {
    parameters: {
      path: {
        /** projectTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getProjectProjectTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectProjectTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of projectTypeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTypeInfo"][];
        };
      };
    };
  };
  getProjectProjectTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectSecurityRoles: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectSecurityRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectSecurityRole"][];
        };
      };
    };
  };
  postProjectSecurityRoles: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectSecurityRole */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectSecurityRole"];
        };
      };
    };
    /** projectSecurityRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectSecurityRole"];
      };
    };
  };
  getProjectSecurityRolesById: {
    parameters: {
      path: {
        /** securityRoleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectSecurityRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectSecurityRole"];
        };
      };
    };
  };
  putProjectSecurityRolesById: {
    parameters: {
      path: {
        /** securityRoleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectSecurityRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectSecurityRole"];
        };
      };
    };
    /** projectSecurityRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectSecurityRole"];
      };
    };
  };
  deleteProjectSecurityRolesById: {
    parameters: {
      path: {
        /** securityRoleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectSecurityRolesById: {
    parameters: {
      path: {
        /** securityRoleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectSecurityRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectSecurityRole"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectSecurityRolesByParentIdSettings: {
    parameters: {
      path: {
        /** securityRoleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectSecurityRoleSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectSecurityRoleSetting"][];
        };
      };
    };
  };
  getProjectSecurityRolesByParentIdSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
        /** securityRoleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectSecurityRoleSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectSecurityRoleSetting"];
        };
      };
    };
  };
  putProjectSecurityRolesByParentIdSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
        /** securityRoleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectSecurityRoleSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectSecurityRoleSetting"];
        };
      };
    };
    /** projectSecurityRoleSetting */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectSecurityRoleSetting"];
      };
    };
  };
  patchProjectSecurityRolesByParentIdSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
        /** securityRoleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectSecurityRoleSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectSecurityRoleSetting"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectSecurityRolesByParentIdSettingsCount: {
    parameters: {
      path: {
        /** securityRoleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectSecurityRolesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectStatus"][];
        };
      };
    };
  };
  postProjectStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectStatus"];
        };
      };
    };
    /** projectStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectStatus"];
      };
    };
  };
  getProjectStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectStatus"];
        };
      };
    };
  };
  putProjectStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectStatus"];
        };
      };
    };
    /** projectStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectStatus"];
      };
    };
  };
  deleteProjectStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectStatusesByIdInfo: {
    parameters: {
      path: {
        /** ProjectStatusInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectStatusInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectStatusInfo"];
        };
      };
    };
  };
  getProjectStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectStatusesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of projectStatusInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectStatusInfo"][];
        };
      };
    };
  };
  getProjectStatusesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectStatusIndicators: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of StatusIndicator */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StatusIndicator"][];
        };
      };
    };
  };
  getProjectStatusIndicatorsById: {
    parameters: {
      path: {
        /** statusIndicatorId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** StatusIndicator */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StatusIndicator"];
        };
      };
    };
  };
  getProjectStatusIndicatorsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postProjectTicketNoteByIdMarkAs: {
    parameters: {
      path: {
        /** ticketNoteId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Responses cannot be located for this operation. */
      default: unknown;
    };
    /** item */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectTicketNote"];
      };
    };
  };
  getProjectTickets: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectTicket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTicket"][];
        };
      };
    };
  };
  postProjectTickets: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectTicket */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTicket"];
        };
      };
    };
    /** ticket */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectTicket"];
      };
    };
  };
  getProjectTicketsById: {
    parameters: {
      path: {
        /** ticketId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectTicket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTicket"];
        };
      };
    };
  };
  putProjectTicketsById: {
    parameters: {
      path: {
        /** ticketId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectTicket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTicket"];
        };
      };
    };
    /** ticket */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectTicket"];
      };
    };
  };
  deleteProjectTicketsById: {
    parameters: {
      path: {
        /** ticketId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectTicketsById: {
    parameters: {
      path: {
        /** ticketId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ProjectTicket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTicket"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectTicketsByParentIdActivities: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ActivityReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityReference"][];
        };
      };
    };
  };
  getProjectTicketsByParentIdActivitiesCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectTicketsByParentIdAllNotes: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectTicketNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTicketNote"][];
        };
      };
    };
  };
  getProjectTicketsByParentIdConfigurations: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConfigurationReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationReference"][];
        };
      };
    };
  };
  postProjectTicketsByParentIdConfigurations: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationReference */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationReference"];
        };
      };
    };
    /** configuration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationReference"];
      };
    };
  };
  getProjectTicketsByParentIdConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationReference"];
        };
      };
    };
  };
  deleteProjectTicketsByParentIdConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getProjectTicketsByParentIdConfigurationsCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postProjectTicketsByParentIdConvert: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** item */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConvertItem"];
      };
    };
  };
  getProjectTicketsByParentIdDocuments: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of DocumentReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentReference"][];
        };
      };
    };
  };
  getProjectTicketsByParentIdDocumentsCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectTicketsByParentIdNotes: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TicketNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketNote"][];
        };
      };
    };
  };
  postProjectTicketsByParentIdNotes: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketNote */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketNote"];
        };
      };
    };
    /** ticketNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketNote"];
      };
    };
  };
  getProjectTicketsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketNote"];
        };
      };
    };
  };
  putProjectTicketsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketNote"];
        };
      };
    };
    /** ticketNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketNote"];
      };
    };
  };
  deleteProjectTicketsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectTicketsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketNote"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectTicketsByParentIdNotesCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectTicketsByParentIdProducts: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductReference"][];
        };
      };
    };
  };
  getProjectTicketsByParentIdProductsCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectTicketsByParentIdScheduleentries: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleEntryReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleEntryReference"][];
        };
      };
    };
  };
  getProjectTicketsByParentIdScheduleentriesCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectTicketsByParentIdTasks: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TicketTask */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketTask"][];
        };
      };
    };
  };
  postProjectTicketsByParentIdTasks: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketTask */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketTask"];
        };
      };
    };
    /** ticketTask */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketTask"];
      };
    };
  };
  getProjectTicketsByParentIdTasksById: {
    parameters: {
      path: {
        /** taskId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketTask */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketTask"];
        };
      };
    };
  };
  putProjectTicketsByParentIdTasksById: {
    parameters: {
      path: {
        /** taskId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketTask */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketTask"];
        };
      };
    };
    /** ticketTask */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketTask"];
      };
    };
  };
  deleteProjectTicketsByParentIdTasksById: {
    parameters: {
      path: {
        /** taskId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchProjectTicketsByParentIdTasksById: {
    parameters: {
      path: {
        /** taskId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketTask */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketTask"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getProjectTicketsByParentIdTasksCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectTicketsByParentIdTimeentries: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeEntryReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntryReference"][];
        };
      };
    };
  };
  getProjectTicketsByParentIdTimeentriesCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getProjectTicketsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postProjectTicketsSearch: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProjectTicket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProjectTicket"][];
        };
      };
    };
    /** filterValues */
    requestBody: {
      content: {
        "application/json": components["schemas"]["FilterValues"];
      };
    };
  };
  getSalesActivities: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Activity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Activity"][];
        };
      };
    };
  };
  postSalesActivities: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Activity */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Activity"];
        };
      };
    };
    /** activity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Activity"];
      };
    };
  };
  getSalesActivitiesById: {
    parameters: {
      path: {
        /** activityId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Activity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Activity"];
        };
      };
    };
  };
  putSalesActivitiesById: {
    parameters: {
      path: {
        /** activityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Activity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Activity"];
        };
      };
    };
    /** activity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Activity"];
      };
    };
  };
  deleteSalesActivitiesById: {
    parameters: {
      path: {
        /** activityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesActivitiesById: {
    parameters: {
      path: {
        /** activityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Activity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Activity"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesActivitiesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesActivitiesStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ActivityStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStatus"][];
        };
      };
    };
  };
  postSalesActivitiesStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStatus"];
        };
      };
    };
    /** activityStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActivityStatus"];
      };
    };
  };
  getSalesActivitiesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStatus"];
        };
      };
    };
  };
  putSalesActivitiesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStatus"];
        };
      };
    };
    /** activityStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActivityStatus"];
      };
    };
  };
  deleteSalesActivitiesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesActivitiesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesActivitiesStatusesByIdInfo: {
    parameters: {
      path: {
        /** ActivityStatusInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityStatusInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStatusInfo"];
        };
      };
    };
  };
  getSalesActivitiesStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesActivitiesStatusesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of activityStatusInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStatusInfo"][];
        };
      };
    };
  };
  getSalesActivitiesStatusesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesActivitiesTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ActivityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityType"][];
        };
      };
    };
  };
  postSalesActivitiesTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityType"];
        };
      };
    };
    /** activityType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActivityType"];
      };
    };
  };
  getSalesActivitiesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityType"];
        };
      };
    };
  };
  putSalesActivitiesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityType"];
        };
      };
    };
    /** activityType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActivityType"];
      };
    };
  };
  deleteSalesActivitiesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesActivitiesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesActivitiesTypesByIdUsages: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesActivitiesTypesByIdUsagesList: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesActivitiesTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesCommissions: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Commission */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Commission"][];
        };
      };
    };
  };
  postSalesCommissions: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Commission */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Commission"];
        };
      };
    };
    /** commission */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Commission"];
      };
    };
  };
  getSalesCommissionsById: {
    parameters: {
      path: {
        /** commissionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Commission */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Commission"];
        };
      };
    };
  };
  putSalesCommissionsById: {
    parameters: {
      path: {
        /** commissionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Commission */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Commission"];
        };
      };
    };
    /** commission */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Commission"];
      };
    };
  };
  deleteSalesCommissionsById: {
    parameters: {
      path: {
        /** commissionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesCommissionsById: {
    parameters: {
      path: {
        /** commissionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Commission */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Commission"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesCommissionsByIdUsages: {
    parameters: {
      path: {
        /** commissionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesCommissionsByIdUsagesList: {
    parameters: {
      path: {
        /** commissionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesCommissionsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunities: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConnectWise.Apis.v3_0.v2015_3.Sales.Opportunity.Opportunity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Opportunity"][];
        };
      };
    };
  };
  postSalesOpportunities: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Sales.Opportunity.Opportunity */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Opportunity"];
        };
      };
    };
    /** opportunity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Opportunity"];
      };
    };
  };
  getSalesOpportunitiesById: {
    parameters: {
      path: {
        /** opportunityId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Sales.Opportunity.Opportunity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Opportunity"];
        };
      };
    };
  };
  putSalesOpportunitiesById: {
    parameters: {
      path: {
        /** opportunityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Sales.Opportunity.Opportunity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Opportunity"];
        };
      };
    };
    /** opportunity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Opportunity"];
      };
    };
  };
  deleteSalesOpportunitiesById: {
    parameters: {
      path: {
        /** opportunityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOpportunitiesById: {
    parameters: {
      path: {
        /** opportunityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Sales.Opportunity.Opportunity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Opportunity"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSalesOpportunitiesByIdConvertToAgreement: {
    parameters: {
      path: {
        /** opportunityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiAgreement */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Agreement"];
        };
      };
    };
    /** conversion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityToAgreementConversion"];
      };
    };
  };
  postSalesOpportunitiesByIdConvertToProject: {
    parameters: {
      path: {
        /** opportunityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiProject */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Project"];
        };
      };
    };
    /** conversion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityToProjectConversion"];
      };
    };
  };
  postSalesOpportunitiesByIdConvertToSalesOrder: {
    parameters: {
      path: {
        /** opportunityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiSalesOrder */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Order"];
        };
      };
    };
    /** conversion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityToSalesOrderConversion"];
      };
    };
  };
  postSalesOpportunitiesByIdConvertToServiceTicket: {
    parameters: {
      path: {
        /** opportunityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiTicket */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Ticket"];
        };
      };
    };
    /** conversion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityToServiceTicketConversion"];
      };
    };
  };
  getSalesOpportunitiesByParentIdContacts: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OpportunityContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityContact"][];
        };
      };
    };
  };
  postSalesOpportunitiesByParentIdContacts: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityContact */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityContact"];
        };
      };
    };
    /** opportunityContact */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityContact"];
      };
    };
  };
  getSalesOpportunitiesByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityContact"];
        };
      };
    };
  };
  putSalesOpportunitiesByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityContact"];
        };
      };
    };
    /** opportunityContact */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityContact"];
      };
    };
  };
  deleteSalesOpportunitiesByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOpportunitiesByParentIdContactsById: {
    parameters: {
      path: {
        /** contactId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityContact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityContact"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOpportunitiesByParentIdContactsCount: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunitiesByParentIdForecast: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Forecast */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Forecast"][];
        };
      };
    };
  };
  postSalesOpportunitiesByParentIdForecast: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Forecast */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Forecast"];
        };
      };
    };
    /** forecast */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Forecast"];
      };
    };
  };
  putSalesOpportunitiesByParentIdForecast: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Forecast */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Forecast"];
        };
      };
    };
    /** forecast */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Forecast"];
      };
    };
  };
  deleteSalesOpportunitiesByParentIdForecast: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOpportunitiesByParentIdForecast: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Forecast */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Forecast"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOpportunitiesByParentIdForecastById: {
    parameters: {
      path: {
        /** forecastId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ForecastItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ForecastItem"];
        };
      };
    };
  };
  putSalesOpportunitiesByParentIdForecastById: {
    parameters: {
      path: {
        /** forecastId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ForecastItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ForecastItem"];
        };
      };
    };
    /** forecast */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ForecastItem"];
      };
    };
  };
  postSalesOpportunitiesByParentIdForecastById: {
    parameters: {
      path: {
        /** forecastId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ForecastItem */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ForecastItem"];
        };
      };
    };
    /** forecast */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ForecastItem"];
      };
    };
  };
  deleteSalesOpportunitiesByParentIdForecastById: {
    parameters: {
      path: {
        /** forecastId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOpportunitiesByParentIdForecastById: {
    parameters: {
      path: {
        /** forecastId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ForecastItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ForecastItem"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSalesOpportunitiesByParentIdForecastCopyById: {
    parameters: {
      path: {
        /** copyId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getSalesOpportunitiesByParentIdForecastCount: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunitiesByParentIdNotes: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OpportunityNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityNote"][];
        };
      };
    };
  };
  postSalesOpportunitiesByParentIdNotes: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityNote */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityNote"];
        };
      };
    };
    /** note */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityNote"];
      };
    };
  };
  getSalesOpportunitiesByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityNote"];
        };
      };
    };
  };
  putSalesOpportunitiesByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityNote"];
        };
      };
    };
    /** note */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityNote"];
      };
    };
  };
  deleteSalesOpportunitiesByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOpportunitiesByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityNote"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOpportunitiesByParentIdNotesCount: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OpportunityNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityNote"][];
        };
      };
    };
  };
  getSalesOpportunitiesByParentIdTeam: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Team */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Team"][];
        };
      };
    };
  };
  postSalesOpportunitiesByParentIdTeam: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Team */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Team"];
        };
      };
    };
    /** team */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Team"];
      };
    };
  };
  getSalesOpportunitiesByParentIdTeamById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Team */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Team"];
        };
      };
    };
  };
  putSalesOpportunitiesByParentIdTeamById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Team */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Team"];
        };
      };
    };
    /** team */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Team"];
      };
    };
  };
  deleteSalesOpportunitiesByParentIdTeamById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOpportunitiesByParentIdTeamById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** opportunityId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Team */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Team"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOpportunitiesByParentIdTeamCount: {
    parameters: {
      path: {
        /** opportunityId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunitiesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunitiesDefault: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.Sales.Opportunity.Opportunity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Opportunity"];
        };
      };
    };
  };
  getSalesOpportunitiesRatings: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OpportunityRating */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityRating"][];
        };
      };
    };
  };
  postSalesOpportunitiesRatings: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityRating */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityRating"];
        };
      };
    };
    /** opportunityRating */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityRating"];
      };
    };
  };
  getSalesOpportunitiesRatingsById: {
    parameters: {
      path: {
        /** ratingId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityRating */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityRating"];
        };
      };
    };
  };
  putSalesOpportunitiesRatingsById: {
    parameters: {
      path: {
        /** ratingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityRating */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityRating"];
        };
      };
    };
    /** opportunityRating */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityRating"];
      };
    };
  };
  deleteSalesOpportunitiesRatingsById: {
    parameters: {
      path: {
        /** ratingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOpportunitiesRatingsById: {
    parameters: {
      path: {
        /** ratingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityRating */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityRating"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOpportunitiesRatingsByIdInfo: {
    parameters: {
      path: {
        /** ratingId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityRatingInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityRatingInfo"];
        };
      };
    };
  };
  getSalesOpportunitiesRatingsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunitiesRatingsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OpportunityRatingInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityRatingInfo"][];
        };
      };
    };
  };
  getSalesOpportunitiesRatingsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunitiesStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OpportunityStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStatus"][];
        };
      };
    };
  };
  postSalesOpportunitiesStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStatus"];
        };
      };
    };
    /** status */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityStatus"];
      };
    };
  };
  getSalesOpportunitiesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStatus"];
        };
      };
    };
  };
  putSalesOpportunitiesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStatus"];
        };
      };
    };
    /** status */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityStatus"];
      };
    };
  };
  deleteSalesOpportunitiesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOpportunitiesStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOpportunitiesStatusesByIdInfo: {
    parameters: {
      path: {
        /** OpportunityStatusInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityStatusInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStatusInfo"];
        };
      };
    };
  };
  getSalesOpportunitiesStatusesByIdUsages: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesOpportunitiesStatusesByIdUsagesList: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesOpportunitiesStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunitiesStatusesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of opportunityStatusInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStatusInfo"][];
        };
      };
    };
  };
  getSalesOpportunitiesStatusesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunitiesTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OpportunityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityType"][];
        };
      };
    };
  };
  postSalesOpportunitiesTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityType"];
        };
      };
    };
    /** opportunityType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityType"];
      };
    };
  };
  getSalesOpportunitiesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityType"];
        };
      };
    };
  };
  putSalesOpportunitiesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityType"];
        };
      };
    };
    /** opportunityType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityType"];
      };
    };
  };
  deleteSalesOpportunitiesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOpportunitiesTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOpportunitiesTypesByIdInfo: {
    parameters: {
      path: {
        /** OpportunityTypeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OpportunityTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityTypeInfo"];
        };
      };
    };
  };
  getSalesOpportunitiesTypesByIdUsages: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesOpportunitiesTypesByIdUsagesList: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesOpportunitiesTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOpportunitiesTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of opportunityTypeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityTypeInfo"][];
        };
      };
    };
  };
  getSalesOpportunitiesTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOrders: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Order */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Order"][];
        };
      };
    };
  };
  postSalesOrders: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Order */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Order"];
        };
      };
    };
    /** order */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Order"];
      };
    };
  };
  getSalesOrdersById: {
    parameters: {
      path: {
        /** orderId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Order */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Order"];
        };
      };
    };
  };
  putSalesOrdersById: {
    parameters: {
      path: {
        /** orderId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Order */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Order"];
        };
      };
    };
    /** order */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Order"];
      };
    };
  };
  deleteSalesOrdersById: {
    parameters: {
      path: {
        /** orderId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOrdersById: {
    parameters: {
      path: {
        /** orderId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Order */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Order"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSalesOrdersByIdConvertToServiceTicket: {
    parameters: {
      path: {
        /** orderId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Ticket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Ticket"];
        };
      };
    };
  };
  getSalesOrdersCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOrdersStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OrderStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatus"][];
        };
      };
    };
  };
  postSalesOrdersStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OrderStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatus"][];
        };
      };
    };
    /** status */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderStatus"];
      };
    };
  };
  getSalesOrdersStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatus"];
        };
      };
    };
  };
  putSalesOrdersStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatus"];
        };
      };
    };
    /** status */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderStatus"];
      };
    };
  };
  deleteSalesOrdersStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOrdersStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOrdersStatusesByIdInfo: {
    parameters: {
      path: {
        /** OrderStatusInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatusInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusInfo"];
        };
      };
    };
  };
  getSalesOrdersStatusesByIdUsages: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesOrdersStatusesByIdUsagesList: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesOrdersStatusesByParentIdEmailtemplates: {
    parameters: {
      path: {
        /** statusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OrderStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusEmailTemplate"][];
        };
      };
    };
  };
  postSalesOrdersStatusesByParentIdEmailtemplates: {
    parameters: {
      path: {
        /** statusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatusEmailTemplate */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusEmailTemplate"];
        };
      };
    };
    /** orderStatusEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderStatusEmailTemplate"];
      };
    };
  };
  getSalesOrdersStatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** statusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusEmailTemplate"];
        };
      };
    };
  };
  putSalesOrdersStatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** statusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusEmailTemplate"];
        };
      };
    };
    /** orderStatusEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderStatusEmailTemplate"];
      };
    };
  };
  deleteSalesOrdersStatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** statusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOrdersStatusesByParentIdEmailtemplatesById: {
    parameters: {
      path: {
        /** emailtemplateId */
        id: number;
        /** statusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatusEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusEmailTemplate"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOrdersStatusesByParentIdEmailtemplatesCount: {
    parameters: {
      path: {
        /** statusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOrdersStatusesByParentIdNotifications: {
    parameters: {
      path: {
        /** statusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OrderStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusNotification"][];
        };
      };
    };
  };
  postSalesOrdersStatusesByParentIdNotifications: {
    parameters: {
      path: {
        /** statusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatusNotification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusNotification"];
        };
      };
    };
    /** orderStatusNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderStatusNotification"];
      };
    };
  };
  getSalesOrdersStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** statusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusNotification"];
        };
      };
    };
  };
  putSalesOrdersStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** statusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusNotification"];
        };
      };
    };
    /** orderStatusNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OrderStatusNotification"];
      };
    };
  };
  deleteSalesOrdersStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** statusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesOrdersStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** statusId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OrderStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusNotification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesOrdersStatusesByParentIdNotificationsCount: {
    parameters: {
      path: {
        /** statusId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOrdersStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesOrdersStatusesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of orderStatusInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OrderStatusInfo"][];
        };
      };
    };
  };
  getSalesOrdersStatusesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesProbabilities: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SalesProbability */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesProbability"][];
        };
      };
    };
  };
  postSalesProbabilities: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesProbability */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesProbability"];
        };
      };
    };
    /** probability */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesProbability"];
      };
    };
  };
  getSalesProbabilitiesById: {
    parameters: {
      path: {
        /** probabilityId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesProbability */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesProbability"];
        };
      };
    };
  };
  putSalesProbabilitiesById: {
    parameters: {
      path: {
        /** probabilityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesProbability */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesProbability"];
        };
      };
    };
    /** probability */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesProbability"];
      };
    };
  };
  deleteSalesProbabilitiesById: {
    parameters: {
      path: {
        /** probabilityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesProbabilitiesById: {
    parameters: {
      path: {
        /** probabilityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesProbability */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesProbability"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesProbabilitiesByIdInfo: {
    parameters: {
      path: {
        /** SalesProbabilityInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesProbabilityInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesProbabilityInfo"];
        };
      };
    };
  };
  getSalesProbabilitiesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesProbabilitiesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of salesProbabilityInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesProbabilityInfo"][];
        };
      };
    };
  };
  getSalesProbabilitiesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesQuotas: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SalesQuota */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesQuota"][];
        };
      };
    };
  };
  postSalesQuotas: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesQuota */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesQuota"];
        };
      };
    };
    /** salesQuota */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesQuota"];
      };
    };
  };
  getSalesQuotasById: {
    parameters: {
      path: {
        /** quotaId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesQuota */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesQuota"];
        };
      };
    };
  };
  putSalesQuotasById: {
    parameters: {
      path: {
        /** quotaId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesQuota */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesQuota"];
        };
      };
    };
    /** salesQuota */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesQuota"];
      };
    };
  };
  deleteSalesQuotasById: {
    parameters: {
      path: {
        /** quotaId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesQuotasById: {
    parameters: {
      path: {
        /** quotaId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesQuota */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesQuota"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesQuotasCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesRoles: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Role */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Role"][];
        };
      };
    };
  };
  postSalesRoles: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Role */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Role"];
        };
      };
    };
    /** role */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Role"];
      };
    };
  };
  getSalesRolesById: {
    parameters: {
      path: {
        /** roleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Role */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Role"];
        };
      };
    };
  };
  putSalesRolesById: {
    parameters: {
      path: {
        /** roleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Role */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Role"];
        };
      };
    };
    /** role */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Role"];
      };
    };
  };
  deleteSalesRolesById: {
    parameters: {
      path: {
        /** roleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesRolesById: {
    parameters: {
      path: {
        /** roleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Role */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Role"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesRolesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesSalesTeams: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SalesTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeam"][];
        };
      };
    };
  };
  postSalesSalesTeams: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesTeam */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeam"];
        };
      };
    };
    /** salesTeam */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesTeam"];
      };
    };
  };
  getSalesSalesTeamsById: {
    parameters: {
      path: {
        /** salesTeamId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeam"];
        };
      };
    };
  };
  putSalesSalesTeamsById: {
    parameters: {
      path: {
        /** salesTeamId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeam"];
        };
      };
    };
    /** salesTeam */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesTeam"];
      };
    };
  };
  deleteSalesSalesTeamsById: {
    parameters: {
      path: {
        /** salesTeamId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesSalesTeamsById: {
    parameters: {
      path: {
        /** salesTeamId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeam"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesSalesTeamsByParentIdMembers: {
    parameters: {
      path: {
        /** salesTeamId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SalesTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeamMember"][];
        };
      };
    };
  };
  postSalesSalesTeamsByParentIdMembers: {
    parameters: {
      path: {
        /** salesTeamId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesTeamMember */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeamMember"];
        };
      };
    };
    /** salesTeamMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesTeamMember"];
      };
    };
  };
  getSalesSalesTeamsByParentIdMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
        /** salesTeamId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeamMember"];
        };
      };
    };
  };
  putSalesSalesTeamsByParentIdMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
        /** salesTeamId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeamMember"];
        };
      };
    };
    /** salesTeamMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesTeamMember"];
      };
    };
  };
  deleteSalesSalesTeamsByParentIdMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
        /** salesTeamId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesSalesTeamsByParentIdMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
        /** salesTeamId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SalesTeamMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SalesTeamMember"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesSalesTeamsByParentIdMembersCount: {
    parameters: {
      path: {
        /** salesTeamId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesSalesTeamsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesScheduleHolidaylistsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesServicePriorityInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesStages: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Stage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStage"][];
        };
      };
    };
  };
  postSalesStages: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Stage */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStage"];
        };
      };
    };
    /** stage */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityStage"];
      };
    };
  };
  getSalesStagesById: {
    parameters: {
      path: {
        /** stageId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Stage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStage"];
        };
      };
    };
  };
  putSalesStagesById: {
    parameters: {
      path: {
        /** stageId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Stage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStage"];
        };
      };
    };
    /** stage */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunityStage"];
      };
    };
  };
  deleteSalesStagesById: {
    parameters: {
      path: {
        /** stageId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSalesStagesById: {
    parameters: {
      path: {
        /** stageId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Stage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStage"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSalesStagesByIdInfo: {
    parameters: {
      path: {
        /** stageId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** StageInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStageInfo"];
        };
      };
    };
  };
  getSalesStagesByIdUsages: {
    parameters: {
      path: {
        /** stageId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesStagesByIdUsagesList: {
    parameters: {
      path: {
        /** stageId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSalesStagesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSalesStagesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of StageInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OpportunityStageInfo"][];
        };
      };
    };
  };
  getSalesStagesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getScheduleCalendars: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Calendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Calendar"][];
        };
      };
    };
  };
  postScheduleCalendars: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Calendar */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Calendar"];
        };
      };
    };
    /** calendar */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Calendar"];
      };
    };
  };
  getScheduleCalendarsById: {
    parameters: {
      path: {
        /** calendarId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Calendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Calendar"];
        };
      };
    };
  };
  putScheduleCalendarsById: {
    parameters: {
      path: {
        /** calendarId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Calendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Calendar"];
        };
      };
    };
    /** calendar */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Calendar"];
      };
    };
  };
  deleteScheduleCalendarsById: {
    parameters: {
      path: {
        /** calendarId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchScheduleCalendarsById: {
    parameters: {
      path: {
        /** calendarId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Calendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Calendar"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postScheduleCalendarsByIdCopy: {
    parameters: {
      path: {
        /** calendarId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Calendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Calendar"];
        };
      };
    };
  };
  getScheduleCalendarsByIdInfo: {
    parameters: {
      path: {
        /** CalendarInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CalendarInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CalendarInfo"];
        };
      };
    };
  };
  getScheduleCalendarsByIdUsages: {
    parameters: {
      path: {
        /** calendarId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getScheduleCalendarsByIdUsagesList: {
    parameters: {
      path: {
        /** calendarId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getScheduleCalendarsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Calendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Calendar"];
        };
      };
    };
  };
  getScheduleCalendarsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of calendarInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CalendarInfo"][];
        };
      };
    };
  };
  getScheduleCalendarsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CalendarInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CalendarInfo"];
        };
      };
    };
  };
  getScheduleColors: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleColor */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleColor"][];
        };
      };
    };
  };
  getScheduleColorsById: {
    parameters: {
      path: {
        /** colorId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleColor */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleColor"];
        };
      };
    };
  };
  putScheduleColorsById: {
    parameters: {
      path: {
        /** colorId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleColor */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleColor"];
        };
      };
    };
    /** scheduleColor */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleColor"];
      };
    };
  };
  patchScheduleColorsById: {
    parameters: {
      path: {
        /** colorId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleColor */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleColor"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postScheduleColorsByIdClear: {
    parameters: {
      path: {
        /** colorId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleColor */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleColor"];
        };
      };
    };
  };
  getScheduleColorsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postScheduleColorsReset: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleColor */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleColor"][];
        };
      };
    };
  };
  getScheduleDetails: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleEntryDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleEntryDetail"][];
        };
      };
    };
  };
  getScheduleDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleEntryDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleEntryDetail"];
        };
      };
    };
  };
  getScheduleDetailsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getScheduleEntries: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleEntry"][];
        };
      };
    };
  };
  postScheduleEntries: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleEntry */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleEntry"];
        };
      };
    };
    /** scheduleEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleEntry"];
      };
    };
  };
  getScheduleEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleEntry"];
        };
      };
    };
  };
  putScheduleEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleEntry"];
        };
      };
    };
    /** scheduleEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleEntry"];
      };
    };
  };
  deleteScheduleEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchScheduleEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleEntry"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getScheduleEntriesByParentIdDetails: {
    parameters: {
      path: {
        /** entryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleDetail"][];
        };
      };
    };
  };
  getScheduleEntriesByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** entryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleDetail"];
        };
      };
    };
  };
  getScheduleEntriesByParentIdDetailsCount: {
    parameters: {
      path: {
        /** entryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getScheduleEntriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getScheduleHolidayLists: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of HolidayList */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["HolidayList"][];
        };
      };
    };
  };
  postScheduleHolidayLists: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** HolidayList */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["HolidayList"];
        };
      };
    };
    /** holidayList */
    requestBody: {
      content: {
        "application/json": components["schemas"]["HolidayList"];
      };
    };
  };
  getScheduleHolidayListsById: {
    parameters: {
      path: {
        /** holidayListId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** HolidayList */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["HolidayList"];
        };
      };
    };
  };
  putScheduleHolidayListsById: {
    parameters: {
      path: {
        /** holidayListId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** HolidayList */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["HolidayList"];
        };
      };
    };
    /** holidayList */
    requestBody: {
      content: {
        "application/json": components["schemas"]["HolidayList"];
      };
    };
  };
  deleteScheduleHolidayListsById: {
    parameters: {
      path: {
        /** holidayListId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchScheduleHolidayListsById: {
    parameters: {
      path: {
        /** holidayListId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** HolidayList */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["HolidayList"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getScheduleHolidaylistsByIdInfo: {
    parameters: {
      path: {
        /** HolidayListInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** HolidayListInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["HolidayListInfo"];
        };
      };
    };
  };
  getScheduleHolidayListsByIdUsages: {
    parameters: {
      path: {
        /** holidayListId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getScheduleHolidayListsByIdUsagesList: {
    parameters: {
      path: {
        /** holidayListId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getScheduleHolidayListsByParentIdHolidays: {
    parameters: {
      path: {
        /** holidayListId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Holiday */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Holiday"][];
        };
      };
    };
  };
  postScheduleHolidayListsByParentIdHolidays: {
    parameters: {
      path: {
        /** holidayListId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Holiday */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Holiday"];
        };
      };
    };
    /** holiday */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Holiday"];
      };
    };
  };
  getScheduleHolidayListsByParentIdHolidaysById: {
    parameters: {
      path: {
        /** holidayId */
        id: number;
        /** holidayListId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Holiday */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Holiday"];
        };
      };
    };
  };
  putScheduleHolidayListsByParentIdHolidaysById: {
    parameters: {
      path: {
        /** holidayId */
        id: number;
        /** holidayListId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Holiday */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Holiday"];
        };
      };
    };
    /** holiday */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Holiday"];
      };
    };
  };
  deleteScheduleHolidayListsByParentIdHolidaysById: {
    parameters: {
      path: {
        /** holidayId */
        id: number;
        /** holidayListId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchScheduleHolidayListsByParentIdHolidaysById: {
    parameters: {
      path: {
        /** holidayId */
        id: number;
        /** holidayListId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Holiday */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Holiday"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getScheduleHolidayListsByParentIdHolidaysCount: {
    parameters: {
      path: {
        /** holidayListId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postScheduleHolidayListsCopy: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** HolidayList */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["HolidayList"];
        };
      };
    };
    /** copy */
    requestBody: {
      content: {
        "application/json": components["schemas"]["HolidayList"];
      };
    };
  };
  getScheduleHolidayListsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getScheduleHolidaylistsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of holidayListInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["HolidayListInfo"][];
        };
      };
    };
  };
  getSchedulePortalcalendars: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalCalendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalCalendar"][];
        };
      };
    };
  };
  getSchedulePortalcalendarsById: {
    parameters: {
      path: {
        /** portalcalendarId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalCalendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalCalendar"];
        };
      };
    };
  };
  putSchedulePortalcalendarsById: {
    parameters: {
      path: {
        /** portalcalendarId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalCalendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalCalendar"];
        };
      };
    };
    /** portalCalendar */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalCalendar"];
      };
    };
  };
  patchSchedulePortalcalendarsById: {
    parameters: {
      path: {
        /** portalcalendarId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalCalendar */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalCalendar"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSchedulePortalcalendarsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getScheduleReminderTimes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleReminderTime */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleReminderTime"][];
        };
      };
    };
  };
  getScheduleReminderTimesById: {
    parameters: {
      path: {
        /** reminderTimeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleReminderTime */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleReminderTime"];
        };
      };
    };
  };
  putScheduleReminderTimesById: {
    parameters: {
      path: {
        /** reminderTimeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleReminderTime */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleReminderTime"];
        };
      };
    };
    /** reminderTime */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleReminderTime"];
      };
    };
  };
  patchScheduleReminderTimesById: {
    parameters: {
      path: {
        /** reminderTimeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleReminderTime */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleReminderTime"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getScheduleReminderTimesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getScheduleStatuses: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStatus"][];
        };
      };
    };
  };
  postScheduleStatuses: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStatus"];
        };
      };
    };
    /** scheduleStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleStatus"];
      };
    };
  };
  getScheduleStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStatus"];
        };
      };
    };
  };
  putScheduleStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStatus"];
        };
      };
    };
    /** scheduleStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleStatus"];
      };
    };
  };
  deleteScheduleStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchScheduleStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getScheduleStatusesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getScheduleTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleType"][];
        };
      };
    };
  };
  postScheduleTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleType"];
        };
      };
    };
    /** scheduleType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleType"];
      };
    };
  };
  getScheduleTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleType"];
        };
      };
    };
  };
  putScheduleTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleType"];
        };
      };
    };
    /** scheduleType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleType"];
      };
    };
  };
  deleteScheduleTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchScheduleTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getScheduleTypesByIdInfo: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleTypeInfo"];
        };
      };
    };
  };
  getScheduleTypesByIdUsages: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getScheduleTypesByIdUsagesList: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getScheduleTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getScheduleTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleTypeInfo"][];
        };
      };
    };
  };
  getScheduleTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoards: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Board */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Board"][];
        };
      };
    };
  };
  postServiceBoards: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Board */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Board"];
        };
      };
    };
    /** board */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Board"];
      };
    };
  };
  getServiceBoardsByGrandparentIdItemsByParentIdAssociations: {
    parameters: {
      path: {
        /** itemId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardItemAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardItemAssociation"][];
        };
      };
    };
  };
  getServiceBoardsByGrandparentIdItemsByParentIdAssociationsById: {
    parameters: {
      path: {
        /** associationId */
        id: number;
        /** itemId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardItemAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardItemAssociation"];
        };
      };
    };
  };
  putServiceBoardsByGrandparentIdItemsByParentIdAssociationsById: {
    parameters: {
      path: {
        /** associationId */
        id: number;
        /** itemId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardItemAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardItemAssociation"];
        };
      };
    };
    /** itemAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardItemAssociation"];
      };
    };
  };
  patchServiceBoardsByGrandparentIdItemsByParentIdAssociationsById: {
    parameters: {
      path: {
        /** associationId */
        id: number;
        /** itemId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardItemAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardItemAssociation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByGrandparentIdItemsByParentIdAssociationsCount: {
    parameters: {
      path: {
        /** itemId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByGrandparentIdStatusesByParentIdNotifications: {
    parameters: {
      path: {
        /** statusId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatusNotification"][];
        };
      };
    };
  };
  postServiceBoardsByGrandparentIdStatusesByParentIdNotifications: {
    parameters: {
      path: {
        /** statusId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardStatusNotification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatusNotification"];
        };
      };
    };
    /** boardStatusNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardStatusNotification"];
      };
    };
  };
  getServiceBoardsByGrandparentIdStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** statusId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatusNotification"];
        };
      };
    };
  };
  putServiceBoardsByGrandparentIdStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** statusId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatusNotification"];
        };
      };
    };
    /** boardStatusNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardStatusNotification"];
      };
    };
  };
  deleteServiceBoardsByGrandparentIdStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** statusId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsByGrandparentIdStatusesByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** statusId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardStatusNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatusNotification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByGrandparentIdStatusesByParentIdNotificationsCount: {
    parameters: {
      path: {
        /** statusId */
        parentId: number;
        /** boardId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsById: {
    parameters: {
      path: {
        /** boardId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Board */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Board"];
        };
      };
    };
  };
  putServiceBoardsById: {
    parameters: {
      path: {
        /** boardId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Board */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Board"];
        };
      };
    };
    /** board */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Board"];
      };
    };
  };
  deleteServiceBoardsById: {
    parameters: {
      path: {
        /** boardId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsById: {
    parameters: {
      path: {
        /** boardId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Board */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Board"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByIdUsages: {
    parameters: {
      path: {
        /** boardId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByIdUsagesList: {
    parameters: {
      path: {
        /** boardId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdAutoAssignResources: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardAutoAssignResource */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoAssignResource"][];
        };
      };
    };
  };
  postServiceBoardsByParentIdAutoAssignResources: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardAutoAssignResource */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoAssignResource"];
        };
      };
    };
    /** boardAutoAssignResource */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardAutoAssignResource"];
      };
    };
  };
  getServiceBoardsByParentIdAutoAssignResourcesById: {
    parameters: {
      path: {
        /** autoAssignResourceId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardAutoAssignResource */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoAssignResource"];
        };
      };
    };
  };
  putServiceBoardsByParentIdAutoAssignResourcesById: {
    parameters: {
      path: {
        /** autoAssignResourceId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardAutoAssignResource */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoAssignResource"];
        };
      };
    };
    /** boardAutoAssignResource */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardAutoAssignResource"];
      };
    };
  };
  deleteServiceBoardsByParentIdAutoAssignResourcesById: {
    parameters: {
      path: {
        /** autoAssignResourceId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsByParentIdAutoAssignResourcesById: {
    parameters: {
      path: {
        /** autoAssignResourceId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardAutoAssignResource */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoAssignResource"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByParentIdAutoAssignResourcesCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdAutoTemplates: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardAutoTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoTemplate"][];
        };
      };
    };
  };
  postServiceBoardsByParentIdAutoTemplates: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardAutoTemplate */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoTemplate"];
        };
      };
    };
    /** boardAutoTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardAutoTemplate"];
      };
    };
  };
  getServiceBoardsByParentIdAutoTemplatesById: {
    parameters: {
      path: {
        /** autoTemplateId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardAutoTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoTemplate"];
        };
      };
    };
  };
  putServiceBoardsByParentIdAutoTemplatesById: {
    parameters: {
      path: {
        /** autoTemplateId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardAutoTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoTemplate"];
        };
      };
    };
    /** boardAutoTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardAutoTemplate"];
      };
    };
  };
  deleteServiceBoardsByParentIdAutoTemplatesById: {
    parameters: {
      path: {
        /** autoTemplateId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsByParentIdAutoTemplatesById: {
    parameters: {
      path: {
        /** autoTemplateId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardAutoTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardAutoTemplate"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByParentIdAutoTemplatesCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdExcludedMembers: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardExcludedMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardExcludedMember"][];
        };
      };
    };
  };
  postServiceBoardsByParentIdExcludedMembers: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardExcludedMember */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardExcludedMember"];
        };
      };
    };
    /** boardExcludedMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardExcludedMember"];
      };
    };
  };
  getServiceBoardsByParentIdExcludedMembersById: {
    parameters: {
      path: {
        /** excludedMemberId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardExcludedMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardExcludedMember"];
        };
      };
    };
  };
  deleteServiceBoardsByParentIdExcludedMembersById: {
    parameters: {
      path: {
        /** excludedMemberId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getServiceBoardsByParentIdExcludedMembersCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdItems: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardItem"][];
        };
      };
    };
  };
  postServiceBoardsByParentIdItems: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardItem */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardItem"];
        };
      };
    };
    /** boardItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardItem"];
      };
    };
  };
  getServiceBoardsByParentIdItemsById: {
    parameters: {
      path: {
        /** itemId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardItem"];
        };
      };
    };
  };
  putServiceBoardsByParentIdItemsById: {
    parameters: {
      path: {
        /** itemId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardItem"];
        };
      };
    };
    /** boardItem */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardItem"];
      };
    };
  };
  deleteServiceBoardsByParentIdItemsById: {
    parameters: {
      path: {
        /** itemId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsByParentIdItemsById: {
    parameters: {
      path: {
        /** itemId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardItem */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardItem"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByParentIdItemsByIdUsages: {
    parameters: {
      path: {
        /** itemId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdItemsByIdUsagesList: {
    parameters: {
      path: {
        /** itemId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdItemsCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdNotifications: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardNotification"][];
        };
      };
    };
  };
  postServiceBoardsByParentIdNotifications: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardNotification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardNotification"];
        };
      };
    };
    /** boardNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardNotification"];
      };
    };
  };
  getServiceBoardsByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardNotification"];
        };
      };
    };
  };
  putServiceBoardsByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardNotification"];
        };
      };
    };
    /** boardNotification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardNotification"];
      };
    };
  };
  deleteServiceBoardsByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsByParentIdNotificationsById: {
    parameters: {
      path: {
        /** notificationId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardNotification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardNotification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByParentIdNotificationsCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdStatuses: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatus"][];
        };
      };
    };
  };
  postServiceBoardsByParentIdStatuses: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardStatus */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatus"];
        };
      };
    };
    /** boardStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardStatus"];
      };
    };
  };
  getServiceBoardsByParentIdStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatus"];
        };
      };
    };
  };
  putServiceBoardsByParentIdStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatus"];
        };
      };
    };
    /** boardStatus */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardStatus"];
      };
    };
  };
  deleteServiceBoardsByParentIdStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsByParentIdStatusesById: {
    parameters: {
      path: {
        /** statusId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardStatus */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatus"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByParentIdStatusesByIdInfo: {
    parameters: {
      path: {
        /** ServiceBoardId */
        parentId: number;
        /** StatusId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardStatusInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatusInfo"];
        };
      };
    };
  };
  getServiceBoardsByParentIdStatusesByIdUsages: {
    parameters: {
      path: {
        /** statusId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdStatusesByIdUsagesList: {
    parameters: {
      path: {
        /** statusId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdStatusesCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdStatusesInfo: {
    parameters: {
      path: {
        /** ServiceBoardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardStatusInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardStatusInfo"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdStatusesInfoCount: {
    parameters: {
      path: {
        /** ServiceBoardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdSubtypes: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardSubType"][];
        };
      };
    };
  };
  postServiceBoardsByParentIdSubtypes: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardSubType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardSubType"];
        };
      };
    };
    /** boardSubType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardSubType"];
      };
    };
  };
  getServiceBoardsByParentIdSubtypesById: {
    parameters: {
      path: {
        /** subtypeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardSubType"];
        };
      };
    };
  };
  putServiceBoardsByParentIdSubtypesById: {
    parameters: {
      path: {
        /** subtypeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardSubType"];
        };
      };
    };
    /** boardSubType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardSubType"];
      };
    };
  };
  deleteServiceBoardsByParentIdSubtypesById: {
    parameters: {
      path: {
        /** subtypeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsByParentIdSubtypesById: {
    parameters: {
      path: {
        /** subtypeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardSubType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardSubType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByParentIdSubtypesByIdInfo: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
        /** BoardSubTypeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardSubTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardSubTypeInfo"];
        };
      };
    };
  };
  getServiceBoardsByParentIdSubtypesByIdUsages: {
    parameters: {
      path: {
        /** subtypeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdSubtypesByIdUsagesList: {
    parameters: {
      path: {
        /** subtypeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdSubtypesCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdSubtypesInfo: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of boardSubTypeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardSubTypeInfo"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdSubtypesInfoCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdTeams: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTeam"][];
        };
      };
    };
  };
  postServiceBoardsByParentIdTeams: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardTeam */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTeam"];
        };
      };
    };
    /** _boardTeam */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardTeam"];
      };
    };
  };
  getServiceBoardsByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTeam"];
        };
      };
    };
  };
  putServiceBoardsByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTeam"];
        };
      };
    };
    /** _boardTeam */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardTeam"];
      };
    };
  };
  deleteServiceBoardsByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsByParentIdTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTeam"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByParentIdTeamsByIdInfo: {
    parameters: {
      path: {
        /** BoardTeamInfoId */
        id: number;
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardTeamInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTeamInfo"];
        };
      };
    };
  };
  getServiceBoardsByParentIdTeamsByIdUsagesList: {
    parameters: {
      path: {
        /** teamId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdTeamsCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdTeamsInfo: {
    parameters: {
      path: {
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of boardTeamInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTeamInfo"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdTeamsInfoCount: {
    parameters: {
      path: {
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdTypes: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardType"][];
        };
      };
    };
  };
  postServiceBoardsByParentIdTypes: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardType"];
        };
      };
    };
    /** boardType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardType"];
      };
    };
  };
  getServiceBoardsByParentIdTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardType"];
        };
      };
    };
  };
  putServiceBoardsByParentIdTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardType"];
        };
      };
    };
    /** boardType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardType"];
      };
    };
  };
  deleteServiceBoardsByParentIdTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceBoardsByParentIdTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceBoardsByParentIdTypesByIdUsages: {
    parameters: {
      path: {
        /** typeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdTypesByIdUsagesList: {
    parameters: {
      path: {
        /** typeId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdTypesCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceBoardsByParentIdTypeSubTypeItemAssociations: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardTypeSubTypeItemAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTypeSubTypeItemAssociation"][];
        };
      };
    };
  };
  getServiceBoardsByParentIdTypeSubTypeItemAssociationsById: {
    parameters: {
      path: {
        /** typeSubTypeItemAssociationId */
        id: number;
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardTypeSubTypeItemAssociation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTypeSubTypeItemAssociation"];
        };
      };
    };
  };
  getServiceBoardsByParentIdTypeSubTypeItemAssociationsCount: {
    parameters: {
      path: {
        /** boardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postServiceBoardsCopy: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Board */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Board"];
        };
      };
    };
    /** copy */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BoardCopy"];
      };
    };
  };
  getServiceBoardsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceCodes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Code */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Code"][];
        };
      };
    };
  };
  postServiceCodes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Code */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Code"];
        };
      };
    };
    /** code */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Code"];
      };
    };
  };
  getServiceCodesById: {
    parameters: {
      path: {
        /** codeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Code */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Code"];
        };
      };
    };
  };
  putServiceCodesById: {
    parameters: {
      path: {
        /** codeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Code */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Code"];
        };
      };
    };
    /** code */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Code"];
      };
    };
  };
  deleteServiceCodesById: {
    parameters: {
      path: {
        /** codeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceCodesById: {
    parameters: {
      path: {
        /** codeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Code */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Code"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceCodesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceEmailTemplates: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceEmailTemplate"][];
        };
      };
    };
  };
  postServiceEmailTemplates: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceEmailTemplate */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceEmailTemplate"];
        };
      };
    };
    /** serviceEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceEmailTemplate"];
      };
    };
  };
  getServiceEmailTemplatesById: {
    parameters: {
      path: {
        /** emailTemplateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceEmailTemplate"];
        };
      };
    };
  };
  putServiceEmailTemplatesById: {
    parameters: {
      path: {
        /** emailTemplateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceEmailTemplate"];
        };
      };
    };
    /** serviceEmailTemplate */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceEmailTemplate"];
      };
    };
  };
  deleteServiceEmailTemplatesById: {
    parameters: {
      path: {
        /** emailTemplateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceEmailTemplatesById: {
    parameters: {
      path: {
        /** emailTemplateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceEmailTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceEmailTemplate"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceEmailTemplatesByIdUsages: {
    parameters: {
      path: {
        /** emailTemplateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceEmailTemplatesByIdUsagesList: {
    parameters: {
      path: {
        /** emailTemplateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceEmailTemplatesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceImpacts: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Impact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Impact"][];
        };
      };
    };
  };
  getServiceImpactsById: {
    parameters: {
      path: {
        /** impactId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Impact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Impact"];
        };
      };
    };
  };
  putServiceImpactsById: {
    parameters: {
      path: {
        /** impactId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Impact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Impact"];
        };
      };
    };
    /** impact */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Impact"];
      };
    };
  };
  patchServiceImpactsById: {
    parameters: {
      path: {
        /** impactId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Impact */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Impact"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceImpactsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceInfoBoards: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardInfo"][];
        };
      };
    };
  };
  getServiceInfoBoardsById: {
    parameters: {
      path: {
        /** boardId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardInfo"];
        };
      };
    };
  };
  getServiceInfoBoardsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceInfoBoardtypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of BoardTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTypeInfo"][];
        };
      };
    };
  };
  getServiceInfoBoardtypesById: {
    parameters: {
      path: {
        /** boardtypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BoardTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BoardTypeInfo"];
        };
      };
    };
  };
  getServiceInfoBoardtypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceKnowledgeBaseArticles: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of KnowledgeBaseArticle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseArticle"][];
        };
      };
    };
  };
  postServiceKnowledgeBaseArticles: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseArticle */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseArticle"];
        };
      };
    };
    /** knowledgeBaseArticle */
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeBaseArticle"];
      };
    };
  };
  getServiceKnowledgeBaseArticlesById: {
    parameters: {
      path: {
        /** knowledgeBaseArticleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseArticle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseArticle"];
        };
      };
    };
  };
  putServiceKnowledgeBaseArticlesById: {
    parameters: {
      path: {
        /** knowledgeBaseArticleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseArticle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseArticle"];
        };
      };
    };
    /** knowledgeBaseArticle */
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeBaseArticle"];
      };
    };
  };
  deleteServiceKnowledgeBaseArticlesById: {
    parameters: {
      path: {
        /** knowledgeBaseArticleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceKnowledgeBaseArticlesById: {
    parameters: {
      path: {
        /** knowledgeBaseArticleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseArticle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseArticle"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceKnowledgeBaseArticlesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceKnowledgeBaseCategories: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of KnowledgeBaseCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseCategory"][];
        };
      };
    };
  };
  postServiceKnowledgeBaseCategories: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseCategory */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseCategory"];
        };
      };
    };
    /** knowledgeBaseCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeBaseCategory"];
      };
    };
  };
  getServiceKnowledgeBaseCategoriesById: {
    parameters: {
      path: {
        /** knowledgeBaseCategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseCategory"];
        };
      };
    };
  };
  putServiceKnowledgeBaseCategoriesById: {
    parameters: {
      path: {
        /** knowledgeBaseCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseCategory"];
        };
      };
    };
    /** knowledgeBaseCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeBaseCategory"];
      };
    };
  };
  deleteServiceKnowledgeBaseCategoriesById: {
    parameters: {
      path: {
        /** knowledgeBaseCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceKnowledgeBaseCategoriesById: {
    parameters: {
      path: {
        /** knowledgeBaseCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseCategory"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceKnowledgeBaseCategoriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceKnowledgebasesettings: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseSettings */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSettings"];
        };
      };
    };
  };
  postServiceKnowledgebasesettings: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseSettings */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSettings"];
        };
      };
    };
    /** knowledgeBaseSettings */
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeBaseSettings"];
      };
    };
  };
  getServiceKnowledgebasesettingsById: {
    parameters: {
      path: {
        /** knowledgebasesettingId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseSettings */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSettings"];
        };
      };
    };
  };
  putServiceKnowledgebasesettingsById: {
    parameters: {
      path: {
        /** knowledgebasesettingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseSettings */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSettings"];
        };
      };
    };
    /** knowledgeBaseSettings */
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeBaseSettings"];
      };
    };
  };
  patchServiceKnowledgebasesettingsById: {
    parameters: {
      path: {
        /** knowledgebasesettingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseSettings */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSettings"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceKnowledgeBaseSubCategories: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of KnowledgeBaseSubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSubCategory"][];
        };
      };
    };
  };
  postServiceKnowledgeBaseSubCategories: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseSubCategory */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSubCategory"];
        };
      };
    };
    /** knowledgeBaseSubCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeBaseSubCategory"];
      };
    };
  };
  getServiceKnowledgeBaseSubCategoriesById: {
    parameters: {
      path: {
        /** knowledgeBaseSubCategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseSubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSubCategory"];
        };
      };
    };
  };
  putServiceKnowledgeBaseSubCategoriesById: {
    parameters: {
      path: {
        /** knowledgeBaseSubCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseSubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSubCategory"];
        };
      };
    };
    /** knowledgeBaseSubCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeBaseSubCategory"];
      };
    };
  };
  deleteServiceKnowledgeBaseSubCategoriesById: {
    parameters: {
      path: {
        /** knowledgeBaseSubCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceKnowledgeBaseSubCategoriesById: {
    parameters: {
      path: {
        /** knowledgeBaseSubCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KnowledgeBaseSubCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KnowledgeBaseSubCategory"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceKnowledgeBaseSubCategoriesByIdUsages: {
    parameters: {
      path: {
        /** knowledgeBaseSubCategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceKnowledgeBaseSubCategoriesByIdUsagesList: {
    parameters: {
      path: {
        /** knowledgeBaseSubCategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceKnowledgeBaseSubCategoriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceLocations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceLocation"][];
        };
      };
    };
  };
  postServiceLocations: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceLocation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceLocation"];
        };
      };
    };
    /** location */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceLocation"];
      };
    };
  };
  getServiceLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceLocation"];
        };
      };
    };
  };
  putServiceLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceLocation"];
        };
      };
    };
    /** location */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceLocation"];
      };
    };
  };
  deleteServiceLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceLocation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceLocationsByIdInfo: {
    parameters: {
      path: {
        /** ServiceLocationInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceLocationInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceLocationInfo"];
        };
      };
    };
  };
  getServiceLocationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceLocationsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of serviceLocationInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceLocationInfo"][];
        };
      };
    };
  };
  getServiceLocationsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServicePriorities: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Priority */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Priority"][];
        };
      };
    };
  };
  postServicePriorities: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Priority */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Priority"];
        };
      };
    };
    /** priority */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Priority"];
      };
    };
  };
  getServicePrioritiesById: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Priority */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Priority"];
        };
      };
    };
  };
  putServicePrioritiesById: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Priority */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Priority"];
        };
      };
    };
    /** priority */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Priority"];
      };
    };
  };
  deleteServicePrioritiesById: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServicePrioritiesById: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Priority */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Priority"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServicePrioritiesByIdImage: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
        /** useDefaultFlag */
        useDefaultFlag: boolean;
        /** lastModified */
        lastModified: string;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContentType = application/octet-stream */
      200: unknown;
    };
  };
  getServicePrioritiesByIdUsages: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServicePrioritiesByIdUsagesList: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServicePrioritiesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServicePriorityByIdInfo: {
    parameters: {
      path: {
        /** PriorityInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PriorityInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PriorityInfo"];
        };
      };
    };
  };
  getServicePriorityInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of priorityInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PriorityInfo"][];
        };
      };
    };
  };
  getServiceSchedulingMembersByIdInfo: {
    parameters: {
      path: {
        /** SchedulingMemberInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SchedulingMemberInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SchedulingMemberInfo"];
        };
      };
    };
  };
  getServiceSchedulingMembersInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of schedulingMemberInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SchedulingMemberInfo"][];
        };
      };
    };
  };
  getServiceSchedulingMembersInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceServiceSignoff: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceSignoff */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSignoff"][];
        };
      };
    };
  };
  postServiceServiceSignoff: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSignoff */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSignoff"];
        };
      };
    };
    /** serviceSignoff */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceSignoff"];
      };
    };
  };
  getServiceServiceSignoffById: {
    parameters: {
      path: {
        /** serviceSignoffId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSignoff */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSignoff"];
        };
      };
    };
  };
  putServiceServiceSignoffById: {
    parameters: {
      path: {
        /** serviceSignoffId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSignoff */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSignoff"];
        };
      };
    };
    /** serviceSignoff */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceSignoff"];
      };
    };
  };
  deleteServiceServiceSignoffById: {
    parameters: {
      path: {
        /** serviceSignoffId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceServiceSignoffById: {
    parameters: {
      path: {
        /** serviceSignoffId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSignoff */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSignoff"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceServiceSignoffByIdInfo: {
    parameters: {
      path: {
        /** ServiceSignoffInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSignoffInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSignoffInfo"];
        };
      };
    };
  };
  getServiceServiceSignoffByIdUsages: {
    parameters: {
      path: {
        /** serviceSignoffId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceServiceSignoffByIdUsagesList: {
    parameters: {
      path: {
        /** serviceSignoffId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceServiceSignoffCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceServiceSignoffInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of serviceSignoffInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSignoffInfo"][];
        };
      };
    };
  };
  getServiceServiceSignoffInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSeverities: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Severity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Severity"][];
        };
      };
    };
  };
  getServiceSeveritiesById: {
    parameters: {
      path: {
        /** severityId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Severity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Severity"];
        };
      };
    };
  };
  putServiceSeveritiesById: {
    parameters: {
      path: {
        /** severityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Severity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Severity"];
        };
      };
    };
    /** severity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Severity"];
      };
    };
  };
  patchServiceSeveritiesById: {
    parameters: {
      path: {
        /** severityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Severity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Severity"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceSeveritiesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSlainfoByIdInfo: {
    parameters: {
      path: {
        /** SLAInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SLAInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLAInfo"];
        };
      };
    };
  };
  getServiceSlainfoInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of sLAInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLAInfo"][];
        };
      };
    };
  };
  getServiceSLAs: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SLA */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLA"][];
        };
      };
    };
  };
  postServiceSLAs: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SLA */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLA"];
        };
      };
    };
    /** sLA */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SLA"];
      };
    };
  };
  getServiceSLAsById: {
    parameters: {
      path: {
        /** SLAId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SLA */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLA"];
        };
      };
    };
  };
  putServiceSLAsById: {
    parameters: {
      path: {
        /** SLAId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SLA */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLA"];
        };
      };
    };
    /** sLA */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SLA"];
      };
    };
  };
  deleteServiceSLAsById: {
    parameters: {
      path: {
        /** SLAId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceSLAsById: {
    parameters: {
      path: {
        /** SLAId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SLA */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLA"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceSLAsByIdUsages: {
    parameters: {
      path: {
        /** SLAId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceSLAsByIdUsagesList: {
    parameters: {
      path: {
        /** SLAId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceSLAsByParentIdPriorities: {
    parameters: {
      path: {
        /** SLAId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SLAPriority */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLAPriority"][];
        };
      };
    };
  };
  postServiceSLAsByParentIdPriorities: {
    parameters: {
      path: {
        /** SLAId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SLAPriority */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLAPriority"];
        };
      };
    };
    /** sLAPriority */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SLAPriority"];
      };
    };
  };
  getServiceSLAsByParentIdPrioritiesById: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
        /** SLAId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SLAPriority */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLAPriority"];
        };
      };
    };
  };
  putServiceSLAsByParentIdPrioritiesById: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
        /** SLAId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SLAPriority */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLAPriority"];
        };
      };
    };
    /** sLAPriority */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SLAPriority"];
      };
    };
  };
  deleteServiceSLAsByParentIdPrioritiesById: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
        /** SLAId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceSLAsByParentIdPrioritiesById: {
    parameters: {
      path: {
        /** priorityId */
        id: number;
        /** SLAId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SLAPriority */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SLAPriority"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceSLAsByParentIdPrioritiesCount: {
    parameters: {
      path: {
        /** SLAId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSLAsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSLAsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSources: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Source */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Source"][];
        };
      };
    };
  };
  postServiceSources: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Source */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Source"];
        };
      };
    };
    /** source */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Source"];
      };
    };
  };
  getServiceSourcesById: {
    parameters: {
      path: {
        /** sourceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Source */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Source"];
        };
      };
    };
  };
  putServiceSourcesById: {
    parameters: {
      path: {
        /** sourceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Source */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Source"];
        };
      };
    };
    /** source */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Source"];
      };
    };
  };
  deleteServiceSourcesById: {
    parameters: {
      path: {
        /** sourceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceSourcesById: {
    parameters: {
      path: {
        /** sourceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Source */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Source"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceSourcesByIdInfo: {
    parameters: {
      path: {
        /** SourceInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SourceInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SourceInfo"];
        };
      };
    };
  };
  getServiceSourcesByIdUsages: {
    parameters: {
      path: {
        /** sourceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceSourcesByIdUsagesList: {
    parameters: {
      path: {
        /** sourceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceSourcesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSourcesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of sourceInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SourceInfo"][];
        };
      };
    };
  };
  getServiceSourcesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSurveys: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceSurvey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurvey"][];
        };
      };
    };
  };
  postServiceSurveys: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurvey */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurvey"];
        };
      };
    };
    /** survey */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceSurvey"];
      };
    };
  };
  getServiceSurveysByGrandparentIdQuestionsByParentIdOptions: {
    parameters: {
      path: {
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SurveyOption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyOption"][];
        };
      };
    };
  };
  postServiceSurveysByGrandparentIdQuestionsByParentIdOptions: {
    parameters: {
      path: {
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyOption */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyOption"];
        };
      };
    };
    /** surveyOption */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SurveyOption"];
      };
    };
  };
  getServiceSurveysByGrandparentIdQuestionsByParentIdOptionsById: {
    parameters: {
      path: {
        /** optionId */
        id: number;
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyOption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyOption"];
        };
      };
    };
  };
  putServiceSurveysByGrandparentIdQuestionsByParentIdOptionsById: {
    parameters: {
      path: {
        /** optionId */
        id: number;
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyOption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyOption"];
        };
      };
    };
    /** surveyOption */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SurveyOption"];
      };
    };
  };
  deleteServiceSurveysByGrandparentIdQuestionsByParentIdOptionsById: {
    parameters: {
      path: {
        /** optionId */
        id: number;
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceSurveysByGrandparentIdQuestionsByParentIdOptionsById: {
    parameters: {
      path: {
        /** optionId */
        id: number;
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyOption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyOption"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceSurveysByGrandparentIdQuestionsByParentIdOptionsCount: {
    parameters: {
      path: {
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSurveysById: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurvey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurvey"];
        };
      };
    };
  };
  putServiceSurveysById: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurvey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurvey"];
        };
      };
    };
    /** survey */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceSurvey"];
      };
    };
  };
  deleteServiceSurveysById: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceSurveysById: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurvey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurvey"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postServiceSurveysByIdCopy: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurvey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurvey"];
        };
      };
    };
  };
  getServiceSurveysByIdUsages: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceSurveysByIdUsagesList: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getServiceSurveysByParentIdQuestions: {
    parameters: {
      path: {
        /** surveyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceSurveyQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurveyQuestion"][];
        };
      };
    };
  };
  postServiceSurveysByParentIdQuestions: {
    parameters: {
      path: {
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurveyQuestion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurveyQuestion"];
        };
      };
    };
    /** serviceSurveyQuestion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceSurveyQuestion"];
      };
    };
  };
  getServiceSurveysByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurveyQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurveyQuestion"];
        };
      };
    };
  };
  putServiceSurveysByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurveyQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurveyQuestion"];
        };
      };
    };
    /** serviceSurveyQuestion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceSurveyQuestion"];
      };
    };
  };
  deleteServiceSurveysByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceSurveysByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurveyQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurveyQuestion"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postServiceSurveysByParentIdQuestionsByIdCopy: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceSurveyQuestion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceSurveyQuestion"];
        };
      };
    };
  };
  getServiceSurveysByParentIdQuestionsCount: {
    parameters: {
      path: {
        /** surveyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSurveysByParentIdResults: {
    parameters: {
      path: {
        /** surveyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SurveyResult */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyResult"][];
        };
      };
    };
  };
  postServiceSurveysByParentIdResults: {
    parameters: {
      path: {
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyResult */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyResult"];
        };
      };
    };
    /** surveyResult */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SurveyResult"];
      };
    };
  };
  getServiceSurveysByParentIdResultsById: {
    parameters: {
      path: {
        /** resultId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyResult */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyResult"];
        };
      };
    };
  };
  putServiceSurveysByParentIdResultsById: {
    parameters: {
      path: {
        /** resultId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyResult */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyResult"];
        };
      };
    };
    /** surveyResult */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SurveyResult"];
      };
    };
  };
  deleteServiceSurveysByParentIdResultsById: {
    parameters: {
      path: {
        /** resultId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceSurveysByParentIdResultsById: {
    parameters: {
      path: {
        /** resultId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyResult */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyResult"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceSurveysByParentIdResultsCount: {
    parameters: {
      path: {
        /** surveyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceSurveysCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postServiceTeamMembers: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TeamMember */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TeamMember"];
        };
      };
    };
    /** teamMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamMember"];
      };
    };
  };
  getServiceTeams: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTeam"][];
        };
      };
    };
  };
  getServiceTeamsById: {
    parameters: {
      path: {
        /** teamId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceTeam */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTeam"];
        };
      };
    };
  };
  getServiceTeamsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTemplates: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTemplate"][];
        };
      };
    };
  };
  getServiceTemplatesById: {
    parameters: {
      path: {
        /** templateId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceTemplate */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTemplate"];
        };
      };
    };
  };
  postServiceTemplatesByIdGenerate: {
    parameters: {
      path: {
        /** templateId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TemplateGeneratedCountsModel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TemplateGeneratedCountsModel"];
        };
      };
    };
  };
  getServiceTemplatesByIdInfo: {
    parameters: {
      path: {
        /** ServiceTemplateInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceTemplateInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTemplateInfo"];
        };
      };
    };
  };
  getServiceTemplatesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTemplatesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of serviceTemplateInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTemplateInfo"][];
        };
      };
    };
  };
  getServiceTemplatesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTicketLinks: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceTicketLink */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTicketLink"][];
        };
      };
    };
  };
  postServiceTicketLinks: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceTicketLink */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTicketLink"];
        };
      };
    };
    /** serviceTicketLink */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceTicketLink"];
      };
    };
  };
  getServiceTicketLinksById: {
    parameters: {
      path: {
        /** ticketLinkId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceTicketLink */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTicketLink"];
        };
      };
    };
  };
  putServiceTicketLinksById: {
    parameters: {
      path: {
        /** ticketLinkId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceTicketLink */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTicketLink"];
        };
      };
    };
    /** serviceTicketLink */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceTicketLink"];
      };
    };
  };
  deleteServiceTicketLinksById: {
    parameters: {
      path: {
        /** ticketLinkId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceTicketLinksById: {
    parameters: {
      path: {
        /** ticketLinkId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceTicketLink */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTicketLink"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceTicketLinksByIdInfo: {
    parameters: {
      path: {
        /** ServiceTicketLinkInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceTicketLinkInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTicketLinkInfo"];
        };
      };
    };
  };
  getServiceTicketLinksCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTicketLinksInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of serviceTicketLinkInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTicketLinkInfo"][];
        };
      };
    };
  };
  getServiceTicketLinksInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTickets: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConnectWise.Apis.v3_0.v2015_3.Service.Ticket.Ticket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Ticket"][];
        };
      };
    };
  };
  postServiceTickets: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Ticket */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Ticket"];
        };
      };
    };
    /** ticket */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Ticket"];
      };
    };
  };
  getServiceTicketsById: {
    parameters: {
      path: {
        /** ticketId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Ticket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Ticket"];
        };
      };
    };
  };
  putServiceTicketsById: {
    parameters: {
      path: {
        /** ticketId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Ticket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Ticket"];
        };
      };
    };
    /** ticket */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Ticket"];
      };
    };
  };
  deleteServiceTicketsById: {
    parameters: {
      path: {
        /** ticketId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceTicketsById: {
    parameters: {
      path: {
        /** ticketId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Ticket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Ticket"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceTicketsByIdInfo: {
    parameters: {
      path: {
        /** TicketInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketInfo"];
        };
      };
    };
  };
  getServiceTicketsByParentIdActivities: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ActivityReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityReference"][];
        };
      };
    };
  };
  getServiceTicketsByParentIdActivitiesCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTicketsByParentIdAllNotes: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceTicketNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceTicketNote"][];
        };
      };
    };
  };
  postServiceTicketsByParentIdAttachChildren: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** bundle */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketBundle"];
      };
    };
  };
  getServiceTicketsByParentIdConfigurations: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConfigurationReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationReference"][];
        };
      };
    };
  };
  postServiceTicketsByParentIdConfigurations: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationReference */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationReference"];
        };
      };
    };
    /** configuration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConfigurationReference"];
      };
    };
  };
  getServiceTicketsByParentIdConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConfigurationReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConfigurationReference"];
        };
      };
    };
  };
  deleteServiceTicketsByParentIdConfigurationsById: {
    parameters: {
      path: {
        /** configurationId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getServiceTicketsByParentIdConfigurationsCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postServiceTicketsByParentIdConvert: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** conversion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConvertToProject"];
      };
    };
  };
  getServiceTicketsByParentIdDocuments: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of DocumentReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentReference"][];
        };
      };
    };
  };
  getServiceTicketsByParentIdDocumentsCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postServiceTicketsByParentIdMerge: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** merge */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketMerge"];
      };
    };
  };
  getServiceTicketsByParentIdNotes: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceNote"][];
        };
      };
    };
  };
  postServiceTicketsByParentIdNotes: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceNote */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceNote"];
        };
      };
    };
    /** serviceNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceNote"];
      };
    };
  };
  getServiceTicketsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceNote"];
        };
      };
    };
  };
  putServiceTicketsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceNote"];
        };
      };
    };
    /** serviceNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ServiceNote"];
      };
    };
  };
  deleteServiceTicketsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceTicketsByParentIdNotesById: {
    parameters: {
      path: {
        /** noteId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceNote"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceTicketsByParentIdNotesCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTicketsByParentIdProducts: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ProductReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ProductReference"][];
        };
      };
    };
  };
  getServiceTicketsByParentIdProductsCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTicketsByParentIdScheduleentries: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleEntryReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleEntryReference"][];
        };
      };
    };
  };
  getServiceTicketsByParentIdScheduleentriesCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTicketsByParentIdTasks: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Task */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Task"][];
        };
      };
    };
  };
  postServiceTicketsByParentIdTasks: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Task */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Task"];
        };
      };
    };
    /** task */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Task"];
      };
    };
  };
  getServiceTicketsByParentIdTasksById: {
    parameters: {
      path: {
        /** taskId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Task */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Task"];
        };
      };
    };
  };
  putServiceTicketsByParentIdTasksById: {
    parameters: {
      path: {
        /** taskId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Task */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Task"];
        };
      };
    };
    /** task */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Task"];
      };
    };
  };
  deleteServiceTicketsByParentIdTasksById: {
    parameters: {
      path: {
        /** taskId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceTicketsByParentIdTasksById: {
    parameters: {
      path: {
        /** taskId */
        id: number;
        /** ticketId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Task */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Task"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceTicketsByParentIdTasksCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTicketsByParentIdTimeentries: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeEntryReference */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntryReference"][];
        };
      };
    };
  };
  getServiceTicketsByParentIdTimeentriesCount: {
    parameters: {
      path: {
        /** ticketId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTicketsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getServiceTicketsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ticketInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketInfo"][];
        };
      };
    };
  };
  getServiceTicketsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postServiceTicketsSearch: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Ticket */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Ticket"][];
        };
      };
    };
    /** filterValues */
    requestBody: {
      content: {
        "application/json": components["schemas"]["FilterValues"];
      };
    };
  };
  getServiceTicketSyncs: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TicketSync */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketSync"][];
        };
      };
    };
  };
  postServiceTicketSyncs: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketSync */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketSync"];
        };
      };
    };
    /** ticketSync */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketSync"];
      };
    };
  };
  getServiceTicketSyncsById: {
    parameters: {
      path: {
        /** ticketSyncId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketSync */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketSync"];
        };
      };
    };
  };
  putServiceTicketSyncsById: {
    parameters: {
      path: {
        /** ticketSyncId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketSync */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketSync"];
        };
      };
    };
    /** ticketSync */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketSync"];
      };
    };
  };
  deleteServiceTicketSyncsById: {
    parameters: {
      path: {
        /** ticketSyncId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchServiceTicketSyncsById: {
    parameters: {
      path: {
        /** ticketSyncId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketSync */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketSync"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getServiceTicketSyncsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemAllowedfiletypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AllowedFileType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedFileType"][];
        };
      };
    };
  };
  postSystemAllowedFileTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AllowedFileType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedFileType"];
        };
      };
    };
    /** allowedFileType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AllowedFileType"];
      };
    };
  };
  getSystemAllowedfiletypesById: {
    parameters: {
      path: {
        /** allowedfiletypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AllowedFileType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedFileType"];
        };
      };
    };
  };
  putSystemAllowedfiletypesById: {
    parameters: {
      path: {
        /** allowedFileTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** allowedFileType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedFileType"];
        };
      };
    };
    /** AllowedFileType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AllowedFileType"];
      };
    };
  };
  deleteSystemAllowedfiletypesById: {
    parameters: {
      path: {
        /** allowedfiletypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemAllowedfiletypesById: {
    parameters: {
      path: {
        /** allowedFileTypesId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AllowedFileType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedFileType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemAllowedfiletypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemAllowedorigins: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AllowedOrigin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedOrigin"][];
        };
      };
    };
  };
  postSystemAllowedorigins: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AllowedOrigin */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedOrigin"];
        };
      };
    };
    /** origin */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AllowedOrigin"];
      };
    };
  };
  getSystemAllowedoriginsById: {
    parameters: {
      path: {
        /** allowedoriginId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AllowedOrigin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedOrigin"];
        };
      };
    };
  };
  putSystemAllowedoriginsById: {
    parameters: {
      path: {
        /** allowedoriginId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AllowedOrigin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedOrigin"];
        };
      };
    };
    /** origin */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AllowedOrigin"];
      };
    };
  };
  deleteSystemAllowedoriginsById: {
    parameters: {
      path: {
        /** allowedoriginId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemAllowedoriginsById: {
    parameters: {
      path: {
        /** allowedoriginId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AllowedOrigin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AllowedOrigin"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemAllowedoriginsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemApiMembers: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ApiMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ApiMember"][];
        };
      };
    };
  };
  postSystemApiMembers: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiMember */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ApiMember"];
        };
      };
    };
    /** apiMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApiMember"];
      };
    };
  };
  getSystemApiMembersById: {
    parameters: {
      path: {
        /** apiMemberId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ApiMember"];
        };
      };
    };
  };
  putSystemApiMembersById: {
    parameters: {
      path: {
        /** apiMemberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ApiMember"];
        };
      };
    };
    /** apiMember */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ApiMember"];
      };
    };
  };
  patchSystemApiMembersById: {
    parameters: {
      path: {
        /** apiMemberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ApiMember"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemApiMembersCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemApiMembersDefault: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ApiMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ApiMember"];
        };
      };
    };
  };
  getSystemAudittrail: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
      path: {
        /** getRequest */
        getRequest: components["schemas"]["AuditTrailEntryGetRequest"];
      };
    };
    responses: {
      /** List of AuditTrailEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AuditTrailEntry"][];
        };
      };
    };
  };
  getSystemAudittrailCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
      path: {
        /** getRequest */
        getRequest: components["schemas"]["AuditTrailEntryGetRequest"];
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemAuthAnvils: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConnectWise.Apis.v3_0.v2015_3.System.AuthAnvil.AuthAnvil */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AuthAnvil"][];
        };
      };
    };
  };
  getSystemAuthAnvilsById: {
    parameters: {
      path: {
        /** authAnvilId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.System.AuthAnvil.AuthAnvil */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AuthAnvil"];
        };
      };
    };
  };
  putSystemAuthAnvilsById: {
    parameters: {
      path: {
        /** authAnvilId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.System.AuthAnvil.AuthAnvil */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AuthAnvil"];
        };
      };
    };
    /** authAnvil */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthAnvil"];
      };
    };
  };
  patchSystemAuthAnvilsById: {
    parameters: {
      path: {
        /** authAnvilId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWise.Apis.v3_0.v2015_3.System.AuthAnvil.AuthAnvil */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AuthAnvil"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemAuthAnvilsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemAuthAnvilsTestConnection: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getSystemAutoSyncTime: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of AutoSyncTime */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AutoSyncTime"][];
        };
      };
    };
  };
  postSystemAutoSyncTime: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AutoSyncTime */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AutoSyncTime"];
        };
      };
    };
    /** autoSyncTime */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AutoSyncTime"];
      };
    };
  };
  getSystemAutoSyncTimeById: {
    parameters: {
      path: {
        /** autoSyncTimeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AutoSyncTime */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AutoSyncTime"];
        };
      };
    };
  };
  putSystemAutoSyncTimeById: {
    parameters: {
      path: {
        /** autoSyncTimeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AutoSyncTime */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AutoSyncTime"];
        };
      };
    };
    /** autoSyncTime */
    requestBody: {
      content: {
        "application/json": components["schemas"]["AutoSyncTime"];
      };
    };
  };
  deleteSystemAutoSyncTimeById: {
    parameters: {
      path: {
        /** autoSyncTimeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemAutoSyncTimeById: {
    parameters: {
      path: {
        /** autoSyncTimeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** AutoSyncTime */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["AutoSyncTime"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemAutoSyncTimeCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postSystemBundles: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BundleResultsCollection */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BundleResultsCollection"];
        };
      };
    };
    /** requests */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BundleRequestsCollection"];
      };
    };
  };
  postSystemBundlesCount: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BundleResultsCollection */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BundleResultsCollection"];
        };
      };
    };
    /** requests */
    requestBody: {
      content: {
        "application/json": components["schemas"]["BundleRequestsCollection"];
      };
    };
  };
  getSystemCallbacks: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CallbackEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CallbackEntry"][];
        };
      };
    };
  };
  postSystemCallbacks: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CallbackEntry */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CallbackEntry"];
        };
      };
    };
    /** callbackEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CallbackEntry"];
      };
    };
  };
  getSystemCallbacksById: {
    parameters: {
      path: {
        /** callbackId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CallbackEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CallbackEntry"];
        };
      };
    };
  };
  putSystemCallbacksById: {
    parameters: {
      path: {
        /** callbackId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CallbackEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CallbackEntry"];
        };
      };
    };
    /** callbackEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CallbackEntry"];
      };
    };
  };
  deleteSystemCallbacksById: {
    parameters: {
      path: {
        /** callbackId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemCallbacksById: {
    parameters: {
      path: {
        /** callbackId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CallbackEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CallbackEntry"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemCallbacksCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemCertifications: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Certification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Certification"][];
        };
      };
    };
  };
  postSystemCertifications: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Certification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Certification"];
        };
      };
    };
    /** certification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Certification"];
      };
    };
  };
  getSystemCertificationsById: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Certification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Certification"];
        };
      };
    };
  };
  putSystemCertificationsById: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Certification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Certification"];
        };
      };
    };
    /** certification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Certification"];
      };
    };
  };
  deleteSystemCertificationsById: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemCertificationsById: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Certification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Certification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemCertificationsByIdUsages: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSystemCertificationsByIdUsagesList: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSystemCertificationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemConnectWiseHostedScreens: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConnectWiseHostedScreen */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConnectWiseHostedScreen"][];
        };
      };
    };
  };
  getSystemConnectWiseHostedScreensById: {
    parameters: {
      path: {
        /** connectWiseHostedScreenId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWiseHostedScreen */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConnectWiseHostedScreen"];
        };
      };
    };
  };
  getSystemConnectWiseHostedScreensCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemConnectwisehostedsetups: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ConnectWiseHostedSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConnectWiseHostedSetup"][];
        };
      };
    };
  };
  postSystemConnectwisehostedsetups: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWiseHostedSetup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConnectWiseHostedSetup"];
        };
      };
    };
    /** connectWiseHostedSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConnectWiseHostedSetup"];
      };
    };
  };
  getSystemConnectwisehostedsetupsById: {
    parameters: {
      path: {
        /** connectwisehostedsetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWiseHostedSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConnectWiseHostedSetup"];
        };
      };
    };
  };
  putSystemConnectwisehostedsetupsById: {
    parameters: {
      path: {
        /** connectwisehostedsetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWiseHostedSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConnectWiseHostedSetup"];
        };
      };
    };
    /** connectWiseHostedSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ConnectWiseHostedSetup"];
      };
    };
  };
  deleteSystemConnectwisehostedsetupsById: {
    parameters: {
      path: {
        /** connectwisehostedsetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemConnectwisehostedsetupsById: {
    parameters: {
      path: {
        /** connectwisehostedsetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ConnectWiseHostedSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ConnectWiseHostedSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemConnectwisehostedsetupsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemCustomReports: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CustomReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReport"][];
        };
      };
    };
  };
  postSystemCustomReports: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CustomReport */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReport"];
        };
      };
    };
    /** customReport */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomReport"];
      };
    };
  };
  getSystemCustomReportsById: {
    parameters: {
      path: {
        /** customReportId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CustomReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReport"];
        };
      };
    };
  };
  putSystemCustomReportsById: {
    parameters: {
      path: {
        /** customReportId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CustomReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReport"];
        };
      };
    };
    /** customReport */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomReport"];
      };
    };
  };
  deleteSystemCustomReportsById: {
    parameters: {
      path: {
        /** customReportId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemCustomReportsById: {
    parameters: {
      path: {
        /** customReportId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CustomReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReport"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemCustomReportsByParentIdParameters: {
    parameters: {
      path: {
        /** customReportId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CustomReportParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReportParameter"][];
        };
      };
    };
  };
  postSystemCustomReportsByParentIdParameters: {
    parameters: {
      path: {
        /** customReportId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CustomReportParameter */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReportParameter"];
        };
      };
    };
    /** customReportParameter */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomReportParameter"];
      };
    };
  };
  getSystemCustomReportsByParentIdParametersById: {
    parameters: {
      path: {
        /** parameterId */
        id: number;
        /** customReportId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CustomReportParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReportParameter"];
        };
      };
    };
  };
  putSystemCustomReportsByParentIdParametersById: {
    parameters: {
      path: {
        /** parameterId */
        id: number;
        /** customReportId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CustomReportParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReportParameter"];
        };
      };
    };
    /** customReportParameter */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CustomReportParameter"];
      };
    };
  };
  deleteSystemCustomReportsByParentIdParametersById: {
    parameters: {
      path: {
        /** parameterId */
        id: number;
        /** customReportId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemCustomReportsByParentIdParametersById: {
    parameters: {
      path: {
        /** parameterId */
        id: number;
        /** customReportId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CustomReportParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CustomReportParameter"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemCustomReportsByParentIdParametersCount: {
    parameters: {
      path: {
        /** customReportId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemCustomReportsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemCwTimeZones: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CwTimeZone */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CwTimeZone"][];
        };
      };
    };
  };
  getSystemCwTimeZonesById: {
    parameters: {
      path: {
        /** cwTimeZoneId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CwTimeZone */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CwTimeZone"];
        };
      };
    };
  };
  getSystemCwTimeZonesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemDepartments: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Department */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Department"][];
        };
      };
    };
  };
  postSystemDepartments: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Department */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Department"];
        };
      };
    };
    /** department */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Department"];
      };
    };
  };
  getSystemDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Department */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Department"];
        };
      };
    };
  };
  putSystemDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Department */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Department"];
        };
      };
    };
    /** department */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Department"];
      };
    };
  };
  deleteSystemDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Department */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Department"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemDepartmentsByIdUsages: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSystemDepartmentsByIdUsagesList: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSystemDepartmentsByParentIdLocations: {
    parameters: {
      path: {
        /** departmentId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of DepartmentLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DepartmentLocation"][];
        };
      };
    };
  };
  postSystemDepartmentsByParentIdLocations: {
    parameters: {
      path: {
        /** departmentId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DepartmentLocation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DepartmentLocation"];
        };
      };
    };
    /** departmentLocation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentLocation"];
      };
    };
  };
  getSystemDepartmentsByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** departmentId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DepartmentLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DepartmentLocation"];
        };
      };
    };
  };
  putSystemDepartmentsByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** departmentId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DepartmentLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DepartmentLocation"];
        };
      };
    };
    /** departmentLocation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentLocation"];
      };
    };
  };
  deleteSystemDepartmentsByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** departmentId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemDepartmentsByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** departmentId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DepartmentLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DepartmentLocation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemDepartmentsByParentIdLocationsCount: {
    parameters: {
      path: {
        /** departmentId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemDepartmentsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemDocuments: {
    parameters: {
      query: {
        /** recordId */
        recordId?: number;
        /** recordType */
        recordType?:
          | "Activity"
          | "Agreement"
          | "Company"
          | "Config"
          | "Configuration"
          | "Contact"
          | "CustomImage"
          | "Document"
          | "Expense"
          | "HTMLTemplate"
          | "Invoice"
          | "Opportunity"
          | "Project"
          | "ProjectActivity"
          | "PurchaseOrder"
          | "Rma"
          | "SalesOrder"
          | "Service"
          | "Ticket"
          | "ProjectTicket"
          | "ServiceTemplate"
          | "StandardServiceTemplate"
          | "SrDetail"
          | "TimeEntry"
          | "JobHeader"
          | "MarketingManagerAudit"
          | "KnowledgeBase"
          | "ToolbarIcon"
          | "Meeting"
          | "MeetingNote"
          | "ProductSetup"
          | "ProjectTemplateTicket"
          | "BillingSetup"
          | "ServiceBoard"
          | "WordTemplate"
          | "Member"
          | "PortalImagePortalLogo"
          | "PortalImageReportLogo"
          | "TopNavigationLogo"
          | "PhaseStatus"
          | "ProjectStatus"
          | "TicketStatus"
          | "Schedule"
          | "Priority"
          | "Unassigned";
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of DocumentInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentInfo"][];
        };
      };
    };
  };
  postSystemDocuments: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DocumentInfo */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentInfo"];
        };
      };
    };
    /** Multipart */
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["DocumentFormData"];
      };
    };
  };
  getSystemDocumentsById: {
    parameters: {
      path: {
        /** documentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DocumentInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentInfo"];
        };
      };
    };
  };
  postSystemDocumentsById: {
    parameters: {
      path: {
        /** documentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DocumentInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentInfo"];
        };
      };
    };
  };
  deleteSystemDocumentsById: {
    parameters: {
      path: {
        /** documentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getSystemDocumentsByIdDownload: {
    parameters: {
      path: {
        /** documentId */
        id: number;
      };
      query: {
        /** lastModified */
        lastModified?: string;
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContentType = application/octet-stream */
      200: {
        content: {
          "application/octet-stream": string;
        };
      };
    };
  };
  getSystemDocumentsByIdThumbnail: {
    parameters: {
      path: {
        /** documentId */
        id: number;
      };
      query: {
        /** lastModified */
        lastModified?: string;
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContentType = application/octet-stream */
      200: {
        content: {
          "application/octet-stream": string;
        };
      };
    };
  };
  getSystemDocumentsCount: {
    parameters: {
      query: {
        /** recordId */
        recordId?: number;
        /** recordType */
        recordType?:
          | "Activity"
          | "Agreement"
          | "Company"
          | "Config"
          | "Configuration"
          | "Contact"
          | "CustomImage"
          | "Document"
          | "Expense"
          | "HTMLTemplate"
          | "Invoice"
          | "Opportunity"
          | "Project"
          | "ProjectActivity"
          | "PurchaseOrder"
          | "Rma"
          | "SalesOrder"
          | "Service"
          | "Ticket"
          | "ProjectTicket"
          | "ServiceTemplate"
          | "StandardServiceTemplate"
          | "SrDetail"
          | "TimeEntry"
          | "JobHeader"
          | "MarketingManagerAudit"
          | "KnowledgeBase"
          | "ToolbarIcon"
          | "Meeting"
          | "MeetingNote"
          | "ProductSetup"
          | "ProjectTemplateTicket"
          | "BillingSetup"
          | "ServiceBoard"
          | "WordTemplate"
          | "Member"
          | "PortalImagePortalLogo"
          | "PortalImageReportLogo"
          | "TopNavigationLogo"
          | "PhaseStatus"
          | "ProjectStatus"
          | "TicketStatus"
          | "Schedule"
          | "Priority"
          | "Unassigned";
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemDocumentsUploadsample: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContentType = text/html */
      200: unknown;
    };
  };
  getSystemEmailConnectors: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of EmailConnector */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnector"][];
        };
      };
    };
  };
  postSystemEmailConnectors: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnector */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnector"];
        };
      };
    };
    /** emailConnector */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailConnector"];
      };
    };
  };
  getSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRules: {
    parameters: {
      path: {
        /** parsingStyleId */
        parentId: number;
        /** emailConnectorId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of EmailConnectorParsingRule */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingRule"][];
        };
      };
    };
  };
  postSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRules: {
    parameters: {
      path: {
        /** parsingStyleId */
        parentId: number;
        /** emailConnectorId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnectorParsingRule */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingRule"];
        };
      };
    };
    /** emailConnectorParsingRule */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailConnectorParsingRule"];
      };
    };
  };
  getSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById: {
    parameters: {
      path: {
        /** parsingRuleId */
        id: number;
        /** parsingStyleId */
        parentId: number;
        /** emailConnectorId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnectorParsingRule */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingRule"];
        };
      };
    };
  };
  putSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById: {
    parameters: {
      path: {
        /** parsingRuleId */
        id: number;
        /** parsingStyleId */
        parentId: number;
        /** emailConnectorId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnectorParsingRule */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingRule"];
        };
      };
    };
    /** emailConnectorParsingRule */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailConnectorParsingRule"];
      };
    };
  };
  deleteSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById: {
    parameters: {
      path: {
        /** parsingRuleId */
        id: number;
        /** parsingStyleId */
        parentId: number;
        /** emailConnectorId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesById: {
    parameters: {
      path: {
        /** parsingRuleId */
        id: number;
        /** parsingStyleId */
        parentId: number;
        /** emailConnectorId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnectorParsingRule */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingRule"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemEmailConnectorsByGrandparentIdParsingStylesByParentIdParsingRulesCount: {
    parameters: {
      path: {
        /** parsingStyleId */
        parentId: number;
        /** emailConnectorId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemEmailConnectorsById: {
    parameters: {
      path: {
        /** emailConnectorId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnector */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnector"];
        };
      };
    };
  };
  putSystemEmailConnectorsById: {
    parameters: {
      path: {
        /** emailConnectorId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnector */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnector"];
        };
      };
    };
    /** emailConnector */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailConnector"];
      };
    };
  };
  deleteSystemEmailConnectorsById: {
    parameters: {
      path: {
        /** emailConnectorId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemEmailConnectorsById: {
    parameters: {
      path: {
        /** emailConnectorId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnector */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnector"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemEmailConnectorsByIdInfo: {
    parameters: {
      path: {
        /** EmailConnectorInfo */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnectorInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorInfo"];
        };
      };
    };
  };
  getSystemEmailConnectorsByParentIdParsingStyles: {
    parameters: {
      path: {
        /** emailConnectorId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of EmailConnectorParsingStyle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingStyle"][];
        };
      };
    };
  };
  postSystemEmailConnectorsByParentIdParsingStyles: {
    parameters: {
      path: {
        /** emailConnectorId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnectorParsingStyle */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingStyle"];
        };
      };
    };
    /** emailConnectorParsingStyle */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailConnectorParsingStyle"];
      };
    };
  };
  getSystemEmailConnectorsByParentIdParsingStylesById: {
    parameters: {
      path: {
        /** parsingStyleId */
        id: number;
        /** emailConnectorId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnectorParsingStyle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingStyle"];
        };
      };
    };
  };
  putSystemEmailConnectorsByParentIdParsingStylesById: {
    parameters: {
      path: {
        /** parsingStyleId */
        id: number;
        /** emailConnectorId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnectorParsingStyle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingStyle"];
        };
      };
    };
    /** emailConnectorParsingStyle */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailConnectorParsingStyle"];
      };
    };
  };
  deleteSystemEmailConnectorsByParentIdParsingStylesById: {
    parameters: {
      path: {
        /** parsingStyleId */
        id: number;
        /** emailConnectorId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemEmailConnectorsByParentIdParsingStylesById: {
    parameters: {
      path: {
        /** parsingStyleId */
        id: number;
        /** emailConnectorId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailConnectorParsingStyle */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorParsingStyle"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemEmailConnectorsByParentIdParsingStylesCount: {
    parameters: {
      path: {
        /** emailConnectorId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemEmailConnectorsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemEmailConnectorsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of emailConnectorInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailConnectorInfo"][];
        };
      };
    };
  };
  getSystemEmailConnectorsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemEmailExclusions: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of EmailExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailExclusion"][];
        };
      };
    };
  };
  postSystemEmailExclusions: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailExclusion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailExclusion"];
        };
      };
    };
    /** emailExclusion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailExclusion"];
      };
    };
  };
  getSystemEmailExclusionsById: {
    parameters: {
      path: {
        /** emailExclusionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailExclusion"];
        };
      };
    };
  };
  putSystemEmailExclusionsById: {
    parameters: {
      path: {
        /** emailExclusionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailExclusion"];
        };
      };
    };
    /** emailExclusion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EmailExclusion"];
      };
    };
  };
  deleteSystemEmailExclusionsById: {
    parameters: {
      path: {
        /** emailExclusionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemEmailExclusionsById: {
    parameters: {
      path: {
        /** emailExclusionId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailExclusion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailExclusion"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemEmailExclusionsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemEmailTokens: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of EmailToken */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailToken"][];
        };
      };
    };
  };
  getSystemEmailTokensById: {
    parameters: {
      path: {
        /** emailTokenId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EmailToken */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EmailToken"];
        };
      };
    };
  };
  getSystemEmailTokensCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemEPayConfigurations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of EPayConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EPayConfiguration"][];
        };
      };
    };
  };
  postSystemEPayConfigurations: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EPayConfiguration */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EPayConfiguration"];
        };
      };
    };
    /** ePayConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EPayConfiguration"];
      };
    };
  };
  getSystemEPayConfigurationsById: {
    parameters: {
      path: {
        /** ePayConfigurationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EPayConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EPayConfiguration"];
        };
      };
    };
  };
  putSystemEPayConfigurationsById: {
    parameters: {
      path: {
        /** ePayConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EPayConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EPayConfiguration"];
        };
      };
    };
    /** ePayConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["EPayConfiguration"];
      };
    };
  };
  deleteSystemEPayConfigurationsById: {
    parameters: {
      path: {
        /** ePayConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemEPayConfigurationsById: {
    parameters: {
      path: {
        /** ePayConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** EPayConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["EPayConfiguration"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemEPayConfigurationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemExperiments: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Experiment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Experiment"][];
        };
      };
    };
  };
  getSystemExperimentsById: {
    parameters: {
      path: {
        /** experimentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Experiment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Experiment"];
        };
      };
    };
  };
  getSystemExperimentsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemFileuploadsettings: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of fileUploadSettingses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["FileUploadSetting"][];
        };
      };
    };
  };
  getSystemFileuploadsettingsById: {
    parameters: {
      path: {
        /** FileUploadSettingId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** FileUploadSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["FileUploadSetting"];
        };
      };
    };
  };
  putSystemFileuploadsettingsById: {
    parameters: {
      path: {
        /** FileUploadSettingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** FileUploadSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["FileUploadSetting"];
        };
      };
    };
    /** companyTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["FileUploadSetting"];
      };
    };
  };
  patchSystemFileuploadsettingsById: {
    parameters: {
      path: {
        /** FileUploadSettingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** FileUploadSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["FileUploadSetting"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemFileuploadsettingsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemGoogleemailsetup: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of googleEmailSetupses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GoogleEmailSetup"][];
        };
      };
    };
  };
  postSystemGoogleemailsetup: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GoogleEmailSetup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GoogleEmailSetup"];
        };
      };
    };
    /** GoogleEmailSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["GoogleEmailSetup"];
      };
    };
  };
  getSystemGoogleemailsetupById: {
    parameters: {
      path: {
        /** GoogleEmailSetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GoogleEmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GoogleEmailSetup"];
        };
      };
    };
  };
  putSystemGoogleemailsetupById: {
    parameters: {
      path: {
        /** GoogleEmailSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GoogleEmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GoogleEmailSetup"];
        };
      };
    };
    /** companyTypeAssociation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["GoogleEmailSetup"];
      };
    };
  };
  deleteSystemGoogleemailsetupById: {
    parameters: {
      path: {
        /** GoogleEmailSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemGoogleemailsetupById: {
    parameters: {
      path: {
        /** GoogleEmailSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** GoogleEmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["GoogleEmailSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSystemGoogleemailsetupByIdTestConnection: {
    parameters: {
      path: {
        /** emailSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getSystemGoogleemailsetupCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemImaps: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Imap */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Imap"][];
        };
      };
    };
  };
  postSystemImaps: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Imap */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Imap"];
        };
      };
    };
    /** imap */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Imap"];
      };
    };
  };
  getSystemImapsById: {
    parameters: {
      path: {
        /** imapId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Imap */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Imap"];
        };
      };
    };
  };
  putSystemImapsById: {
    parameters: {
      path: {
        /** imapId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Imap */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Imap"];
        };
      };
    };
    /** imap */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Imap"];
      };
    };
  };
  deleteSystemImapsById: {
    parameters: {
      path: {
        /** imapId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemImapsById: {
    parameters: {
      path: {
        /** imapId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Imap */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Imap"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemImapsByIdInfo: {
    parameters: {
      path: {
        /** ImapInfo */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ImapInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ImapInfo"];
        };
      };
    };
  };
  getSystemImapsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemImapsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ImapInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ImapInfo"][];
        };
      };
    };
  };
  getSystemImapsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postSystemImportMassMaintenanceById: {
    parameters: {
      path: {
        /** importMassMaintenanceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ImportMassMaintenance */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ImportMassMaintenance"];
        };
      };
    };
  };
  getSystemInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Info */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Info"];
        };
      };
    };
  };
  getSystemInfoDepartmentlocations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of DepartmentLocationInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DepartmentLocationInfo"][];
        };
      };
    };
  };
  getSystemInfoDepartmentlocationsById: {
    parameters: {
      path: {
        /** departmentlocationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DepartmentLocationInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DepartmentLocationInfo"];
        };
      };
    };
  };
  getSystemInfoDepartmentlocationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInfoDepartments: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of DepartmentInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DepartmentInfo"][];
        };
      };
    };
  };
  getSystemInfoDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DepartmentInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DepartmentInfo"];
        };
      };
    };
  };
  getSystemInfoDepartmentsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInfoLinks: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of LinkInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LinkInfo"][];
        };
      };
    };
  };
  getSystemInfoLinksById: {
    parameters: {
      path: {
        /** linkId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LinkInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LinkInfo"];
        };
      };
    };
  };
  postSystemInfoLinksByIdResolveurl: {
    parameters: {
      path: {
        /** linkId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LinkResolveUrlInfo */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LinkResolveUrlInfo"];
        };
      };
    };
    /** resolveInfo */
    requestBody: {
      content: {
        "application/json": components["schemas"]["LinkResolveUrlInfo"];
      };
    };
  };
  getSystemInfoLinksCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInfoLocales: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of LocaleInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LocaleInfo"][];
        };
      };
    };
  };
  getSystemInfoLocalesById: {
    parameters: {
      path: {
        /** localeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LocaleInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LocaleInfo"];
        };
      };
    };
  };
  getSystemInfoLocalesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInfoLocations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of LocationInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LocationInfo"][];
        };
      };
    };
  };
  getSystemInfoLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LocationInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LocationInfo"];
        };
      };
    };
  };
  getSystemInfoLocationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInfoMembers: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberInfo"][];
        };
      };
    };
  };
  getSystemInfoMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberInfo"];
        };
      };
    };
  };
  getSystemInfoMembersmemberIdentifierregextypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberInfo"];
        };
      };
    };
  };
  getSystemInfoMembersCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInfoPersonas: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PersonasInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PersonasInfo"][];
        };
      };
    };
  };
  getSystemInfoPersonasById: {
    parameters: {
      path: {
        /** personaId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PersonasInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PersonasInfo"];
        };
      };
    };
  };
  getSystemInfoPersonasCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInfoStandardNotes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of StandardNoteInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StandardNoteInfo"][];
        };
      };
    };
  };
  getSystemInfoStandardNotesById: {
    parameters: {
      path: {
        /** standardNoteId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** StandardNoteInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StandardNoteInfo"];
        };
      };
    };
  };
  getSystemInfoStandardNotesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInOutBoards: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of InOutBoard */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutBoard"][];
        };
      };
    };
  };
  postSystemInOutBoards: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InOutBoard */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutBoard"];
        };
      };
    };
    /** inOutBoard */
    requestBody: {
      content: {
        "application/json": components["schemas"]["InOutBoard"];
      };
    };
  };
  getSystemInOutBoardsById: {
    parameters: {
      path: {
        /** inOutBoardId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InOutBoard */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutBoard"];
        };
      };
    };
  };
  putSystemInOutBoardsById: {
    parameters: {
      path: {
        /** inOutBoardId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InOutBoard */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutBoard"];
        };
      };
    };
    /** inOutBoard */
    requestBody: {
      content: {
        "application/json": components["schemas"]["InOutBoard"];
      };
    };
  };
  deleteSystemInOutBoardsById: {
    parameters: {
      path: {
        /** inOutBoardId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemInOutBoardsById: {
    parameters: {
      path: {
        /** inOutBoardId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InOutBoard */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutBoard"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemInOutBoardsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInOutTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of InOutType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutType"][];
        };
      };
    };
  };
  postSystemInOutTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InOutType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutType"];
        };
      };
    };
    /** inOutType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["InOutType"];
      };
    };
  };
  getSystemInOutTypesById: {
    parameters: {
      path: {
        /** inOutTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InOutType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutType"];
        };
      };
    };
  };
  putSystemInOutTypesById: {
    parameters: {
      path: {
        /** inOutTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InOutType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutType"];
        };
      };
    };
    /** inOutType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["InOutType"];
      };
    };
  };
  deleteSystemInOutTypesById: {
    parameters: {
      path: {
        /** inOutTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemInOutTypesById: {
    parameters: {
      path: {
        /** inOutTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InOutType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemInOutTypesByIdInfo: {
    parameters: {
      path: {
        /** inOutTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** InOutTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutTypeInfo"];
        };
      };
    };
  };
  getSystemInOutTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInOutTypesCountInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemInOutTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of InOutTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["InOutTypeInfo"][];
        };
      };
    };
  };
  getSystemIntegratorlogins: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of IntegratorLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorLogin"][];
        };
      };
    };
  };
  postSystemIntegratorlogins: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** IntegratorLogin */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorLogin"];
        };
      };
    };
    /** integratorLogin */
    requestBody: {
      content: {
        "application/json": components["schemas"]["IntegratorLogin"];
      };
    };
  };
  getSystemIntegratorloginsById: {
    parameters: {
      path: {
        /** integratorloginId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** IntegratorLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorLogin"];
        };
      };
    };
  };
  putSystemIntegratorloginsById: {
    parameters: {
      path: {
        /** integratorloginId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** IntegratorLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorLogin"];
        };
      };
    };
    /** integratorLogin */
    requestBody: {
      content: {
        "application/json": components["schemas"]["IntegratorLogin"];
      };
    };
  };
  deleteSystemIntegratorloginsById: {
    parameters: {
      path: {
        /** integratorloginId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemIntegratorloginsById: {
    parameters: {
      path: {
        /** integratorloginId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** IntegratorLogin */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorLogin"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemIntegratorloginsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemIntegratorTags: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of IntegratorTag */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorTag"][];
        };
      };
    };
  };
  postSystemIntegratorTags: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** IntegratorTag */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorTag"];
        };
      };
    };
    /** tag */
    requestBody: {
      content: {
        "application/json": components["schemas"]["IntegratorTag"];
      };
    };
  };
  getSystemIntegratorTagsById: {
    parameters: {
      path: {
        /** integratorTagId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** IntegratorTag */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorTag"];
        };
      };
    };
  };
  putSystemIntegratorTagsById: {
    parameters: {
      path: {
        /** integratorTagId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** IntegratorTag */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorTag"];
        };
      };
    };
    /** tag */
    requestBody: {
      content: {
        "application/json": components["schemas"]["IntegratorTag"];
      };
    };
  };
  deleteSystemIntegratorTagsById: {
    parameters: {
      path: {
        /** integratorTagId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemIntegratorTagsById: {
    parameters: {
      path: {
        /** integratorTagId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** IntegratorTag */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["IntegratorTag"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemIntegratorTagsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemKpiCategories: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of KPICategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KPICategory"][];
        };
      };
    };
  };
  getSystemKpiCategoriesById: {
    parameters: {
      path: {
        /** kpiCategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KPICategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KPICategory"];
        };
      };
    };
  };
  getSystemKpiCategoriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemKpis: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of KPI */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KPI"][];
        };
      };
    };
  };
  getSystemKpisById: {
    parameters: {
      path: {
        /** kpiId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** KPI */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["KPI"];
        };
      };
    };
  };
  getSystemKpisCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemLdapConfigurations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of LdapConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LdapConfiguration"][];
        };
      };
    };
  };
  postSystemLdapConfigurations: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LdapConfiguration */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LdapConfiguration"];
        };
      };
    };
    /** ldapConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["LdapConfiguration"];
      };
    };
  };
  getSystemLdapConfigurationsById: {
    parameters: {
      path: {
        /** ldapConfigurationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LdapConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LdapConfiguration"];
        };
      };
    };
  };
  putSystemLdapConfigurationsById: {
    parameters: {
      path: {
        /** ldapConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LdapConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LdapConfiguration"];
        };
      };
    };
    /** ldapConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["LdapConfiguration"];
      };
    };
  };
  deleteSystemLdapConfigurationsById: {
    parameters: {
      path: {
        /** ldapConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemLdapConfigurationsById: {
    parameters: {
      path: {
        /** ldapConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LdapConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LdapConfiguration"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemLdapConfigurationsByIdInfo: {
    parameters: {
      path: {
        /** LdapConfigurationInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LdapConfigurationInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LdapConfigurationInfo"];
        };
      };
    };
  };
  getSystemLdapConfigurationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemLdapConfigurationsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ldapConfigurationInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LdapConfigurationInfo"][];
        };
      };
    };
  };
  getSystemLdapConfigurationsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postSystemLdapConfigurationsTestLink: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** server */
    requestBody: {
      content: {
        "application/json": components["schemas"]["LdapConfigurationTestLink"];
      };
    };
  };
  getSystemLinks: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Link */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Link"][];
        };
      };
    };
  };
  postSystemLinks: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Link */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Link"];
        };
      };
    };
    /** link */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Link"];
      };
    };
  };
  getSystemLinksById: {
    parameters: {
      path: {
        /** linkId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Link */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Link"];
        };
      };
    };
  };
  putSystemLinksById: {
    parameters: {
      path: {
        /** linkId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Link */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Link"];
        };
      };
    };
    /** link */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Link"];
      };
    };
  };
  deleteSystemLinksById: {
    parameters: {
      path: {
        /** linkId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemLinksById: {
    parameters: {
      path: {
        /** linkId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Link */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Link"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemLinksCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemLocations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Location */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Location"][];
        };
      };
    };
  };
  postSystemLocations: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Location */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Location"];
        };
      };
    };
    /** location */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Location"];
      };
    };
  };
  getSystemLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Location */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Location"];
        };
      };
    };
  };
  putSystemLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Location */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Location"];
        };
      };
    };
    /** location */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Location"];
      };
    };
  };
  deleteSystemLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Location */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Location"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemLocationsByIdUsages: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSystemLocationsByIdUsagesList: {
    parameters: {
      path: {
        /** locationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSystemLocationsByParentIdDepartments: {
    parameters: {
      path: {
        /** locationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of LocationDepartment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LocationDepartment"][];
        };
      };
    };
  };
  getSystemLocationsByParentIdDepartmentsById: {
    parameters: {
      path: {
        /** departmentId */
        id: number;
        /** locationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LocationDepartment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LocationDepartment"];
        };
      };
    };
  };
  getSystemLocationsByParentIdDepartmentsCount: {
    parameters: {
      path: {
        /** locationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemLocationsByParentIdWorkRoles: {
    parameters: {
      path: {
        /** locationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of LocationWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LocationWorkRole"][];
        };
      };
    };
  };
  getSystemLocationsByParentIdWorkRolesById: {
    parameters: {
      path: {
        /** workRoleId */
        id: number;
        /** locationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** LocationWorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["LocationWorkRole"];
        };
      };
    };
  };
  getSystemLocationsByParentIdWorkRolesCount: {
    parameters: {
      path: {
        /** locationId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemLocationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemManagementNetworkSecurities: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagementNetworkSecurity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementNetworkSecurity"][];
        };
      };
    };
  };
  postSystemManagementNetworkSecurities: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementNetworkSecurity */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementNetworkSecurity"];
        };
      };
    };
    /** managementNetworkSecurity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementNetworkSecurity"];
      };
    };
  };
  getSystemManagementNetworkSecuritiesById: {
    parameters: {
      path: {
        /** managementNetworkSecurityId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementNetworkSecurity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementNetworkSecurity"];
        };
      };
    };
  };
  putSystemManagementNetworkSecuritiesById: {
    parameters: {
      path: {
        /** managementNetworkSecurityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementNetworkSecurity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementNetworkSecurity"];
        };
      };
    };
    /** managementNetworkSecurity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagementNetworkSecurity"];
      };
    };
  };
  deleteSystemManagementNetworkSecuritiesById: {
    parameters: {
      path: {
        /** managementNetworkSecurityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemManagementNetworkSecuritiesById: {
    parameters: {
      path: {
        /** managementNetworkSecurityId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ManagementNetworkSecurity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagementNetworkSecurity"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemManagementNetworkSecuritiesByIdTestCredentials: {
    parameters: {
      path: {
        /** managementNetworkSecurityId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getSystemManagementNetworkSecuritiesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMarketplaceimportGetdefinitionById: {
    parameters: {
      path: {
        /** getdefinitionId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketplaceImport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketplaceImport"];
        };
      };
    };
  };
  postSystemMarketplaceimportImport: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MarketplaceImport */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MarketplaceImport"];
        };
      };
    };
    /** marketplaceImport */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MarketplaceImport"];
      };
    };
  };
  getSystemMembers: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Member */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Member"][];
        };
      };
    };
  };
  postSystemMembers: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Member */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Member"];
        };
      };
    };
    /** member */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Member"];
      };
    };
  };
  getSystemMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Member */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Member"];
        };
      };
    };
  };
  putSystemMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Member */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Member"];
        };
      };
    };
    /** member */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Member"];
      };
    };
  };
  patchSystemMembersById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Member */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Member"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSystemMembersByIdDeactivate: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberDeactivation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDeactivation"];
        };
      };
    };
    /** item */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberDeactivation"];
      };
    };
  };
  getSystemMembersByIdImage: {
    parameters: {
      path: {
        /** memberId */
        id: number;
        /** useDefaultFlag */
        useDefaultFlag: boolean;
        /** lastmodified */
        lastmodified: string;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContentType = application/octet-stream */
      200: unknown;
    };
  };
  postSystemMembersByIdLinkSsoUser: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** item */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberLinkSsoUser"];
      };
    };
  };
  postSystemMembersByIdSubmit: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** item */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberSsoToken"];
      };
    };
  };
  postSystemMembersByIdUnlinkSsoUser: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  deleteSystemMembersByIdUnusedTimeSheets: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getSystemMembersByIdUsages: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSystemMembersByIdUsagesList: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getSystemMembersmemberIdentifierregextypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
      path: {
        /** memberIdentifier */
        memberIdentifier: string;
      };
    };
    responses: {
      /** Member */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Member"];
        };
      };
    };
  };
  postSystemMembersByMemberIdentifierTokens: {
    parameters: {
      path: {
        /** memberIdentifier */
        memberIdentifier: string;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Token */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Token"];
        };
      };
    };
  };
  getSystemMembersByParentIdAccruals: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberAccrual */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberAccrual"][];
        };
      };
    };
  };
  postSystemMembersByParentIdAccruals: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberAccrual */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberAccrual"];
        };
      };
    };
    /** memberAccrual */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberAccrual"];
      };
    };
  };
  getSystemMembersByParentIdAccrualsById: {
    parameters: {
      path: {
        /** accrualId */
        id: number;
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberAccrual */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberAccrual"];
        };
      };
    };
  };
  putSystemMembersByParentIdAccrualsById: {
    parameters: {
      path: {
        /** accrualId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberAccrual */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberAccrual"];
        };
      };
    };
    /** memberAccrual */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberAccrual"];
      };
    };
  };
  deleteSystemMembersByParentIdAccrualsById: {
    parameters: {
      path: {
        /** accrualId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMembersByParentIdAccrualsById: {
    parameters: {
      path: {
        /** accrualId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberAccrual */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberAccrual"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMembersByParentIdAccrualsCount: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersByParentIdCertifications: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberCertification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"][];
        };
      };
    };
  };
  postSystemMembersByParentIdCertifications: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberCertification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"];
        };
      };
    };
    /** memberCertification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberCertification"];
      };
    };
  };
  getSystemMembersByParentIdCertificationsById: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberCertification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"];
        };
      };
    };
  };
  putSystemMembersByParentIdCertificationsById: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberCertification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"];
        };
      };
    };
    /** memberCertification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberCertification"];
      };
    };
  };
  deleteSystemMembersByParentIdCertificationsById: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMembersByParentIdCertificationsById: {
    parameters: {
      path: {
        /** certificationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberCertification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMembersByParentIdCertificationsCount: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersByParentIdDelegations: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberDelegation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"][];
        };
      };
    };
  };
  postSystemMembersByParentIdDelegations: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberDelegation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"];
        };
      };
    };
    /** memberDelegation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberDelegation"];
      };
    };
  };
  getSystemMembersByParentIdDelegationsById: {
    parameters: {
      path: {
        /** delegationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberDelegation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"];
        };
      };
    };
  };
  putSystemMembersByParentIdDelegationsById: {
    parameters: {
      path: {
        /** delegationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberDelegation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"];
        };
      };
    };
    /** memberDelegation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberDelegation"];
      };
    };
  };
  deleteSystemMembersByParentIdDelegationsById: {
    parameters: {
      path: {
        /** delegationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMembersByParentIdDelegationsById: {
    parameters: {
      path: {
        /** delegationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberDelegation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMembersByParentIdDelegationsCount: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersByParentIdManagedDeviceAccounts: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ManagedDeviceAccount */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ManagedDeviceAccount"][];
        };
      };
    };
  };
  putSystemMembersByParentIdManagedDeviceAccountsBulk: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BulkResult */
      207: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BulkResult"];
        };
      };
    };
    /** List of ManagedDeviceAccount */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManagedDeviceAccount"][];
      };
    };
  };
  deleteSystemMembersByParentIdManagedDeviceAccountsBulk: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** BulkResult */
      207: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["BulkResult"];
        };
      };
    };
    /** managedDeviceAccounts */
    requestBody: {
      content: {
        "application/json": components["schemas"]["IdCollection"];
      };
    };
  };
  getSystemMembersByParentIdMycertifications: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberCertification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"][];
        };
      };
    };
  };
  postSystemMembersByParentIdMycertifications: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberCertification */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"];
        };
      };
    };
    /** memberCertification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberCertification"];
      };
    };
  };
  getSystemMembersByParentIdMycertificationsById: {
    parameters: {
      path: {
        /** mycertificationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberCertification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"];
        };
      };
    };
  };
  putSystemMembersByParentIdMycertificationsById: {
    parameters: {
      path: {
        /** mycertificationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberCertification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"];
        };
      };
    };
    /** memberCertification */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberCertification"];
      };
    };
  };
  deleteSystemMembersByParentIdMycertificationsById: {
    parameters: {
      path: {
        /** mycertificationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMembersByParentIdMycertificationsById: {
    parameters: {
      path: {
        /** mycertificationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberCertification */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberCertification"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMembersByParentIdMycertificationsCount: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersByParentIdNotificationSettings: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberNotificationSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberNotificationSetting"][];
        };
      };
    };
  };
  postSystemMembersByParentIdNotificationSettings: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberNotificationSetting */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberNotificationSetting"];
        };
      };
    };
    /** memberNotificationSetting */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberNotificationSetting"];
      };
    };
  };
  getSystemMembersByParentIdNotificationSettingsById: {
    parameters: {
      path: {
        /** notificationSettingId */
        id: number;
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberNotificationSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberNotificationSetting"];
        };
      };
    };
  };
  putSystemMembersByParentIdNotificationSettingsById: {
    parameters: {
      path: {
        /** notificationSettingId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberNotificationSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberNotificationSetting"];
        };
      };
    };
    /** memberNotificationSetting */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberNotificationSetting"];
      };
    };
  };
  deleteSystemMembersByParentIdNotificationSettingsById: {
    parameters: {
      path: {
        /** notificationSettingId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMembersByParentIdNotificationSettingsById: {
    parameters: {
      path: {
        /** notificationSettingId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberNotificationSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberNotificationSetting"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMembersByParentIdNotificationSettingsCount: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersByParentIdPersonas: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberPersona */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberPersona"][];
        };
      };
    };
  };
  getSystemMembersByParentIdPersonasById: {
    parameters: {
      path: {
        /** personaId */
        id: number;
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberPersona */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberPersona"];
        };
      };
    };
  };
  getSystemMembersByParentIdPersonasCount: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersByParentIdSkills: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberSkill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"][];
        };
      };
    };
  };
  postSystemMembersByParentIdSkills: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberSkill */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"];
        };
      };
    };
    /** memberSkill */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberSkill"];
      };
    };
  };
  getSystemMembersByParentIdSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberSkill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"];
        };
      };
    };
  };
  putSystemMembersByParentIdSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberSkill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"];
        };
      };
    };
    /** memberSkill */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberSkill"];
      };
    };
  };
  deleteSystemMembersByParentIdSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMembersByParentIdSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberSkill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMembersByParentIdSkillsCount: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberType"][];
        };
      };
    };
  };
  postSystemMembersTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberType"];
        };
      };
    };
    /** type */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberType"];
      };
    };
  };
  getSystemMembersTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberType"];
        };
      };
    };
  };
  putSystemMembersTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberType"];
        };
      };
    };
    /** type */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberType"];
      };
    };
  };
  deleteSystemMembersTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMembersTypesById: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMembersTypesByIdInfo: {
    parameters: {
      path: {
        /** typeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberTypeInfo"];
        };
      };
    };
  };
  getSystemMembersTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberTypeInfo"][];
        };
      };
    };
  };
  getSystemMembersTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMembersWithSso: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Member */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Member"][];
        };
      };
    };
  };
  getSystemMenuentries: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MenuEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MenuEntry"][];
        };
      };
    };
  };
  postSystemMenuentries: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MenuEntry */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MenuEntry"];
        };
      };
    };
    /** menuEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MenuEntry"];
      };
    };
  };
  getSystemMenuentriesById: {
    parameters: {
      path: {
        /** menuentryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MenuEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MenuEntry"];
        };
      };
    };
  };
  putSystemMenuentriesById: {
    parameters: {
      path: {
        /** menuentryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MenuEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MenuEntry"];
        };
      };
    };
    /** menuEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MenuEntry"];
      };
    };
  };
  deleteSystemMenuentriesById: {
    parameters: {
      path: {
        /** menuentryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMenuentriesById: {
    parameters: {
      path: {
        /** menuentryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MenuEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MenuEntry"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMenuentriesByIdImage: {
    parameters: {
      path: {
        /** menuentryId */
        id: number;
        /** lastmodified */
        lastmodified: string;
        /** largeFlag */
        largeFlag: boolean;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ContentType = application/octet-stream */
      200: unknown;
    };
  };
  postSystemMenuentriesByIdImage: {
    parameters: {
      path: {
        /** menuentryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getSystemMenuEntriesByParentIdLocations: {
    parameters: {
      path: {
        /** menuEntryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MenuEntryLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MenuEntryLocation"][];
        };
      };
    };
  };
  postSystemMenuEntriesByParentIdLocations: {
    parameters: {
      path: {
        /** menuEntryId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MenuEntryLocation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MenuEntryLocation"];
        };
      };
    };
    /** menuEntryLocation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MenuEntryLocation"];
      };
    };
  };
  getSystemMenuEntriesByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** menuEntryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MenuEntryLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MenuEntryLocation"];
        };
      };
    };
  };
  deleteSystemMenuEntriesByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** menuEntryId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getSystemMenuEntriesByParentIdLocationsCount: {
    parameters: {
      path: {
        /** menuEntryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMenuentriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMyAccountById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MyAccount */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MyAccount"];
        };
      };
    };
  };
  putSystemMyAccountById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MyAccount */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MyAccount"];
        };
      };
    };
    /** myAccount */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MyAccount"];
      };
    };
  };
  patchSystemMyAccountById: {
    parameters: {
      path: {
        /** memberId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MyAccount */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MyAccount"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMyAccountByParentIdDelegations: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberDelegation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"][];
        };
      };
    };
  };
  postSystemMyAccountByParentIdDelegations: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberDelegation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"];
        };
      };
    };
    /** memberDelegation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberDelegation"];
      };
    };
  };
  getSystemMyAccountByParentIdDelegationsById: {
    parameters: {
      path: {
        /** delegationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberDelegation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"];
        };
      };
    };
  };
  putSystemMyAccountByParentIdDelegationsById: {
    parameters: {
      path: {
        /** delegationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberDelegation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"];
        };
      };
    };
    /** memberDelegation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberDelegation"];
      };
    };
  };
  deleteSystemMyAccountByParentIdDelegationsById: {
    parameters: {
      path: {
        /** delegationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMyAccountByParentIdDelegationsById: {
    parameters: {
      path: {
        /** delegationId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberDelegation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberDelegation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMyAccountByParentIdDelegationsCount: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMyAccountByParentIdSkills: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MemberSkill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"][];
        };
      };
    };
  };
  postSystemMyAccountByParentIdSkills: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberSkill */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"];
        };
      };
    };
    /** memberSkill */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberSkill"];
      };
    };
  };
  getSystemMyAccountByParentIdSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberSkill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"];
        };
      };
    };
  };
  putSystemMyAccountByParentIdSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberSkill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"];
        };
      };
    };
    /** memberSkill */
    requestBody: {
      content: {
        "application/json": components["schemas"]["MemberSkill"];
      };
    };
  };
  deleteSystemMyAccountByParentIdSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemMyAccountByParentIdSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
        /** memberId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MemberSkill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MemberSkill"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMyAccountByParentIdSkillsCount: {
    parameters: {
      path: {
        /** memberId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMyCompanyCorporateStructure: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CorporateStructure */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CorporateStructure"][];
        };
      };
    };
  };
  getSystemMyCompanyCorporateStructureById: {
    parameters: {
      path: {
        /** corporateStructureId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CorporateStructure */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CorporateStructure"];
        };
      };
    };
  };
  putSystemMyCompanyCorporateStructureById: {
    parameters: {
      path: {
        /** corporateStructureId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CorporateStructure */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CorporateStructure"];
        };
      };
    };
    /** corporateStructure */
    requestBody: {
      content: {
        "application/json": components["schemas"]["CorporateStructure"];
      };
    };
  };
  patchSystemMyCompanyCorporateStructureById: {
    parameters: {
      path: {
        /** corporateStructureId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CorporateStructure */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CorporateStructure"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMyCompanyCorporateStructureByIdInfo: {
    parameters: {
      path: {
        /** CorporateStructureInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CorporateStructureInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CorporateStructureInfo"];
        };
      };
    };
  };
  getSystemMyCompanyCorporateStructureCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMyCompanyCorporateStructureInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of corporateStructureInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CorporateStructureInfo"][];
        };
      };
    };
  };
  getSystemMyCompanyCorporateStructureInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMyCompanyCorporateStructureLevels: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of CorporateStructureLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CorporateStructureLevel"][];
        };
      };
    };
  };
  getSystemMyCompanyCorporateStructureLevelsById: {
    parameters: {
      path: {
        /** corporateStructureLevelId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CorporateStructureLevel */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CorporateStructureLevel"];
        };
      };
    };
  };
  getSystemMyCompanyCorporateStructureLevelsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMyCompanyCrm: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Crm */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Crm"][];
        };
      };
    };
  };
  getSystemMyCompanyCrmById: {
    parameters: {
      path: {
        /** crmId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Crm */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Crm"];
        };
      };
    };
  };
  putSystemMyCompanyCrmById: {
    parameters: {
      path: {
        /** crmId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Crm */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Crm"];
        };
      };
    };
    /** crm */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Crm"];
      };
    };
  };
  patchSystemMyCompanyCrmById: {
    parameters: {
      path: {
        /** crmId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Crm */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Crm"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMyCompanyCrmByIdInfo: {
    parameters: {
      path: {
        /** CrmInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** CrmInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CrmInfo"];
        };
      };
    };
  };
  getSystemMyCompanyCrmCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMyCompanyCrmInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of crmInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["CrmInfo"][];
        };
      };
    };
  };
  getSystemMyCompanyCrmInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMycompanyDocuments: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of DocumentSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentSetup"][];
        };
      };
    };
  };
  getSystemMycompanyDocumentsById: {
    parameters: {
      path: {
        /** documentId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DocumentSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentSetup"];
        };
      };
    };
  };
  putSystemMycompanyDocumentsById: {
    parameters: {
      path: {
        /** documentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DocumentSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentSetup"];
        };
      };
    };
    /** document */
    requestBody: {
      content: {
        "application/json": components["schemas"]["DocumentSetup"];
      };
    };
  };
  patchSystemMycompanyDocumentsById: {
    parameters: {
      path: {
        /** documentId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** DocumentSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["DocumentSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMycompanyInfoServices: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ServiceInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceInfo"][];
        };
      };
    };
  };
  getSystemMycompanyInfoServicesById: {
    parameters: {
      path: {
        /** serviceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ServiceInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ServiceInfo"];
        };
      };
    };
  };
  getSystemMyCompanyOther: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Other */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Other"][];
        };
      };
    };
  };
  getSystemMyCompanyOtherById: {
    parameters: {
      path: {
        /** otherId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Other */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Other"];
        };
      };
    };
  };
  putSystemMyCompanyOtherById: {
    parameters: {
      path: {
        /** otherId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Other */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Other"];
        };
      };
    };
    /** other */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Other"];
      };
    };
  };
  patchSystemMyCompanyOtherById: {
    parameters: {
      path: {
        /** otherId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Other */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Other"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMyCompanyOtherCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMycompanyReportingServices: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ReportingService */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportingService"][];
        };
      };
    };
  };
  getSystemMycompanyReportingServicesById: {
    parameters: {
      path: {
        /** reportingServiceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportingService */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportingService"];
        };
      };
    };
  };
  putSystemMycompanyReportingServicesById: {
    parameters: {
      path: {
        /** reportingServiceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportingService */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportingService"];
        };
      };
    };
    /** service */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReportingService"];
      };
    };
  };
  patchSystemMycompanyReportingServicesById: {
    parameters: {
      path: {
        /** reportingServiceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportingService */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportingService"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSystemMycompanyReportingServicesByIdTestConnection: {
    parameters: {
      path: {
        /** reportingServiceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getSystemMycompanyServices: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MyCompanyService */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Service"][];
        };
      };
    };
  };
  getSystemMycompanyServicesById: {
    parameters: {
      path: {
        /** serviceId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MyCompanyService */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Service"];
        };
      };
    };
  };
  putSystemMycompanyServicesById: {
    parameters: {
      path: {
        /** serviceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MyCompanyService */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Service"];
        };
      };
    };
    /** service */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Service"];
      };
    };
  };
  patchSystemMycompanyServicesById: {
    parameters: {
      path: {
        /** serviceId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MyCompanyService */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Service"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMyCompanyTimeExpense: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeExpense */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeExpense"][];
        };
      };
    };
  };
  getSystemMyCompanyTimeExpenseById: {
    parameters: {
      path: {
        /** timeExpenseId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeExpense */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeExpense"];
        };
      };
    };
  };
  putSystemMyCompanyTimeExpenseById: {
    parameters: {
      path: {
        /** timeExpenseId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeExpense */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeExpense"];
        };
      };
    };
    /** timeExpense */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeExpense"];
      };
    };
  };
  patchSystemMyCompanyTimeExpenseById: {
    parameters: {
      path: {
        /** timeExpenseId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeExpense */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeExpense"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemMyCompanyTimeExpenseCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemMyMembers: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MyMember */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MyMember"];
        };
      };
    };
  };
  getSystemMyMembersInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** MyMemberInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MyMemberInfo"];
        };
      };
    };
  };
  getSystemMySecurity: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of MySecurity */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MySecurity"][];
        };
      };
    };
  };
  getSystemMySecurityCustomizeItems: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of mySecurityCustomizeItemses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["MySecurityCustomizeItem"][];
        };
      };
    };
  };
  getSystemNotificationRecipients: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of NotificationRecipient */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["NotificationRecipient"][];
        };
      };
    };
  };
  getSystemNotificationRecipientsById: {
    parameters: {
      path: {
        /** notificationRecipientId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** NotificationRecipient */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["NotificationRecipient"];
        };
      };
    };
  };
  getSystemNotificationRecipientsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemOffice365EmailSetups: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Office365EmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Office365EmailSetup"][];
        };
      };
    };
  };
  postSystemOffice365EmailSetups: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Office365EmailSetup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Office365EmailSetup"];
        };
      };
    };
    /** entity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Office365EmailSetup"];
      };
    };
  };
  getSystemOffice365EmailSetupsById: {
    parameters: {
      path: {
        /** emailSetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Office365EmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Office365EmailSetup"];
        };
      };
    };
  };
  putSystemOffice365EmailSetupsById: {
    parameters: {
      path: {
        /** emailSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Office365EmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Office365EmailSetup"];
        };
      };
    };
    /** entity */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Office365EmailSetup"];
      };
    };
  };
  deleteSystemOffice365EmailSetupsById: {
    parameters: {
      path: {
        /** emailSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemOffice365EmailSetupsById: {
    parameters: {
      path: {
        /** emailSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Office365EmailSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Office365EmailSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSystemOffice365EmailSetupsByIdAuthorize: {
    parameters: {
      path: {
        /** emailSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  postSystemOffice365EmailSetupsByIdTestConnection: {
    parameters: {
      path: {
        /** emailSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getSystemOffice365EmailSetupsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemOsgradeweights: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of OsGradeWeight */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OsGradeWeight"][];
        };
      };
    };
  };
  getSystemOsgradeweightsById: {
    parameters: {
      path: {
        /** osgradeweightId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OsGradeWeight */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OsGradeWeight"];
        };
      };
    };
  };
  putSystemOsgradeweightsById: {
    parameters: {
      path: {
        /** osgradeweightId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OsGradeWeight */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OsGradeWeight"];
        };
      };
    };
    /** osGradeWeight */
    requestBody: {
      content: {
        "application/json": components["schemas"]["OsGradeWeight"];
      };
    };
  };
  patchSystemOsgradeweightsById: {
    parameters: {
      path: {
        /** osgradeweightId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** OsGradeWeight */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["OsGradeWeight"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemOsgradeweightsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemParsingTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ParsingType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ParsingType"][];
        };
      };
    };
  };
  getSystemParsingTypesById: {
    parameters: {
      path: {
        /** parsingTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ParsingType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ParsingType"];
        };
      };
    };
  };
  getSystemParsingTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemParsingVariables: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ParsingVariable */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ParsingVariable"][];
        };
      };
    };
  };
  getSystemParsingVariablesById: {
    parameters: {
      path: {
        /** parsingVariableId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ParsingVariable */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ParsingVariable"];
        };
      };
    };
  };
  getSystemParsingVariablesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemPortalReports: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of PortalReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalReport"][];
        };
      };
    };
  };
  postSystemPortalReports: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalReport */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalReport"];
        };
      };
    };
    /** portalReport */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalReport"];
      };
    };
  };
  getSystemPortalReportsById: {
    parameters: {
      path: {
        /** portalReportId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalReport"];
        };
      };
    };
  };
  putSystemPortalReportsById: {
    parameters: {
      path: {
        /** portalReportId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalReport"];
        };
      };
    };
    /** portalReport */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PortalReport"];
      };
    };
  };
  deleteSystemPortalReportsById: {
    parameters: {
      path: {
        /** portalReportId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemPortalReportsById: {
    parameters: {
      path: {
        /** portalReportId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** PortalReport */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["PortalReport"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemPortalReportsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemQuoteLinkSetup: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of QuoteLink */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["QuoteLink"][];
        };
      };
    };
  };
  postSystemQuoteLinkSetup: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** QuoteLink */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["QuoteLink"];
        };
      };
    };
    /** quoteLink */
    requestBody: {
      content: {
        "application/json": components["schemas"]["QuoteLink"];
      };
    };
  };
  getSystemQuoteLinkSetupById: {
    parameters: {
      path: {
        /** quoteLinkSetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** QuoteLink */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["QuoteLink"];
        };
      };
    };
  };
  putSystemQuoteLinkSetupById: {
    parameters: {
      path: {
        /** quoteLinkSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** QuoteLink */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["QuoteLink"];
        };
      };
    };
    /** quoteLink */
    requestBody: {
      content: {
        "application/json": components["schemas"]["QuoteLink"];
      };
    };
  };
  deleteSystemQuoteLinkSetupById: {
    parameters: {
      path: {
        /** quoteLinkSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemQuoteLinkSetupById: {
    parameters: {
      path: {
        /** quoteLinkSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** QuoteLink */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["QuoteLink"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemQuoteLinkSetupCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemQuoteLinkSetupTestConnection: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
      path: {
        /** url */
        url: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getSystemReportCards: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ReportCard */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCard"][];
        };
      };
    };
  };
  postSystemReportCards: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportCard */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCard"];
        };
      };
    };
    /** reportCard */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReportCard"];
      };
    };
  };
  getSystemReportCardsById: {
    parameters: {
      path: {
        /** reportCardId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportCard */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCard"];
        };
      };
    };
  };
  putSystemReportCardsById: {
    parameters: {
      path: {
        /** reportCardId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportCard */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCard"];
        };
      };
    };
    /** reportCard */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReportCard"];
      };
    };
  };
  deleteSystemReportCardsById: {
    parameters: {
      path: {
        /** reportCardId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemReportCardsById: {
    parameters: {
      path: {
        /** reportCardId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportCard */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCard"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemReportCardsByIdInfo: {
    parameters: {
      path: {
        /** reportCardId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportCardInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCardInfo"];
        };
      };
    };
  };
  getSystemReportCardsByParentIdDetails: {
    parameters: {
      path: {
        /** reportCardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ReportCardDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCardDetail"][];
        };
      };
    };
  };
  postSystemReportCardsByParentIdDetails: {
    parameters: {
      path: {
        /** reportCardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportCardDetail */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCardDetail"];
        };
      };
    };
    /** reportCardDetail */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReportCardDetail"];
      };
    };
  };
  getSystemReportCardsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** reportCardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportCardDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCardDetail"];
        };
      };
    };
  };
  putSystemReportCardsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** reportCardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportCardDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCardDetail"];
        };
      };
    };
    /** reportCardDetail */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReportCardDetail"];
      };
    };
  };
  deleteSystemReportCardsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** reportCardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemReportCardsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** reportCardId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportCardDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCardDetail"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemReportCardsByParentIdDetailsCount: {
    parameters: {
      path: {
        /** reportCardId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemReportCardsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemReportCardsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ReportCardInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportCardInfo"][];
        };
      };
    };
  };
  getSystemReportCardsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemReports: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Report */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Report"][];
        };
      };
    };
  };
  getSystemReportsByReportName: {
    parameters: {
      path: {
        /** reportName */
        reportName: string;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ReportDataResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ReportDataResponse"];
        };
      };
    };
  };
  getSystemReportsByReportNameColumns: {
    parameters: {
      path: {
        /** reportName */
        reportName: string;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of columns */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": {
            [key: string]: components["schemas"]["ReportColumnDefinition"];
          }[];
        };
      };
    };
  };
  getSystemReportsByReportNameCount: {
    parameters: {
      path: {
        /** reportName */
        reportName: string;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSecurityroles: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SecurityRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SecurityRole"][];
        };
      };
    };
  };
  postSystemSecurityroles: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SecurityRole */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SecurityRole"];
        };
      };
    };
    /** securityRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SecurityRole"];
      };
    };
  };
  getSystemSecurityrolesById: {
    parameters: {
      path: {
        /** securityroleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SecurityRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SecurityRole"];
        };
      };
    };
  };
  deleteSystemSecurityrolesById: {
    parameters: {
      path: {
        /** securityroleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  getSystemSecurityrolesByIdInfo: {
    parameters: {
      path: {
        /** securityroleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SecurityRoleInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SecurityRoleInfo"];
        };
      };
    };
  };
  getSystemSecurityRolesByParentIdSettings: {
    parameters: {
      path: {
        /** securityRoleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SecurityRoleSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SecurityRoleSetting"][];
        };
      };
    };
  };
  getSystemSecurityRolesByParentIdSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
        /** securityRoleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SecurityRoleSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SecurityRoleSetting"];
        };
      };
    };
  };
  getSystemSecurityRolesByParentIdSettingsCount: {
    parameters: {
      path: {
        /** securityRoleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSecurityrolesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSecurityrolesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SecurityRoleInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SecurityRoleInfo"][];
        };
      };
    };
  };
  getSystemSecurityrolesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSettings: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SystemSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SystemSetting"][];
        };
      };
    };
  };
  getSystemSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SystemSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SystemSetting"];
        };
      };
    };
  };
  putSystemSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SystemSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SystemSetting"];
        };
      };
    };
    /** systemSetting */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SystemSetting"];
      };
    };
  };
  patchSystemSettingsById: {
    parameters: {
      path: {
        /** settingId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SystemSetting */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SystemSetting"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemSettingsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSetupScreens: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SetupScreen */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SetupScreen"][];
        };
      };
    };
  };
  getSystemSetupScreensById: {
    parameters: {
      path: {
        /** setupScreenId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SetupScreen */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SetupScreen"];
        };
      };
    };
  };
  getSystemSetupScreensCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSkillCategories: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SkillCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SkillCategory"][];
        };
      };
    };
  };
  postSystemSkillCategories: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SkillCategory */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SkillCategory"];
        };
      };
    };
    /** skillCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SkillCategory"];
      };
    };
  };
  getSystemSkillCategoriesById: {
    parameters: {
      path: {
        /** skillCategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SkillCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SkillCategory"];
        };
      };
    };
  };
  putSystemSkillCategoriesById: {
    parameters: {
      path: {
        /** skillCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SkillCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SkillCategory"];
        };
      };
    };
    /** skillCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SkillCategory"];
      };
    };
  };
  deleteSystemSkillCategoriesById: {
    parameters: {
      path: {
        /** skillCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemSkillCategoriesById: {
    parameters: {
      path: {
        /** skillCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SkillCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SkillCategory"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemSkillCategoriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSkills: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Skill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Skill"][];
        };
      };
    };
  };
  postSystemSkills: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Skill */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Skill"];
        };
      };
    };
    /** skill */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Skill"];
      };
    };
  };
  getSystemSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Skill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Skill"];
        };
      };
    };
  };
  putSystemSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Skill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Skill"];
        };
      };
    };
    /** skill */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Skill"];
      };
    };
  };
  deleteSystemSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemSkillsById: {
    parameters: {
      path: {
        /** skillId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Skill */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Skill"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemSkillsByIdInfo: {
    parameters: {
      path: {
        /** SkillInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SkillInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SkillInfo"];
        };
      };
    };
  };
  getSystemSkillsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSkillsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of skillInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SkillInfo"][];
        };
      };
    };
  };
  getSystemSkillsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSsoConfigurations: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SsoConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SsoConfiguration"][];
        };
      };
    };
  };
  postSystemSsoConfigurations: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SsoConfiguration */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SsoConfiguration"];
        };
      };
    };
    /** ssoConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SsoConfiguration"];
      };
    };
  };
  getSystemSsoConfigurationsById: {
    parameters: {
      path: {
        /** ssoConfigurationId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SsoConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SsoConfiguration"];
        };
      };
    };
  };
  putSystemSsoConfigurationsById: {
    parameters: {
      path: {
        /** ssoConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SsoConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SsoConfiguration"];
        };
      };
    };
    /** ssoConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SsoConfiguration"];
      };
    };
  };
  deleteSystemSsoConfigurationsById: {
    parameters: {
      path: {
        /** ssoConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemSsoConfigurationsById: {
    parameters: {
      path: {
        /** ssoConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SsoConfiguration */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SsoConfiguration"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSystemSsoConfigurationsByIdRegistertoken: {
    parameters: {
      path: {
        /** ssoConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SsoConfiguration */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SsoConfiguration"];
        };
      };
    };
    /** ssoConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SsoConfiguration"];
      };
    };
  };
  postSystemSsoConfigurationsByIdSubmitmembers: {
    parameters: {
      path: {
        /** ssoConfigurationId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SsoConfiguration */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SsoConfiguration"];
        };
      };
    };
    /** ssoConfiguration */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SsoConfiguration"];
      };
    };
  };
  getSystemSsoConfigurationsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSsoUsers: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SsoUser */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SsoUser"][];
        };
      };
    };
  };
  getSystemSsoUsersByExternalId: {
    parameters: {
      path: {
        /** externalId */
        externalId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SsoUser */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SsoUser"];
        };
      };
    };
  };
  getSystemSsoUsersCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemStandardNotes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of StandardNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StandardNote"][];
        };
      };
    };
  };
  postSystemStandardNotes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** StandardNote */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StandardNote"];
        };
      };
    };
    /** standardNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["StandardNote"];
      };
    };
  };
  getSystemStandardNotesById: {
    parameters: {
      path: {
        /** standardNoteId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** StandardNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StandardNote"];
        };
      };
    };
  };
  putSystemStandardNotesById: {
    parameters: {
      path: {
        /** standardNoteId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** StandardNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StandardNote"];
        };
      };
    };
    /** standardNote */
    requestBody: {
      content: {
        "application/json": components["schemas"]["StandardNote"];
      };
    };
  };
  deleteSystemStandardNotesById: {
    parameters: {
      path: {
        /** standardNoteId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemStandardNotesById: {
    parameters: {
      path: {
        /** standardNoteId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** StandardNote */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["StandardNote"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemStandardNotesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSurveys: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Survey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Survey"][];
        };
      };
    };
  };
  postSystemSurveys: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Survey */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Survey"];
        };
      };
    };
    /** survey */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Survey"];
      };
    };
  };
  getSystemSurveysByGrandparentIdQuestionsByParentIdValues: {
    parameters: {
      path: {
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SurveyQuestionValue */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestionValue"][];
        };
      };
    };
  };
  postSystemSurveysByGrandparentIdQuestionsByParentIdValues: {
    parameters: {
      path: {
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyQuestionValue */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestionValue"];
        };
      };
    };
    /** surveyQuestionValue */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SurveyQuestionValue"];
      };
    };
  };
  getSystemSurveysByGrandparentIdQuestionsByParentIdValuesById: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyQuestionValue */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestionValue"];
        };
      };
    };
  };
  putSystemSurveysByGrandparentIdQuestionsByParentIdValuesById: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyQuestionValue */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestionValue"];
        };
      };
    };
    /** surveyQuestionValue */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SurveyQuestionValue"];
      };
    };
  };
  deleteSystemSurveysByGrandparentIdQuestionsByParentIdValuesById: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemSurveysByGrandparentIdQuestionsByParentIdValuesById: {
    parameters: {
      path: {
        /** valueId */
        id: number;
        /** questionId */
        parentId: number;
        /** surveyId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyQuestionValue */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestionValue"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemSurveysById: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Survey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Survey"];
        };
      };
    };
  };
  putSystemSurveysById: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Survey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Survey"];
        };
      };
    };
    /** survey */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Survey"];
      };
    };
  };
  deleteSystemSurveysById: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemSurveysById: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Survey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Survey"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSystemSurveysByIdCopy: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Survey */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Survey"];
        };
      };
    };
  };
  getSystemSurveysByIdInfo: {
    parameters: {
      path: {
        /** surveyId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyInfo"];
        };
      };
    };
  };
  getSystemSurveysByParentIdQuestions: {
    parameters: {
      path: {
        /** surveyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SurveyQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestion"][];
        };
      };
    };
  };
  postSystemSurveysByParentIdQuestions: {
    parameters: {
      path: {
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyQuestion */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestion"];
        };
      };
    };
    /** surveyQuestion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SurveyQuestion"];
      };
    };
  };
  getSystemSurveysByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestion"];
        };
      };
    };
  };
  putSystemSurveysByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestion"];
        };
      };
    };
    /** surveyQuestion */
    requestBody: {
      content: {
        "application/json": components["schemas"]["SurveyQuestion"];
      };
    };
  };
  deleteSystemSurveysByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemSurveysByParentIdQuestionsById: {
    parameters: {
      path: {
        /** questionId */
        id: number;
        /** surveyId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SurveyQuestion */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyQuestion"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemSurveysByParentIdQuestionsCount: {
    parameters: {
      path: {
        /** surveyId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSurveysCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemSurveysInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of SurveyInfos */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SurveyInfo"][];
        };
      };
    };
  };
  getSystemSurveysInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemTimeZoneSetups: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeZoneSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeZoneSetup"][];
        };
      };
    };
  };
  postSystemTimeZoneSetups: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeZoneSetup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeZoneSetup"];
        };
      };
    };
    /** timeZoneSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeZoneSetup"];
      };
    };
  };
  getSystemTimeZoneSetupsById: {
    parameters: {
      path: {
        /** timeZoneSetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeZoneSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeZoneSetup"];
        };
      };
    };
  };
  putSystemTimeZoneSetupsById: {
    parameters: {
      path: {
        /** timeZoneSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeZoneSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeZoneSetup"];
        };
      };
    };
    /** timeZoneSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeZoneSetup"];
      };
    };
  };
  deleteSystemTimeZoneSetupsById: {
    parameters: {
      path: {
        /** timeZoneSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemTimeZoneSetupsById: {
    parameters: {
      path: {
        /** timeZoneSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeZoneSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeZoneSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemTimeZoneSetupsByIdInfo: {
    parameters: {
      path: {
        /** TimeZoneSetupInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeZoneSetupInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeZoneSetupInfo"];
        };
      };
    };
  };
  getSystemTimeZoneSetupsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemTimeZoneSetupsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of timeZoneSetupInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeZoneSetupInfo"][];
        };
      };
    };
  };
  getSystemTimeZoneSetupsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemTodayPageCategories: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TodayPageCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TodayPageCategory"][];
        };
      };
    };
  };
  postSystemTodayPageCategories: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TodayPageCategory */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TodayPageCategory"];
        };
      };
    };
    /** todayPageCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TodayPageCategory"];
      };
    };
  };
  getSystemTodayPageCategoriesById: {
    parameters: {
      path: {
        /** todayPageCategoryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TodayPageCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TodayPageCategory"];
        };
      };
    };
  };
  putSystemTodayPageCategoriesById: {
    parameters: {
      path: {
        /** todayPageCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TodayPageCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TodayPageCategory"];
        };
      };
    };
    /** todayPageCategory */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TodayPageCategory"];
      };
    };
  };
  deleteSystemTodayPageCategoriesById: {
    parameters: {
      path: {
        /** todayPageCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemTodayPageCategoriesById: {
    parameters: {
      path: {
        /** todayPageCategoryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TodayPageCategory */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TodayPageCategory"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemTodayPageCategoriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemUserDefinedFields: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of UserDefinedField */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UserDefinedField"][];
        };
      };
    };
  };
  postSystemUserDefinedFields: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UserDefinedField */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UserDefinedField"];
        };
      };
    };
    /** userDefinedField */
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserDefinedField"];
      };
    };
  };
  getSystemUserDefinedFieldsById: {
    parameters: {
      path: {
        /** userDefinedFieldId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UserDefinedField */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UserDefinedField"];
        };
      };
    };
  };
  putSystemUserDefinedFieldsById: {
    parameters: {
      path: {
        /** userDefinedFieldId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UserDefinedField */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UserDefinedField"];
        };
      };
    };
    /** userDefinedField */
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserDefinedField"];
      };
    };
  };
  deleteSystemUserDefinedFieldsById: {
    parameters: {
      path: {
        /** userDefinedFieldId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemUserDefinedFieldsById: {
    parameters: {
      path: {
        /** userDefinedFieldId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UserDefinedField */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UserDefinedField"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemUserDefinedFieldsByIdInfo: {
    parameters: {
      path: {
        /** UserDefinedFieldInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** UserDefinedFieldInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UserDefinedFieldInfo"];
        };
      };
    };
  };
  getSystemUserDefinedFieldsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemUserDefinedFieldsInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of userDefinedFieldInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["UserDefinedFieldInfo"][];
        };
      };
    };
  };
  getSystemUserDefinedFieldsInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowActionsByParentIdAutomateParameters: {
    parameters: {
      path: {
        /** workflowActionId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowActionAutomateParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowActionAutomateParameter"][];
        };
      };
    };
  };
  postSystemWorkflowActionsByParentIdAutomateParameters: {
    parameters: {
      path: {
        /** workflowActionId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowActionAutomateParameter */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowActionAutomateParameter"];
        };
      };
    };
    /** workflowActionAutomateParameter */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkflowActionAutomateParameter"];
      };
    };
  };
  getSystemWorkflowActionsByParentIdAutomateParametersById: {
    parameters: {
      path: {
        /** automateParameterId */
        id: number;
        /** workflowActionId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowActionAutomateParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowActionAutomateParameter"];
        };
      };
    };
  };
  putSystemWorkflowActionsByParentIdAutomateParametersById: {
    parameters: {
      path: {
        /** automateParameterId */
        id: number;
        /** workflowActionId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowActionAutomateParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowActionAutomateParameter"];
        };
      };
    };
    /** workflowActionAutomateParameter */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkflowActionAutomateParameter"];
      };
    };
  };
  deleteSystemWorkflowActionsByParentIdAutomateParametersById: {
    parameters: {
      path: {
        /** automateParameterId */
        id: number;
        /** workflowActionId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemWorkflowActionsByParentIdAutomateParametersById: {
    parameters: {
      path: {
        /** automateParameterId */
        id: number;
        /** workflowActionId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowActionAutomateParameter */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowActionAutomateParameter"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemWorkflowActionsByParentIdAutomateParametersCount: {
    parameters: {
      path: {
        /** workflowActionId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflows: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Workflow */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Workflow"][];
        };
      };
    };
  };
  postSystemWorkflows: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Workflow */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Workflow"];
        };
      };
    };
    /** workflow */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Workflow"];
      };
    };
  };
  getSystemWorkflowsByGrandparentIdEventsByParentIdActions: {
    parameters: {
      path: {
        /** eventId */
        parentId: number;
        /** workflowId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowAction"][];
        };
      };
    };
  };
  postSystemWorkflowsByGrandparentIdEventsByParentIdActions: {
    parameters: {
      path: {
        /** eventId */
        parentId: number;
        /** workflowId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowAction */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowAction"];
        };
      };
    };
    /** workflowAction */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkflowAction"];
      };
    };
  };
  getSystemWorkflowsByGrandparentIdEventsByParentIdActionsById: {
    parameters: {
      path: {
        /** actionId */
        id: number;
        /** eventId */
        parentId: number;
        /** workflowId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowAction"];
        };
      };
    };
  };
  putSystemWorkflowsByGrandparentIdEventsByParentIdActionsById: {
    parameters: {
      path: {
        /** actionId */
        id: number;
        /** eventId */
        parentId: number;
        /** workflowId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowAction"];
        };
      };
    };
    /** workflowAction */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkflowAction"];
      };
    };
  };
  deleteSystemWorkflowsByGrandparentIdEventsByParentIdActionsById: {
    parameters: {
      path: {
        /** actionId */
        id: number;
        /** eventId */
        parentId: number;
        /** workflowId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemWorkflowsByGrandparentIdEventsByParentIdActionsById: {
    parameters: {
      path: {
        /** actionId */
        id: number;
        /** eventId */
        parentId: number;
        /** workflowId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowAction */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowAction"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getSystemWorkflowsByGrandparentIdEventsByParentIdActionsCount: {
    parameters: {
      path: {
        /** eventId */
        parentId: number;
        /** workflowId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowsByGrandparentIdTriggersByParentIdOptions: {
    parameters: {
      path: {
        /** triggerId */
        parentId: number;
        /** workflowId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowTriggerOption */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowTriggerOption"][];
        };
      };
    };
  };
  getSystemWorkflowsByGrandparentIdTriggersByParentIdOptionsCount: {
    parameters: {
      path: {
        /** triggerId */
        parentId: number;
        /** workflowId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowsById: {
    parameters: {
      path: {
        /** workflowId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Workflow */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Workflow"];
        };
      };
    };
  };
  putSystemWorkflowsById: {
    parameters: {
      path: {
        /** workflowId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Workflow */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Workflow"];
        };
      };
    };
    /** workflow */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Workflow"];
      };
    };
  };
  deleteSystemWorkflowsById: {
    parameters: {
      path: {
        /** workflowId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemWorkflowsById: {
    parameters: {
      path: {
        /** workflowId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Workflow */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Workflow"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSystemWorkflowsByIdCopy: {
    parameters: {
      path: {
        /** workflowId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Workflow */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Workflow"];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdAttachments: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowAttachment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowAttachment"][];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdAttachmentsById: {
    parameters: {
      path: {
        /** attachmentId */
        id: number;
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowAttachment */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowAttachment"];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdAttachmentsCount: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdEvents: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowEvent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowEvent"][];
        };
      };
    };
  };
  postSystemWorkflowsByParentIdEvents: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowEvent */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowEvent"];
        };
      };
    };
    /** workflowEvent */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkflowEvent"];
      };
    };
  };
  getSystemWorkflowsByParentIdEventsById: {
    parameters: {
      path: {
        /** eventId */
        id: number;
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowEvent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowEvent"];
        };
      };
    };
  };
  putSystemWorkflowsByParentIdEventsById: {
    parameters: {
      path: {
        /** eventId */
        id: number;
        /** workflowId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowEvent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowEvent"];
        };
      };
    };
    /** workflowEvent */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkflowEvent"];
      };
    };
  };
  deleteSystemWorkflowsByParentIdEventsById: {
    parameters: {
      path: {
        /** eventId */
        id: number;
        /** workflowId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchSystemWorkflowsByParentIdEventsById: {
    parameters: {
      path: {
        /** eventId */
        id: number;
        /** workflowId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowEvent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowEvent"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  postSystemWorkflowsByParentIdEventsByIdCopy: {
    parameters: {
      path: {
        /** eventId */
        id: number;
        /** workflowId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowEvent */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowEvent"];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdEventsByIdTest: {
    parameters: {
      path: {
        /** eventId */
        id: number;
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of test results */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": {
            [key: string]: { [key: string]: unknown };
          }[];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdEventsCount: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdNotifyTypes: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowNotifyType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowNotifyType"][];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdNotifyTypesById: {
    parameters: {
      path: {
        /** notifyTypeId */
        id: number;
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowNotifyType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowNotifyType"];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdNotifyTypesByIdInfo: {
    parameters: {
      path: {
        /** notifyTypeId */
        id: number;
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowNotifyTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowNotifyTypeInfo"];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdNotifyTypesCount: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdNotifyTypesInfo: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowNotifyTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowNotifyTypeInfo"][];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdNotifyTypesInfoCount: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdTriggers: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowTrigger */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowTrigger"][];
        };
      };
    };
  };
  getSystemWorkflowsByParentIdTriggersCount: {
    parameters: {
      path: {
        /** workflowId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowsTableTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowTableType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowTableType"][];
        };
      };
    };
  };
  getSystemWorkflowsTableTypesById: {
    parameters: {
      path: {
        /** tableTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowTableType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowTableType"];
        };
      };
    };
  };
  getSystemWorkflowsTableTypesByIdInfo: {
    parameters: {
      path: {
        /** tableTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowTableTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowTableTypeInfo"];
        };
      };
    };
  };
  getSystemWorkflowsTableTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getSystemWorkflowsTableTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowTableTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowTableTypeInfo"][];
        };
      };
    };
  };
  getSystemWorkflowsTableTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  putSystemWorkflowsUserdefinedfieldsById: {
    parameters: {
      path: {
        /** workflowActionUserDefinedFieldId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowActionUserDefinedField */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowActionUserDefinedField"];
        };
      };
    };
    /** workflowActionUserDefinedField */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkflowActionUserDefinedField"];
      };
    };
  };
  patchSystemWorkflowsUserdefinedfieldsById: {
    parameters: {
      path: {
        /** workflowActionUserDefinedFieldId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowActionUserDefinedField */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowActionUserDefinedField"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  deleteSystemWorkflowsUserdefinedfieldsActionsByParentId: {
    parameters: {
      path: {
        /** actionId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  postSystemWorkflowsUserdefinedfieldsEventsByGrandparentId: {
    parameters: {
      path: {
        /** eventId */
        grandparentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkflowActionUserDefinedField */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowActionUserDefinedField"];
        };
      };
    };
    /** workflowActionUserDefinedField */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkflowActionUserDefinedField"];
      };
    };
  };
  getSystemWorkflowsUserdefinedfieldsByGrandparentIdActionsByParentId: {
    parameters: {
      path: {
        /** actionId */
        parentId: number;
        /** evnetId */
        grandparentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkflowActionUserDefinedField */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkflowActionUserDefinedField"][];
        };
      };
    };
  };
  getTimeAccruals: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeAccrual */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrual"][];
        };
      };
    };
  };
  postTimeAccruals: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeAccrual */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrual"];
        };
      };
    };
    /** timeAccrual */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeAccrual"];
      };
    };
  };
  getTimeAccrualsById: {
    parameters: {
      path: {
        /** accrualId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeAccrual */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrual"];
        };
      };
    };
  };
  putTimeAccrualsById: {
    parameters: {
      path: {
        /** accrualId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeAccrual */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrual"];
        };
      };
    };
    /** timeAccrual */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeAccrual"];
      };
    };
  };
  deleteTimeAccrualsById: {
    parameters: {
      path: {
        /** accrualId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeAccrualsById: {
    parameters: {
      path: {
        /** accrualId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeAccrual */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrual"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeAccrualsByParentIdDetails: {
    parameters: {
      path: {
        /** accrualId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeAccrualDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrualDetail"][];
        };
      };
    };
  };
  postTimeAccrualsByParentIdDetails: {
    parameters: {
      path: {
        /** accrualId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeAccrualDetail */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrualDetail"];
        };
      };
    };
    /** timeAccrualDetail */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeAccrualDetail"];
      };
    };
  };
  getTimeAccrualsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** accrualId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeAccrualDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrualDetail"];
        };
      };
    };
  };
  putTimeAccrualsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** accrualId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeAccrualDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrualDetail"];
        };
      };
    };
    /** timeAccrualDetail */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeAccrualDetail"];
      };
    };
  };
  deleteTimeAccrualsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** accrualId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeAccrualsByParentIdDetailsById: {
    parameters: {
      path: {
        /** detailId */
        id: number;
        /** accrualId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeAccrualDetail */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeAccrualDetail"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeAccrualsByParentIdDetailsCount: {
    parameters: {
      path: {
        /** accrualId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeAccrualsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeActivitystopwatches: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ActivityStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStopwatch"][];
        };
      };
    };
  };
  postTimeActivitystopwatches: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityStopwatch */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStopwatch"];
        };
      };
    };
    /** activityStopwatch */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActivityStopwatch"];
      };
    };
  };
  getTimeActivitystopwatchesById: {
    parameters: {
      path: {
        /** activitystopwatcheId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStopwatch"];
        };
      };
    };
  };
  putTimeActivitystopwatchesById: {
    parameters: {
      path: {
        /** activitystopwatcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStopwatch"];
        };
      };
    };
    /** activityStopwatch */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActivityStopwatch"];
      };
    };
  };
  deleteTimeActivitystopwatchesById: {
    parameters: {
      path: {
        /** activitystopwatcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeActivitystopwatchesById: {
    parameters: {
      path: {
        /** activitystopwatcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ActivityStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ActivityStopwatch"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeActivitystopwatchesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeChargeCodes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ChargeCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCode"][];
        };
      };
    };
  };
  postTimeChargeCodes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ChargeCode */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCode"];
        };
      };
    };
    /** chargeCode */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChargeCode"];
      };
    };
  };
  getTimeChargeCodesById: {
    parameters: {
      path: {
        /** chargeCodeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ChargeCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCode"];
        };
      };
    };
  };
  putTimeChargeCodesById: {
    parameters: {
      path: {
        /** chargeCodeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ChargeCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCode"];
        };
      };
    };
    /** chargeCode */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChargeCode"];
      };
    };
  };
  deleteTimeChargeCodesById: {
    parameters: {
      path: {
        /** chargeCodeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeChargeCodesById: {
    parameters: {
      path: {
        /** chargeCodeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ChargeCode */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCode"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeChargeCodesByIdInfo: {
    parameters: {
      path: {
        /** chargeCodeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ChargeCodeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCodeInfo"];
        };
      };
    };
  };
  getTimeChargeCodesByIdUsages: {
    parameters: {
      path: {
        /** chargeCodeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getTimeChargeCodesByIdUsagesList: {
    parameters: {
      path: {
        /** chargeCodeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getTimeChargeCodesByParentIdExpenseTypes: {
    parameters: {
      path: {
        /** chargeCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ChargeCodeExpenseType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCodeExpenseType"][];
        };
      };
    };
  };
  postTimeChargeCodesByParentIdExpenseTypes: {
    parameters: {
      path: {
        /** chargeCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ChargeCodeExpenseType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCodeExpenseType"];
        };
      };
    };
    /** chargeCodeExpenseType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChargeCodeExpenseType"];
      };
    };
  };
  getTimeChargeCodesByParentIdExpenseTypesById: {
    parameters: {
      path: {
        /** expenseTypeId */
        id: number;
        /** chargeCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ChargeCodeExpenseType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCodeExpenseType"];
        };
      };
    };
  };
  putTimeChargeCodesByParentIdExpenseTypesById: {
    parameters: {
      path: {
        /** expenseTypeId */
        id: number;
        /** chargeCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ChargeCodeExpenseType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCodeExpenseType"];
        };
      };
    };
    /** chargeCodeExpenseType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChargeCodeExpenseType"];
      };
    };
  };
  deleteTimeChargeCodesByParentIdExpenseTypesById: {
    parameters: {
      path: {
        /** expenseTypeId */
        id: number;
        /** chargeCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeChargeCodesByParentIdExpenseTypesById: {
    parameters: {
      path: {
        /** expenseTypeId */
        id: number;
        /** chargeCodeId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ChargeCodeExpenseType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCodeExpenseType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeChargeCodesByParentIdExpenseTypesCount: {
    parameters: {
      path: {
        /** chargeCodeId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeChargeCodesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeChargeCodesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ChargeCodeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCodeInfo"][];
        };
      };
    };
  };
  getTimeChargeCodesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeEntries: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntry"][];
        };
      };
    };
  };
  postTimeEntries: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeEntry */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntry"];
        };
      };
    };
    /** timeEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeEntry"];
      };
    };
  };
  getTimeEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntry"];
        };
      };
    };
  };
  putTimeEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntry"];
        };
      };
    };
    /** timeEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeEntry"];
      };
    };
  };
  deleteTimeEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeEntriesById: {
    parameters: {
      path: {
        /** entryId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntry"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeEntriesByParentIdAudits: {
    parameters: {
      path: {
        /** entryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeEntryAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntryAudit"][];
        };
      };
    };
  };
  getTimeEntriesByParentIdAuditsById: {
    parameters: {
      path: {
        /** auditId */
        id: number;
        /** entryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeEntryAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntryAudit"];
        };
      };
    };
  };
  getTimeEntriesByParentIdAuditsCount: {
    parameters: {
      path: {
        /** entryId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeEntriesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  postTimeEntriesDefaults: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeEntry */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeEntry"];
        };
      };
    };
    /** timeEntry */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeEntry"];
      };
    };
  };
  getTimeInfoChargeCodeExpenseTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ChargeCodeExpenseType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ChargeCodeExpenseType"][];
        };
      };
    };
  };
  getTimeInfoChargeCodeExpenseTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeSchedulestopwatches: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of ScheduleStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStopwatch"][];
        };
      };
    };
  };
  postTimeSchedulestopwatches: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleStopwatch */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStopwatch"];
        };
      };
    };
    /** scheduleStopwatch */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleStopwatch"];
      };
    };
  };
  getTimeSchedulestopwatchesById: {
    parameters: {
      path: {
        /** schedulestopwatcheId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStopwatch"];
        };
      };
    };
  };
  putTimeSchedulestopwatchesById: {
    parameters: {
      path: {
        /** schedulestopwatcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStopwatch"];
        };
      };
    };
    /** scheduleStopwatch */
    requestBody: {
      content: {
        "application/json": components["schemas"]["ScheduleStopwatch"];
      };
    };
  };
  deleteTimeSchedulestopwatchesById: {
    parameters: {
      path: {
        /** schedulestopwatcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeSchedulestopwatchesById: {
    parameters: {
      path: {
        /** schedulestopwatcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** ScheduleStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["ScheduleStopwatch"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeSchedulestopwatchesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeSheets: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeSheet */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeSheet"][];
        };
      };
    };
  };
  getTimeSheetsById: {
    parameters: {
      path: {
        /** sheetId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeSheet */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeSheet"];
        };
      };
    };
  };
  postTimeSheetsByIdApprove: {
    parameters: {
      path: {
        /** sheetId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
    /** sheetId */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeSheetTierUpdate"];
      };
    };
  };
  postTimeSheetsByIdReject: {
    parameters: {
      path: {
        /** sheetId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  postTimeSheetsByIdReverse: {
    parameters: {
      path: {
        /** sheetId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  postTimeSheetsByIdSubmit: {
    parameters: {
      path: {
        /** sheetId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** SuccessResponse */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["SuccessResponse"];
        };
      };
    };
  };
  getTimeSheetsByParentIdAudits: {
    parameters: {
      path: {
        /** sheetId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimeSheetAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeSheetAudit"][];
        };
      };
    };
  };
  getTimeSheetsByParentIdAuditsById: {
    parameters: {
      path: {
        /** auditId */
        id: number;
        /** sheetId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimeSheetAudit */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimeSheetAudit"];
        };
      };
    };
  };
  getTimeSheetsByParentIdAuditsCount: {
    parameters: {
      path: {
        /** sheetId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeSheetsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeTicketstopwatches: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TicketStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketStopwatch"][];
        };
      };
    };
  };
  postTimeTicketstopwatches: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketStopwatch */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketStopwatch"];
        };
      };
    };
    /** ticketStopwatch */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketStopwatch"];
      };
    };
  };
  getTimeTicketstopwatchesById: {
    parameters: {
      path: {
        /** ticketstopwatcheId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketStopwatch"];
        };
      };
    };
  };
  putTimeTicketstopwatchesById: {
    parameters: {
      path: {
        /** ticketstopwatcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketStopwatch"];
        };
      };
    };
    /** ticketStopwatch */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketStopwatch"];
      };
    };
  };
  deleteTimeTicketstopwatchesById: {
    parameters: {
      path: {
        /** ticketstopwatcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeTicketstopwatchesById: {
    parameters: {
      path: {
        /** ticketstopwatcheId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TicketStopwatch */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TicketStopwatch"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeTicketstopwatchesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeTimePeriodSetups: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimePeriodSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimePeriodSetup"][];
        };
      };
    };
  };
  postTimeTimePeriodSetups: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimePeriodSetup */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimePeriodSetup"];
        };
      };
    };
    /** timePeriodSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimePeriodSetup"];
      };
    };
  };
  getTimeTimePeriodSetupsById: {
    parameters: {
      path: {
        /** timePeriodSetupId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimePeriodSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimePeriodSetup"];
        };
      };
    };
  };
  putTimeTimePeriodSetupsById: {
    parameters: {
      path: {
        /** timePeriodSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimePeriodSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimePeriodSetup"];
        };
      };
    };
    /** timePeriodSetup */
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimePeriodSetup"];
      };
    };
  };
  deleteTimeTimePeriodSetupsById: {
    parameters: {
      path: {
        /** timePeriodSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeTimePeriodSetupsById: {
    parameters: {
      path: {
        /** timePeriodSetupId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimePeriodSetup */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimePeriodSetup"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeTimePeriodSetupsByParentIdPeriods: {
    parameters: {
      path: {
        /** timePeriodSetupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of TimePeriod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimePeriod"][];
        };
      };
    };
  };
  getTimeTimePeriodSetupsByParentIdPeriodsById: {
    parameters: {
      path: {
        /** periodId */
        id: number;
        /** timePeriodSetupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimePeriod */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimePeriod"];
        };
      };
    };
  };
  getTimeTimePeriodSetupsByParentIdPeriodsCount: {
    parameters: {
      path: {
        /** timePeriodSetupId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeTimePeriodSetupsCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeTimePeriodSetupsDefault: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** TimePeriodSetupDefaults */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["TimePeriodSetupDefaults"];
        };
      };
    };
  };
  getTimeWorkRoles: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRole"][];
        };
      };
    };
  };
  postTimeWorkRoles: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRole */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRole"];
        };
      };
    };
    /** workRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkRole"];
      };
    };
  };
  getTimeWorkRolesById: {
    parameters: {
      path: {
        /** workRoleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRole"];
        };
      };
    };
  };
  putTimeWorkRolesById: {
    parameters: {
      path: {
        /** workRoleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRole"];
        };
      };
    };
    /** workRole */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkRole"];
      };
    };
  };
  deleteTimeWorkRolesById: {
    parameters: {
      path: {
        /** workRoleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeWorkRolesById: {
    parameters: {
      path: {
        /** workRoleId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRole */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRole"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeWorkRolesByIdInfo: {
    parameters: {
      path: {
        /** workRoleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRoleInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleInfo"];
        };
      };
    };
  };
  getTimeWorkRolesByIdUsages: {
    parameters: {
      path: {
        /** workRoleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getTimeWorkRolesByIdUsagesList: {
    parameters: {
      path: {
        /** workRoleId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getTimeWorkRolesByParentIdLocations: {
    parameters: {
      path: {
        /** workRoleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkRoleLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleLocation"][];
        };
      };
    };
  };
  postTimeWorkRolesByParentIdLocations: {
    parameters: {
      path: {
        /** workRoleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRoleLocation */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleLocation"];
        };
      };
    };
    /** workRoleLocation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkRoleLocation"];
      };
    };
  };
  getTimeWorkRolesByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** workRoleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRoleLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleLocation"];
        };
      };
    };
  };
  putTimeWorkRolesByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** workRoleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRoleLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleLocation"];
        };
      };
    };
    /** workRoleLocation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkRoleLocation"];
      };
    };
  };
  deleteTimeWorkRolesByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** workRoleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeWorkRolesByParentIdLocationsById: {
    parameters: {
      path: {
        /** locationId */
        id: number;
        /** workRoleId */
        parentId: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkRoleLocation */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleLocation"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeWorkRolesByParentIdLocationsCount: {
    parameters: {
      path: {
        /** workRoleId */
        parentId: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeWorkRolesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeWorkRolesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkRoleInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkRoleInfo"][];
        };
      };
    };
  };
  getTimeWorkRolesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeWorkTypes: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of WorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkType"][];
        };
      };
    };
  };
  postTimeWorkTypes: {
    parameters: {
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkType */
      201: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkType"];
        };
      };
    };
    /** workType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkType"];
      };
    };
  };
  getTimeWorkTypesById: {
    parameters: {
      path: {
        /** workTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkType"];
        };
      };
    };
  };
  putTimeWorkTypesById: {
    parameters: {
      path: {
        /** workTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkType"];
        };
      };
    };
    /** workType */
    requestBody: {
      content: {
        "application/json": components["schemas"]["WorkType"];
      };
    };
  };
  deleteTimeWorkTypesById: {
    parameters: {
      path: {
        /** workTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** No Content */
      204: never;
    };
  };
  patchTimeWorkTypesById: {
    parameters: {
      path: {
        /** workTypeId */
        id: number;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkType */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkType"];
        };
      };
    };
    /** List of PatchOperation */
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchOperation"][];
      };
    };
  };
  getTimeWorkTypesByIdInfo: {
    parameters: {
      path: {
        /** WorkTypeInfoId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** WorkTypeInfo */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkTypeInfo"];
        };
      };
    };
  };
  getTimeWorkTypesByIdUsages: {
    parameters: {
      path: {
        /** workTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getTimeWorkTypesByIdUsagesList: {
    parameters: {
      path: {
        /** workTypeId */
        id: number;
      };
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of Usage */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Usage"][];
        };
      };
    };
  };
  getTimeWorkTypesCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
  getTimeWorkTypesInfo: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** List of workTypeInfoses */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["WorkTypeInfo"][];
        };
      };
    };
  };
  getTimeWorkTypesInfoCount: {
    parameters: {
      query: {
        conditions?: string;
        childConditions?: string;
        customFieldConditions?: string;
        orderBy?: string;
        fields?: string;
        page?: number | null;
        pageSize?: number | null;
        pageId?: number | null;
      };
      header: {
        clientId: string;
      };
    };
    responses: {
      /** Count */
      200: {
        content: {
          "application/vnd.connectwise.com+json; version=2022.1": components["schemas"]["Count"];
        };
      };
    };
  };
}

export interface external {}
